<?xml version="1.0" encoding="UTF-8"?>
<rules>
  <rule key="AbstractClassConstructorCanBeMadeProtected">
    <priority>MINOR</priority>
    <name><![CDATA[Constructor of an abstract class can be made protected]]></name>
    <description><![CDATA[Constructor of an abstract class can be made protected]]></description>
  </rule>
  <rule key="AccessRightsInText">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot access symbol in text argument]]></name>
    <description><![CDATA[Cannot access symbol in text argument]]></description>
  </rule>
  <rule key="AccessToDisposedClosure">
    <priority>MAJOR</priority>
    <name><![CDATA[Access to disposed closure]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=AccessToDisposedClosure">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AccessToForEachVariableInClosure">
    <priority>MAJOR</priority>
    <name><![CDATA[Access to foreach variable in closure]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=AccessToForEachVariableInClosure">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AccessToModifiedClosure">
    <priority>MAJOR</priority>
    <name><![CDATA[Access to modified closure]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=AccessToModifiedClosure">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AccessToStaticMemberViaDerivedType">
    <priority>MAJOR</priority>
    <name><![CDATA[Access to a static member of a type via a derived type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=AccessToStaticMemberViaDerivedType">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AmdDependencyPathProblem">
    <priority>INFO</priority>
    <name><![CDATA[Check 'amd-dependency' the same way as require() argument]]></name>
    <description><![CDATA[Check 'amd-dependency' the same way as require() argument]]></description>
  </rule>
  <rule key="AmdExternalModule">
    <priority>INFO</priority>
    <name><![CDATA[AMD module may be converted to external module]]></name>
    <description><![CDATA[AMD module may be converted to external module]]></description>
  </rule>
  <rule key="AngularHtml.Banana">
    <priority>MAJOR</priority>
    <name><![CDATA['Banana in a box' [()] violation in Angular 2 binding]]></name>
    <description><![CDATA['Banana in a box' [()] violation in Angular 2 binding]]></description>
  </rule>
  <rule key="AnnotateCanBeNullParameter">
    <priority>INFO</priority>
    <name><![CDATA[Declaration nullability inferred: Parameter is inferred to be nullable]]></name>
    <description><![CDATA[Declaration nullability inferred: Parameter is inferred to be nullable]]></description>
  </rule>
  <rule key="AnnotateCanBeNullTypeMember">
    <priority>INFO</priority>
    <name><![CDATA[Declaration nullability inferred: Type member is inferred to be nullable]]></name>
    <description><![CDATA[Declaration nullability inferred: Type member is inferred to be nullable]]></description>
  </rule>
  <rule key="AnnotateNotNullParameter">
    <priority>INFO</priority>
    <name><![CDATA[Declaration nullability inferred: Parameter is inferred to be not null]]></name>
    <description><![CDATA[Declaration nullability inferred: Parameter is inferred to be not null]]></description>
  </rule>
  <rule key="AnnotateNotNullTypeMember">
    <priority>INFO</priority>
    <name><![CDATA[Declaration nullability inferred: Type member is inferred to be not null]]></name>
    <description><![CDATA[Declaration nullability inferred: Type member is inferred to be not null]]></description>
  </rule>
  <rule key="AnnotationConflictInHierarchy">
    <priority>MAJOR</priority>
    <name><![CDATA[Annotation conflict in hierarchy]]></name>
    <description><![CDATA[Annotation conflict in hierarchy]]></description>
  </rule>
  <rule key="AnnotationRedundancyAtValueType">
    <priority>MAJOR</priority>
    <name><![CDATA[Nullability attribute usage with declaration of void or value type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=AnnotationRedundancyAtValueType">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AnnotationRedundancyInHierarchy">
    <priority>MAJOR</priority>
    <name><![CDATA[Annotation duplicate in hierarchy]]></name>
    <description><![CDATA[Annotation duplicate in hierarchy]]></description>
  </rule>
  <rule key="ArgumentsStyleAnonymousFunction">
    <priority>MINOR</priority>
    <name><![CDATA[Use prefered argument style for anonymous functions]]></name>
    <description><![CDATA[Use prefered argument style for anonymous functions]]></description>
  </rule>
  <rule key="ArgumentsStyleLiteral">
    <priority>MINOR</priority>
    <name><![CDATA[Use prefered argument style for literal values]]></name>
    <description><![CDATA[Use prefered argument style for literal values]]></description>
  </rule>
  <rule key="ArgumentsStyleNamedExpression">
    <priority>MINOR</priority>
    <name><![CDATA[Use prefered argument style for named expressions]]></name>
    <description><![CDATA[Use prefered argument style for named expressions]]></description>
  </rule>
  <rule key="ArgumentsStyleOther">
    <priority>MINOR</priority>
    <name><![CDATA[Use prefered argument style]]></name>
    <description><![CDATA[Use prefered argument style]]></description>
  </rule>
  <rule key="ArgumentsStyleStringLiteral">
    <priority>MINOR</priority>
    <name><![CDATA[Use prefered argument style for string literal values]]></name>
    <description><![CDATA[Use prefered argument style for string literal values]]></description>
  </rule>
  <rule key="ArrangeAccessorOwnerBody">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred body style: Convert to property, indexer or event with preferred body style]]></name>
    <description><![CDATA[Use preferred body style: Convert to property, indexer or event with preferred body style]]></description>
  </rule>
  <rule key="ArrangeAttributes">
    <priority>INFO</priority>
    <name><![CDATA[Join or separate attributes is section]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ArrangeAttributes">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ArrangeConstructorOrDestructorBody">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred body style: Convert to constructor or destructor with preferred body style]]></name>
    <description><![CDATA[Use preferred body style: Convert to constructor or destructor with preferred body style]]></description>
  </rule>
  <rule key="ArrangeLocalFunctionBody">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred body style: Convert to local function with preferred body style]]></name>
    <description><![CDATA[Use preferred body style: Convert to local function with preferred body style]]></description>
  </rule>
  <rule key="ArrangeMethodOrOperatorBody">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred body style: Convert to method or operator with preferred body style]]></name>
    <description><![CDATA[Use preferred body style: Convert to method or operator with preferred body style]]></description>
  </rule>
  <rule key="ArrangeMissingParentheses">
    <priority>INFO</priority>
    <name><![CDATA[Add parentheses to avoid non-obvious precedence]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ArrangeMissingParentheses">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ArrangeModifiersOrder">
    <priority>INFO</priority>
    <name><![CDATA[Adjust modifiers declaration order]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ArrangeModifiersOrder">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ArrangeRedundantParentheses">
    <priority>MINOR</priority>
    <name><![CDATA[Remove redundant parentheses]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ArrangeRedundantParentheses">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ArrangeStaticMemberQualifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Add/remove qualifier for static members]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ArrangeStaticMemberQualifier">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ArrangeThisQualifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Add/remove 'this.' qualifier]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ArrangeThisQualifier">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ArrangeTypeMemberModifiers">
    <priority>MINOR</priority>
    <name><![CDATA[Use explicit or implicit modifier definition for type members]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ArrangeTypeMemberModifiers">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ArrangeTypeModifiers">
    <priority>MINOR</priority>
    <name><![CDATA[Use explicit or implicit modifier definition for types]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ArrangeTypeModifiers">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="Asp.ContentPlaceholderNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Unknown content placeholder]]></name>
    <description><![CDATA[Unknown content placeholder]]></description>
  </rule>
  <rule key="Asp.CustomPageParserFilterType">
    <priority>MAJOR</priority>
    <name><![CDATA[Unsupported pageParserFilterType]]></name>
    <description><![CDATA[Unsupported pageParserFilterType]]></description>
  </rule>
  <rule key="Asp.DeadCode">
    <priority>MAJOR</priority>
    <name><![CDATA[ASP.NET Dead Code]]></name>
    <description><![CDATA[ASP.NET Dead Code]]></description>
  </rule>
  <rule key="Asp.Entity">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown html entity]]></name>
    <description><![CDATA[Unknown html entity]]></description>
  </rule>
  <rule key="Asp.Image">
    <priority>MAJOR</priority>
    <name><![CDATA[Wrong image size]]></name>
    <description><![CDATA[Wrong image size]]></description>
  </rule>
  <rule key="Asp.InvalidControlType">
    <priority>CRITICAL</priority>
    <name><![CDATA[Invalid control type]]></name>
    <description><![CDATA[Invalid control type]]></description>
  </rule>
  <rule key="Asp.NotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Unknown symbol]]></name>
    <description><![CDATA[Unknown symbol]]></description>
  </rule>
  <rule key="Asp.ResolveWarning">
    <priority>MAJOR</priority>
    <name><![CDATA[ASP.NET Resolve Warning]]></name>
    <description><![CDATA[ASP.NET Resolve Warning]]></description>
  </rule>
  <rule key="Asp.SkinNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Unknown skin]]></name>
    <description><![CDATA[Unknown skin]]></description>
  </rule>
  <rule key="Asp.TagAttributeWithOptionalValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Attribute with optional value problem]]></name>
    <description><![CDATA[Attribute with optional value problem]]></description>
  </rule>
  <rule key="Asp.ThemeNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Unknown theme]]></name>
    <description><![CDATA[Unknown theme]]></description>
  </rule>
  <rule key="Asp.Warning">
    <priority>MAJOR</priority>
    <name><![CDATA[ASP.NET Warning]]></name>
    <description><![CDATA[ASP.NET Warning]]></description>
  </rule>
  <rule key="AspOdsMethodReferenceResolveError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Object data source method resolve problem]]></name>
    <description><![CDATA[Object data source method resolve problem]]></description>
  </rule>
  <rule key="AspUnusedRegisterDirectiveHighlighting">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused register directive]]></name>
    <description><![CDATA[Unused register directive]]></description>
  </rule>
  <rule key="AssignNullToNotNullAttribute">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible 'null' assignment to entity with '[NotNull]' attribute]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=AssignNullToNotNullAttribute">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AssignToConstant">
    <priority>CRITICAL</priority>
    <name><![CDATA[Assignment to constant]]></name>
    <description><![CDATA[Assignment to constant]]></description>
  </rule>
  <rule key="AssignToImplicitGlobalInFunctionScope">
    <priority>MAJOR</priority>
    <name><![CDATA[Assignment to an implicitly declared global variable]]></name>
    <description><![CDATA[Assignment to an implicitly declared global variable]]></description>
  </rule>
  <rule key="AssignedValueIsNeverUsed">
    <priority>MAJOR</priority>
    <name><![CDATA[Assigned value is never used]]></name>
    <description><![CDATA[Assigned value is never used]]></description>
  </rule>
  <rule key="AssignedValueWontBeAssignedToCorrespondingField">
    <priority>MAJOR</priority>
    <name><![CDATA[Parameter-property value assigned inside constructor won't be assigned to class property]]></name>
    <description><![CDATA[Parameter-property value assigned inside constructor won't be assigned to class property]]></description>
  </rule>
  <rule key="AssignmentInConditionExpression">
    <priority>MAJOR</priority>
    <name><![CDATA[Assignment to a variable inside a conditional statement]]></name>
    <description><![CDATA[Assignment to a variable inside a conditional statement]]></description>
  </rule>
  <rule key="AssignmentInConditionalExpression">
    <priority>MAJOR</priority>
    <name><![CDATA[Assignment in conditional expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=AssignmentInConditionalExpression">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AssignmentIsFullyDiscarded">
    <priority>MAJOR</priority>
    <name><![CDATA[Assignment results are fully discarded]]></name>
    <description><![CDATA[Assignment results are fully discarded]]></description>
  </rule>
  <rule key="Asxx.PathError">
    <priority>MAJOR</priority>
    <name><![CDATA[Path error]]></name>
    <description><![CDATA[Path error]]></description>
  </rule>
  <rule key="AutoPropertyCanBeMadeGetOnly.Global">
    <priority>INFO</priority>
    <name><![CDATA[Auto-property can be made get-only: Non-private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=AutoPropertyCanBeMadeGetOnly.Global">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AutoPropertyCanBeMadeGetOnly.Local">
    <priority>INFO</priority>
    <name><![CDATA[Auto-property can be made get-only: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=AutoPropertyCanBeMadeGetOnly.Local">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="BaseMemberHasParams">
    <priority>MAJOR</priority>
    <name><![CDATA[Base member has 'params' parameter, but overrider hasn't]]></name>
    <description><![CDATA[Base member has 'params' parameter, but overrider hasn't]]></description>
  </rule>
  <rule key="BaseMethodCallWithDefaultParameter">
    <priority>MAJOR</priority>
    <name><![CDATA[Call to base member with implicit default parameters]]></name>
    <description><![CDATA[Call to base member with implicit default parameters]]></description>
  </rule>
  <rule key="BaseObjectEqualsIsObjectEquals">
    <priority>MAJOR</priority>
    <name><![CDATA[Call to 'base.Equals(...)' is reference equality]]></name>
    <description><![CDATA[Call to 'base.Equals(...)' is reference equality]]></description>
  </rule>
  <rule key="BaseObjectGetHashCodeCallInGetHashCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Overridden GetHashCode calls base 'Object.GetHashCode()']]></name>
    <description><![CDATA[Overridden GetHashCode calls base 'Object.GetHashCode()']]></description>
  </rule>
  <rule key="BitwiseOperatorOnEnumWithoutFlags">
    <priority>MAJOR</priority>
    <name><![CDATA[Bitwise operation on enum which is not marked by [Flags] attribute]]></name>
    <description><![CDATA[Bitwise operation on enum which is not marked by [Flags] attribute]]></description>
  </rule>
  <rule key="BlockScopeRedeclaration">
    <priority>CRITICAL</priority>
    <name><![CDATA[Redeclaration of let/const]]></name>
    <description><![CDATA[Redeclaration of let/const]]></description>
  </rule>
  <rule key="BuiltInTypeReferenceStyle">
    <priority>MINOR</priority>
    <name><![CDATA[Replace built-in type reference with a CLR type name or a keyword]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=BuiltInTypeReferenceStyle">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0078">
    <priority>MAJOR</priority>
    <name><![CDATA[The 'l' suffix is easily confused with the digit '1']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/s74dtt7k.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0108,CS0114">
    <priority>MAJOR</priority>
    <name><![CDATA[Keyword 'new' is required]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CSharpWarnings_CS0108_CS0114">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0109">
    <priority>MAJOR</priority>
    <name><![CDATA[Keyword 'new' is redundant]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/css4y2c4.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0162">
    <priority>MAJOR</priority>
    <name><![CDATA[Code is unreachable]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/c0h4st1x.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0183">
    <priority>MAJOR</priority>
    <name><![CDATA[Given expression is always of the provided type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/sb7782xb.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0184">
    <priority>MAJOR</priority>
    <name><![CDATA[Given expression is never of the provided type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/230kb9yt.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0197">
    <priority>MAJOR</priority>
    <name><![CDATA[Taking address of marshal-by-reference class field]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/y545659k.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0252,CS0253">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible unintended reference comparison]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CSharpWarnings_CS0252_CS0253">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0420">
    <priority>MAJOR</priority>
    <name><![CDATA[Reference to a volatile field will not be treated as volatile]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/4bw5ewxy.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0465">
    <priority>MAJOR</priority>
    <name><![CDATA[Introducing a 'Finalize' method can interfere with destructor invocation]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/02wtfwbt.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0469">
    <priority>MAJOR</priority>
    <name><![CDATA['goto case' value is not implicitly convertible to required type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/ms228370.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0612">
    <priority>MAJOR</priority>
    <name><![CDATA[Use of obsolete symbol (without message)]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/h0h063ka.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0618">
    <priority>MAJOR</priority>
    <name><![CDATA[Use of obsolete symbol]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/x5ye6x1e.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0628">
    <priority>MAJOR</priority>
    <name><![CDATA[Declaring new protected member in sealed class is the same as declaring it as private]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/7x8ekes3.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0642">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken empty statement]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/9x19t380.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0657">
    <priority>MAJOR</priority>
    <name><![CDATA['attribute modifier' is not a valid attribute location for this declaration. All attributes in this block will be ignored]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/c6hdfbk4.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0658">
    <priority>MAJOR</priority>
    <name><![CDATA['attribute modifier' is not a recognized attribute location. All attributes in this block will be ignored]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/4ky08ezz.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0659">
    <priority>MAJOR</priority>
    <name><![CDATA[Class overrides Object.Equals(object o) but not Object.GetHashCode()]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/xxhbfytk.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0660,CS0661">
    <priority>MAJOR</priority>
    <name><![CDATA[Operator '==' or operator '!=' with 'Object.Equals(object o)' and 'Object.GetHashCode()' not overridden]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CSharpWarnings_CS0660_CS0661">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0665">
    <priority>MAJOR</priority>
    <name><![CDATA[Assignment in conditional expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/c1sde1ax.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0672">
    <priority>MAJOR</priority>
    <name><![CDATA[Member overrides obsolete member]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/9dzeyth8.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0693">
    <priority>MAJOR</priority>
    <name><![CDATA[Type parameter has the same name as a type parameter from the outer type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/0ah54ze5.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1030">
    <priority>MAJOR</priority>
    <name><![CDATA['#warning' directive]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/ckcykyd4.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1058">
    <priority>MAJOR</priority>
    <name><![CDATA[A previous catch clause already catches all exceptions]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/ms228623.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1066">
    <priority>MAJOR</priority>
    <name><![CDATA[Default value specified for parameter will have no effect because it applies to a member that is used in contexts that do not allow optional arguments]]></name>
    <description><![CDATA[Default value specified for parameter will have no effect because it applies to a member that is used in contexts that do not allow optional arguments]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1522">
    <priority>MAJOR</priority>
    <name><![CDATA[Empty switch block]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/x68b4s45.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1570">
    <priority>MAJOR</priority>
    <name><![CDATA[Invalid XML in XML comment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/c20zzdxx.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1571">
    <priority>MAJOR</priority>
    <name><![CDATA[Duplicate param tag in XML comment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/a5c6cbk0.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1573">
    <priority>MAJOR</priority>
    <name><![CDATA[Parameter has no matching param tag in the XML comment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/01248w2b.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1574">
    <priority>MAJOR</priority>
    <name><![CDATA[Ambiguous reference in XML comment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/26x4hk2a.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1580">
    <priority>MAJOR</priority>
    <name><![CDATA[Incorrect signature in XML comment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/03t96cfx.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1584">
    <priority>MAJOR</priority>
    <name><![CDATA[Syntax error in XML comment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/hz13h4se.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1584,CS1711,CS1572,CS1581,CS1580">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot resolve reference in XML comment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CSharpWarnings_CS1584_CS1711_CS1572_CS1581_CS1580">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1587">
    <priority>MAJOR</priority>
    <name><![CDATA[XML comment is not placed on a valid language element]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/d3x6ez1z.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1589">
    <priority>MAJOR</priority>
    <name><![CDATA[Unable to include XML fragment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/3y857kz5.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1590">
    <priority>MAJOR</priority>
    <name><![CDATA[Invalid XML include element]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/549c3y6s.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1591">
    <priority>MAJOR</priority>
    <name><![CDATA[Missing XML comment for publicly visible type or member]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/zk18c1w9.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1592">
    <priority>MAJOR</priority>
    <name><![CDATA[Badly formed XML in included comments file]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/89c331t3.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1710">
    <priority>MAJOR</priority>
    <name><![CDATA[Duplicate typeparam tag in XML comment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/k5ya7w1x.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1712">
    <priority>MAJOR</priority>
    <name><![CDATA[Type parameter has no matching typeparam tag in the XML comment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/t8zca749.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1717">
    <priority>MAJOR</priority>
    <name><![CDATA[Assignment made to same variable]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/a1kzfw0z.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1723">
    <priority>MAJOR</priority>
    <name><![CDATA[XML comment has cref attribute that refers to a type parameter]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/ms228603.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1911">
    <priority>MAJOR</priority>
    <name><![CDATA[Access to a member through 'base' keyword from anonymous method, lambda expression, query expression or iterator results in unverifiable code]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/ms228459.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1957">
    <priority>MAJOR</priority>
    <name><![CDATA[Multiple override candidates at run-time]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/bb882562.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1981">
    <priority>MAJOR</priority>
    <name><![CDATA[Using 'is' to test compatibility with 'dynamic' is essentially identical to testing compatibility with 'Object' and will succeed for all non-null values]]></name>
    <description><![CDATA[Using 'is' to test compatibility with 'dynamic' is essentially identical to testing compatibility with 'Object' and will succeed for all non-null values]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1998">
    <priority>MAJOR</priority>
    <name><![CDATA[Async function without await expression]]></name>
    <description><![CDATA[Async function without await expression]]></description>
  </rule>
  <rule key="CSharpWarnings::CS4014">
    <priority>MAJOR</priority>
    <name><![CDATA[Async method invocation without await expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/hh873131.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS7095">
    <priority>MAJOR</priority>
    <name><![CDATA[Filter expression is a constant, consider removing the filter]]></name>
    <description><![CDATA[Filter expression is a constant, consider removing the filter]]></description>
  </rule>
  <rule key="CSharpWarnings::CS8094">
    <priority>MAJOR</priority>
    <name><![CDATA[Alignment value 'value' has a magnitude greater than 'magnitude limit' and may result in a large formatted string.]]></name>
    <description><![CDATA[Alignment value 'value' has a magnitude greater than 'magnitude limit' and may result in a large formatted string.]]></description>
  </rule>
  <rule key="CSharpWarnings::WME006">
    <priority>MAJOR</priority>
    <name><![CDATA[Namespace should be default namespace of this project]]></name>
    <description><![CDATA[Namespace should be default namespace of this project]]></description>
  </rule>
  <rule key="CallerCalleeUsing">
    <priority>MAJOR</priority>
    <name><![CDATA[Using of 'arguments.caller' and 'arguments.callee']]></name>
    <description><![CDATA[Using of 'arguments.caller' and 'arguments.callee']]></description>
  </rule>
  <rule key="CallerCalleeUsingError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Using of 'arguments.caller' and 'arguments.callee' in 'strict mode']]></name>
    <description><![CDATA[Using of 'arguments.caller' and 'arguments.callee' in 'strict mode']]></description>
  </rule>
  <rule key="CanBeReplacedWithTryCastAndCheckForNull">
    <priority>INFO</priority>
    <name><![CDATA[Type check and casts can be replaced with try cast]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CanBeReplacedWithTryCastAndCheckForNull">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CannotApplyEqualityOperatorToType">
    <priority>MAJOR</priority>
    <name><![CDATA[Compare with '==' types marked by 'CannotApplyEqualityOperatorAttribute']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CannotApplyEqualityOperatorToType">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CenterTagIsObsolete">
    <priority>MAJOR</priority>
    <name><![CDATA[Obsolete tags and attributes: &lt;center&gt; is obsolete]]></name>
    <description><![CDATA[Obsolete tags and attributes: &lt;center&gt; is obsolete]]></description>
  </rule>
  <rule key="CheckForReferenceEqualityInstead.1">
    <priority>INFO</priority>
    <name><![CDATA[Check for reference equality instead: Check for reference equality instead]]></name>
    <description><![CDATA[Check for reference equality instead: Check for reference equality instead]]></description>
  </rule>
  <rule key="CheckForReferenceEqualityInstead.2">
    <priority>INFO</priority>
    <name><![CDATA[Check for reference equality instead: Check for reference equality instead]]></name>
    <description><![CDATA[Check for reference equality instead: Check for reference equality instead]]></description>
  </rule>
  <rule key="CheckNamespace">
    <priority>MAJOR</priority>
    <name><![CDATA[Namespace does not correspond to file location]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CheckNamespace">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="Class">
    <priority>INFO</priority>
    <name><![CDATA[Class emulation may be converted to class]]></name>
    <description><![CDATA[Class emulation may be converted to class]]></description>
  </rule>
  <rule key="ClassCanBeSealed.Global">
    <priority>INFO</priority>
    <name><![CDATA[Class can be made sealed(non-inheritable): Non-private accessibility]]></name>
    <description><![CDATA[Class can be made sealed(non-inheritable): Non-private accessibility]]></description>
  </rule>
  <rule key="ClassCanBeSealed.Local">
    <priority>INFO</priority>
    <name><![CDATA[Class can be made sealed(non-inheritable): Private accessibility]]></name>
    <description><![CDATA[Class can be made sealed(non-inheritable): Private accessibility]]></description>
  </rule>
  <rule key="ClassCannotBeInstantiated">
    <priority>MAJOR</priority>
    <name><![CDATA[Class cannot be instantiated]]></name>
    <description><![CDATA[Class cannot be instantiated]]></description>
  </rule>
  <rule key="ClassNeverInstantiated.Global">
    <priority>INFO</priority>
    <name><![CDATA[Class is never instantiated: Non-private accessibility]]></name>
    <description><![CDATA[Class is never instantiated: Non-private accessibility]]></description>
  </rule>
  <rule key="ClassNeverInstantiated.Local">
    <priority>INFO</priority>
    <name><![CDATA[Class is never instantiated: Private accessibility]]></name>
    <description><![CDATA[Class is never instantiated: Private accessibility]]></description>
  </rule>
  <rule key="ClassWithVirtualMembersNeverInherited.Global">
    <priority>INFO</priority>
    <name><![CDATA[Class with virtual(overridable) members never inherited: Non-private accessibility]]></name>
    <description><![CDATA[Class with virtual(overridable) members never inherited: Non-private accessibility]]></description>
  </rule>
  <rule key="ClassWithVirtualMembersNeverInherited.Local">
    <priority>INFO</priority>
    <name><![CDATA[Class with virtual(overridable) members never inherited: Private accessibility]]></name>
    <description><![CDATA[Class with virtual(overridable) members never inherited: Private accessibility]]></description>
  </rule>
  <rule key="ClearAttributeIsObsolete">
    <priority>MAJOR</priority>
    <name><![CDATA[Obsolete tags and attributes: Attribute 'clear' is obsolete]]></name>
    <description><![CDATA[Obsolete tags and attributes: Attribute 'clear' is obsolete]]></description>
  </rule>
  <rule key="ClearAttributeIsObsolete.All">
    <priority>MAJOR</priority>
    <name><![CDATA[Obsolete tags and attributes: Attribute 'clear' is obsolete]]></name>
    <description><![CDATA[Obsolete tags and attributes: Attribute 'clear' is obsolete]]></description>
  </rule>
  <rule key="ClosureOnModifiedVariable">
    <priority>MAJOR</priority>
    <name><![CDATA[Closure on a variable modified in loop of outer scope]]></name>
    <description><![CDATA[Closure on a variable modified in loop of outer scope]]></description>
  </rule>
  <rule key="CoVariantArrayConversion">
    <priority>MAJOR</priority>
    <name><![CDATA[Co-variant array conversion]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CoVariantArrayConversion">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CoercedEqualsUsing">
    <priority>MAJOR</priority>
    <name><![CDATA[Using of coerced equality: Using of coerced equality operator]]></name>
    <description><![CDATA[Using of coerced equality: Using of coerced equality operator]]></description>
  </rule>
  <rule key="CoercedEqualsUsingWithNullUndefined">
    <priority>INFO</priority>
    <name><![CDATA[Using of coerced equality: Using of coerced equality operator with 'null' or 'undefined']]></name>
    <description><![CDATA[Using of coerced equality: Using of coerced equality operator with 'null' or 'undefined']]></description>
  </rule>
  <rule key="CollectionNeverQueried.Global">
    <priority>MAJOR</priority>
    <name><![CDATA[Collection's content is never queried: Non-private accessibility]]></name>
    <description><![CDATA[Collection's content is never queried: Non-private accessibility]]></description>
  </rule>
  <rule key="CollectionNeverQueried.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Collection's content is never queried: Private accessibility]]></name>
    <description><![CDATA[Collection's content is never queried: Private accessibility]]></description>
  </rule>
  <rule key="CollectionNeverUpdated.Global">
    <priority>MAJOR</priority>
    <name><![CDATA[Collection is never updated: Non-private accessibility]]></name>
    <description><![CDATA[Collection is never updated: Non-private accessibility]]></description>
  </rule>
  <rule key="CollectionNeverUpdated.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Collection is never updated: Private accessibility]]></name>
    <description><![CDATA[Collection is never updated: Private accessibility]]></description>
  </rule>
  <rule key="CommaNotValidHere">
    <priority>CRITICAL</priority>
    <name><![CDATA[Comma is not valid here]]></name>
    <description><![CDATA[Comma is not valid here]]></description>
  </rule>
  <rule key="CommonJsExternalModule">
    <priority>INFO</priority>
    <name><![CDATA[CommonJs module may be converted to external module]]></name>
    <description><![CDATA[CommonJs module may be converted to external module]]></description>
  </rule>
  <rule key="CompareNonConstrainedGenericWithNull">
    <priority>INFO</priority>
    <name><![CDATA[Possible compare of value type with 'null']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CompareNonConstrainedGenericWithNull">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CompareOfFloatsByEqualityOperator">
    <priority>MAJOR</priority>
    <name><![CDATA[Equality comparison of floating point numbers]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=CompareOfFloatsByEqualityOperator">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConditionIsAlwaysConst">
    <priority>MAJOR</priority>
    <name><![CDATA[Condition is always constant]]></name>
    <description><![CDATA[Condition is always constant]]></description>
  </rule>
  <rule key="ConditionIsAlwaysTrueOrFalse">
    <priority>MAJOR</priority>
    <name><![CDATA[Expression is always 'true' or always 'false']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ConditionIsAlwaysTrueOrFalse">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConditionalTernaryEqualBranch">
    <priority>MAJOR</priority>
    <name><![CDATA['?:' expression has identical true and false branches]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ConditionalTernaryEqualBranch">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConstantConditionalAccessQualifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Conditional access qualifier expression is known to be null or not null]]></name>
    <description><![CDATA[Conditional access qualifier expression is known to be null or not null]]></description>
  </rule>
  <rule key="ConstantNullCoalescingCondition">
    <priority>MAJOR</priority>
    <name><![CDATA['??' condition is known to be null or not null]]></name>
    <description><![CDATA['??' condition is known to be null or not null]]></description>
  </rule>
  <rule key="ConstructorCallNotUsed">
    <priority>MAJOR</priority>
    <name><![CDATA[Constructor call is not used or possibly used for side-effects]]></name>
    <description><![CDATA[Constructor call is not used or possibly used for side-effects]]></description>
  </rule>
  <rule key="ConstructorInitializerLoop">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible cyclic constructor call]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ConstructorInitializerLoop">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ContainerAnnotationRedundancy">
    <priority>MAJOR</priority>
    <name><![CDATA[Container nullability attribute usage with declaration of non-container type]]></name>
    <description><![CDATA[Container nullability attribute usage with declaration of non-container type]]></description>
  </rule>
  <rule key="ContextValueIsProvided">
    <priority>INFO</priority>
    <name><![CDATA[Value of some context type is already provided]]></name>
    <description><![CDATA[Value of some context type is already provided]]></description>
  </rule>
  <rule key="ContractAnnotationNotParsed">
    <priority>MAJOR</priority>
    <name><![CDATA[Problem in contract annotation definition]]></name>
    <description><![CDATA[Problem in contract annotation definition]]></description>
  </rule>
  <rule key="ConvertClosureToMethodGroup">
    <priority>INFO</priority>
    <name><![CDATA[Convert lambda expression to method group]]></name>
    <description><![CDATA[Convert lambda expression to method group]]></description>
  </rule>
  <rule key="ConvertIfDoToWhile">
    <priority>INFO</priority>
    <name><![CDATA[Convert 'if do while' to 'while]]></name>
    <description><![CDATA[Convert 'if do while' to 'while]]></description>
  </rule>
  <rule key="ConvertIfStatementToConditionalTernaryExpression">
    <priority>INFO</priority>
    <name><![CDATA['if' statement can be re-written as '?:' expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ConvertIfStatementToConditionalTernaryExpression">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConvertIfStatementToNullCoalescingExpression">
    <priority>INFO</priority>
    <name><![CDATA['if' statement can be re-written as '??' expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ConvertIfStatementToNullCoalescingExpression">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConvertIfStatementToReturnStatement">
    <priority>MINOR</priority>
    <name><![CDATA['if-return' statement can be re-written as 'return' statement]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ConvertIfStatementToReturnStatement">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConvertIfStatementToSwitchStatement">
    <priority>MINOR</priority>
    <name><![CDATA[Convert 'if' statement to 'switch' statement]]></name>
    <description><![CDATA[Convert 'if' statement to 'switch' statement]]></description>
  </rule>
  <rule key="ConvertIfToOrExpression">
    <priority>INFO</priority>
    <name><![CDATA[Convert 'if' to '||']]></name>
    <description><![CDATA[Convert 'if' to '||']]></description>
  </rule>
  <rule key="ConvertNullableToShortForm">
    <priority>INFO</priority>
    <name><![CDATA[Convert 'Nullable&lt;T&gt;' to 'T?']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ConvertNullableToShortForm">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConvertToAutoProperty">
    <priority>INFO</priority>
    <name><![CDATA[Convert property to auto-property]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ConvertToAutoProperty">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConvertToAutoPropertyWhenPossible">
    <priority>MINOR</priority>
    <name><![CDATA[Convert property to auto-property (when possible)]]></name>
    <description><![CDATA[Convert property to auto-property (when possible)]]></description>
  </rule>
  <rule key="ConvertToAutoPropertyWithPrivateSetter">
    <priority>MINOR</priority>
    <name><![CDATA[Convert property to auto-property with private setter]]></name>
    <description><![CDATA[Convert property to auto-property with private setter]]></description>
  </rule>
  <rule key="ConvertToConstant.Global">
    <priority>MINOR</priority>
    <name><![CDATA[Convert local variable or field to constant: Non-private accessibility]]></name>
    <description><![CDATA[Convert local variable or field to constant: Non-private accessibility]]></description>
  </rule>
  <rule key="ConvertToConstant.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Convert local variable or field to constant: Private accessibility]]></name>
    <description><![CDATA[Convert local variable or field to constant: Private accessibility]]></description>
  </rule>
  <rule key="ConvertToLambdaExpression">
    <priority>INFO</priority>
    <name><![CDATA[Convert to lambda expression]]></name>
    <description><![CDATA[Convert to lambda expression]]></description>
  </rule>
  <rule key="ConvertToLambdaExpressionWhenPossible">
    <priority>INFO</priority>
    <name><![CDATA[Convert to lambda expression (when possible)]]></name>
    <description><![CDATA[Convert to lambda expression (when possible)]]></description>
  </rule>
  <rule key="ConvertToLocalFunction">
    <priority>INFO</priority>
    <name><![CDATA[Convert delegate variable to local function]]></name>
    <description><![CDATA[Convert delegate variable to local function]]></description>
  </rule>
  <rule key="ConvertToStaticClass">
    <priority>INFO</priority>
    <name><![CDATA[Convert to static class]]></name>
    <description><![CDATA[Convert to static class]]></description>
  </rule>
  <rule key="ConvertToVbAutoProperty">
    <priority>INFO</priority>
    <name><![CDATA[Convert property to auto-property]]></name>
    <description><![CDATA[Convert property to auto-property]]></description>
  </rule>
  <rule key="ConvertToVbAutoPropertyWhenPossible">
    <priority>MINOR</priority>
    <name><![CDATA[Convert property to auto-property when possible]]></name>
    <description><![CDATA[Convert property to auto-property when possible]]></description>
  </rule>
  <rule key="ConvertToVbAutoPropertyWithPrivateSetter">
    <priority>MINOR</priority>
    <name><![CDATA[Convert property to auto-property with private setter]]></name>
    <description><![CDATA[Convert property to auto-property with private setter]]></description>
  </rule>
  <rule key="CppAbstractVirtualFunctionCallInCtor">
    <priority>CRITICAL</priority>
    <name><![CDATA[Call to a virtual function inside a constructor/destructor will result in a pure virtual function call]]></name>
    <description><![CDATA[Call to a virtual function inside a constructor/destructor will result in a pure virtual function call]]></description>
  </rule>
  <rule key="CppAccessSpecifierWithNoDeclarations">
    <priority>INFO</priority>
    <name><![CDATA[Access specifier does not affect any declaration]]></name>
    <description><![CDATA[Access specifier does not affect any declaration]]></description>
  </rule>
  <rule key="CppAssignedValueIsNeverUsed">
    <priority>MAJOR</priority>
    <name><![CDATA[Assigned value is never used]]></name>
    <description><![CDATA[Assigned value is never used]]></description>
  </rule>
  <rule key="CppBooleanIncrementExpression">
    <priority>MAJOR</priority>
    <name><![CDATA[Incrementing expression of type bool]]></name>
    <description><![CDATA[Incrementing expression of type bool]]></description>
  </rule>
  <rule key="CppBoostFormatBadCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Bad format code for boost::format]]></name>
    <description><![CDATA[Bad format code for boost::format]]></description>
  </rule>
  <rule key="CppBoostFormatLegacyCode">
    <priority>INFO</priority>
    <name><![CDATA[Legacy format code for boost::format]]></name>
    <description><![CDATA[Legacy format code for boost::format]]></description>
  </rule>
  <rule key="CppBoostFormatMixedArgs">
    <priority>CRITICAL</priority>
    <name><![CDATA[Mixed serial and positional arguments for boost::format]]></name>
    <description><![CDATA[Mixed serial and positional arguments for boost::format]]></description>
  </rule>
  <rule key="CppBoostFormatTooFewArgs">
    <priority>CRITICAL</priority>
    <name><![CDATA[Not enough arguments in a call to boost::format]]></name>
    <description><![CDATA[Not enough arguments in a call to boost::format]]></description>
  </rule>
  <rule key="CppBoostFormatTooManyArgs">
    <priority>MAJOR</priority>
    <name><![CDATA[Too many arguments in a call to boost::format]]></name>
    <description><![CDATA[Too many arguments in a call to boost::format]]></description>
  </rule>
  <rule key="CppCStyleCast">
    <priority>INFO</priority>
    <name><![CDATA[C-style cast used instead of a C++ cast]]></name>
    <description><![CDATA[C-style cast used instead of a C++ cast]]></description>
  </rule>
  <rule key="CppCVQualifierCanNotBeAppliedToReference">
    <priority>MAJOR</priority>
    <name><![CDATA[Adding cv-qualifiers to references has no effect]]></name>
    <description><![CDATA[Adding cv-qualifiers to references has no effect]]></description>
  </rule>
  <rule key="CppClassDisallowLazyMerging">
    <priority>MAJOR</priority>
    <name><![CDATA[CppClassDisallowLazyMerging]]></name>
    <description><![CDATA[CppClassDisallowLazyMerging]]></description>
  </rule>
  <rule key="CppClassIsIncomplete">
    <priority>MAJOR</priority>
    <name><![CDATA[Use of an incomplete type inside a template]]></name>
    <description><![CDATA[Use of an incomplete type inside a template]]></description>
  </rule>
  <rule key="CppClassNeedsConstructorBecauseOfUninitializedMember">
    <priority>MAJOR</priority>
    <name><![CDATA[Class needs a user-defined constructor because of an uninitialized data member]]></name>
    <description><![CDATA[Class needs a user-defined constructor because of an uninitialized data member]]></description>
  </rule>
  <rule key="CppCompileTimeConstantCanBeReplacedWithBooleanConstant">
    <priority>INFO</priority>
    <name><![CDATA[Compile-time constant expression can be replaced with either 'true' or 'false']]></name>
    <description><![CDATA[Compile-time constant expression can be replaced with either 'true' or 'false']]></description>
  </rule>
  <rule key="CppConstValueFunctionReturnType">
    <priority>INFO</priority>
    <name><![CDATA[Function returns by const value]]></name>
    <description><![CDATA[Function returns by const value]]></description>
  </rule>
  <rule key="CppDeclarationHidesLocal">
    <priority>MAJOR</priority>
    <name><![CDATA[Hiding local declaration]]></name>
    <description><![CDATA[Hiding local declaration]]></description>
  </rule>
  <rule key="CppDeclarationSpecifierWithoutDeclarators">
    <priority>MAJOR</priority>
    <name><![CDATA[Declaration specifier with no declarators]]></name>
    <description><![CDATA[Declaration specifier with no declarators]]></description>
  </rule>
  <rule key="CppDeclaratorDisambiguatedAsFunction">
    <priority>MAJOR</priority>
    <name><![CDATA[Declarator disambiguated as a function declaration]]></name>
    <description><![CDATA[Declarator disambiguated as a function declaration]]></description>
  </rule>
  <rule key="CppDeclaratorMightNotBeInitialized">
    <priority>MAJOR</priority>
    <name><![CDATA[Local variable might not be initialized]]></name>
    <description><![CDATA[Local variable might not be initialized]]></description>
  </rule>
  <rule key="CppDeclaratorUsedBeforeInitialization">
    <priority>CRITICAL</priority>
    <name><![CDATA[Local variable used without being initialized]]></name>
    <description><![CDATA[Local variable used without being initialized]]></description>
  </rule>
  <rule key="CppDefaultCaseNotHandledInSwitchStatement">
    <priority>MAJOR</priority>
    <name><![CDATA[Default case is not handled in a switch statement]]></name>
    <description><![CDATA[Default case is not handled in a switch statement]]></description>
  </rule>
  <rule key="CppDefaultInitializationWithNoUserConstructor">
    <priority>MAJOR</priority>
    <name><![CDATA[Default initialization of a const-qualified object of a type without a user-provided default constructor]]></name>
    <description><![CDATA[Default initialization of a const-qualified object of a type without a user-provided default constructor]]></description>
  </rule>
  <rule key="CppDefaultIsUsedAsIdentifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Keyword 'default' is used as identifier]]></name>
    <description><![CDATA[Keyword 'default' is used as identifier]]></description>
  </rule>
  <rule key="CppDeletingVoidPointer">
    <priority>MAJOR</priority>
    <name><![CDATA[Deleting a void pointer]]></name>
    <description><![CDATA[Deleting a void pointer]]></description>
  </rule>
  <rule key="CppDependentTemplateWithoutTemplateKeyword">
    <priority>MAJOR</priority>
    <name><![CDATA[Dependent template without 'template' keyword]]></name>
    <description><![CDATA[Dependent template without 'template' keyword]]></description>
  </rule>
  <rule key="CppDependentTypeWithoutTypenameKeyword">
    <priority>MAJOR</priority>
    <name><![CDATA[Dependent type without 'typename' keyword]]></name>
    <description><![CDATA[Dependent type without 'typename' keyword]]></description>
  </rule>
  <rule key="CppDeprecatedEntity">
    <priority>MAJOR</priority>
    <name><![CDATA[Entity is deprecated]]></name>
    <description><![CDATA[Entity is deprecated]]></description>
  </rule>
  <rule key="CppDeprecatedRegisterStorageClassSpecifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Deprecated register storage class specifier]]></name>
    <description><![CDATA[Deprecated register storage class specifier]]></description>
  </rule>
  <rule key="CppDereferenceOperatorLimitExceeded">
    <priority>MAJOR</priority>
    <name><![CDATA[Dereference operator limit is exceeded]]></name>
    <description><![CDATA[Dereference operator limit is exceeded]]></description>
  </rule>
  <rule key="CppDiscardedPostfixOperatorResult">
    <priority>INFO</priority>
    <name><![CDATA[Result of a postfix operator is discarded]]></name>
    <description><![CDATA[Result of a postfix operator is discarded]]></description>
  </rule>
  <rule key="CppDoxygenSyntaxError">
    <priority>MAJOR</priority>
    <name><![CDATA[Syntax error in doxygen comment]]></name>
    <description><![CDATA[Syntax error in doxygen comment]]></description>
  </rule>
  <rule key="CppDoxygenUnresolvedReference">
    <priority>MAJOR</priority>
    <name><![CDATA[Unresolved reference in doxygen comment]]></name>
    <description><![CDATA[Unresolved reference in doxygen comment]]></description>
  </rule>
  <rule key="CppEmptyDeclaration">
    <priority>MAJOR</priority>
    <name><![CDATA[Declaration does not declare anything]]></name>
    <description><![CDATA[Declaration does not declare anything]]></description>
  </rule>
  <rule key="CppEntityAssignedButNoRead">
    <priority>MAJOR</priority>
    <name><![CDATA[Declarator is only assigned but never accessed]]></name>
    <description><![CDATA[Declarator is only assigned but never accessed]]></description>
  </rule>
  <rule key="CppEntityNeverUsed">
    <priority>MAJOR</priority>
    <name><![CDATA[Declarator is never used]]></name>
    <description><![CDATA[Declarator is never used]]></description>
  </rule>
  <rule key="CppEntityUsedOnlyInUnevaluatedContext">
    <priority>MAJOR</priority>
    <name><![CDATA[Declarator is used only in unevaluated context]]></name>
    <description><![CDATA[Declarator is used only in unevaluated context]]></description>
  </rule>
  <rule key="CppExplicitSpecializationInNonNamespaceScope">
    <priority>MAJOR</priority>
    <name><![CDATA[Explicit specialization in non-namespace scope]]></name>
    <description><![CDATA[Explicit specialization in non-namespace scope]]></description>
  </rule>
  <rule key="CppExpressionStatementsWithoudSideEffects">
    <priority>MAJOR</priority>
    <name><![CDATA[Possibly erroneous expression-statements without side-effects]]></name>
    <description><![CDATA[Possibly erroneous expression-statements without side-effects]]></description>
  </rule>
  <rule key="CppFunctionDoesntReturnValue">
    <priority>MAJOR</priority>
    <name><![CDATA[No return statement in a function returning non-void]]></name>
    <description><![CDATA[No return statement in a function returning non-void]]></description>
  </rule>
  <rule key="CppFunctionIsNotImplemented">
    <priority>MAJOR</priority>
    <name><![CDATA[Function is not implemented]]></name>
    <description><![CDATA[Function is not implemented]]></description>
  </rule>
  <rule key="CppHeaderHasBeenAlreadyIncluded">
    <priority>MINOR</priority>
    <name><![CDATA[Guarded header has already been included]]></name>
    <description><![CDATA[Guarded header has already been included]]></description>
  </rule>
  <rule key="CppHiddenFunction">
    <priority>MAJOR</priority>
    <name><![CDATA[Non-virtual class member function hidden in a derived class]]></name>
    <description><![CDATA[Non-virtual class member function hidden in a derived class]]></description>
  </rule>
  <rule key="CppHidingFunction">
    <priority>MAJOR</priority>
    <name><![CDATA[Class member function hiding a non-virtual function from a base class]]></name>
    <description><![CDATA[Class member function hiding a non-virtual function from a base class]]></description>
  </rule>
  <rule key="CppImplicitDefaultConstructorNotAvailable">
    <priority>MAJOR</priority>
    <name><![CDATA[Implicit default constructor is not available]]></name>
    <description><![CDATA[Implicit default constructor is not available]]></description>
  </rule>
  <rule key="CppIncompatiblePointerConversion">
    <priority>MAJOR</priority>
    <name><![CDATA[Implicit conversion to incompatible pointer type]]></name>
    <description><![CDATA[Implicit conversion to incompatible pointer type]]></description>
  </rule>
  <rule key="CppIncompleteSwitchStatement">
    <priority>MAJOR</priority>
    <name><![CDATA[Possibly erroneous incomplete switch-statement]]></name>
    <description><![CDATA[Possibly erroneous incomplete switch-statement]]></description>
  </rule>
  <rule key="CppInitializedValueIsAlwaysRewritten">
    <priority>MAJOR</priority>
    <name><![CDATA[Declarator is reassigned in all paths before being read]]></name>
    <description><![CDATA[Declarator is reassigned in all paths before being read]]></description>
  </rule>
  <rule key="CppIntegralToPointerConversion">
    <priority>MAJOR</priority>
    <name><![CDATA[Implicit integer to pointer conversion]]></name>
    <description><![CDATA[Implicit integer to pointer conversion]]></description>
  </rule>
  <rule key="CppInvalidLineContinuation">
    <priority>MAJOR</priority>
    <name><![CDATA[Backslash and newline separated by space]]></name>
    <description><![CDATA[Backslash and newline separated by space]]></description>
  </rule>
  <rule key="CppJoinDeclarationAndAssignment">
    <priority>INFO</priority>
    <name><![CDATA[Declaration and assignment can be joined]]></name>
    <description><![CDATA[Declaration and assignment can be joined]]></description>
  </rule>
  <rule key="CppLocalVariableWithNonTrivialDtorIsNeverUsed">
    <priority>INFO</priority>
    <name><![CDATA[Local variable is never used, but may have side-effects in its destructor]]></name>
    <description><![CDATA[Local variable is never used, but may have side-effects in its destructor]]></description>
  </rule>
  <rule key="CppMemberFunctionMayBeConst">
    <priority>INFO</priority>
    <name><![CDATA[Member function may be 'const']]></name>
    <description><![CDATA[Member function may be 'const']]></description>
  </rule>
  <rule key="CppMemberFunctionMayBeStatic">
    <priority>INFO</priority>
    <name><![CDATA[Member function may be 'static']]></name>
    <description><![CDATA[Member function may be 'static']]></description>
  </rule>
  <rule key="CppMemberInitializersOrder">
    <priority>INFO</priority>
    <name><![CDATA[Order of member initializers does not match the initialization order]]></name>
    <description><![CDATA[Order of member initializers does not match the initialization order]]></description>
  </rule>
  <rule key="CppMismatchedClassTags">
    <priority>MAJOR</priority>
    <name><![CDATA[Mismatched class tags]]></name>
    <description><![CDATA[Mismatched class tags]]></description>
  </rule>
  <rule key="CppMissingIncludeGuard">
    <priority>MAJOR</priority>
    <name><![CDATA[Missing include guard]]></name>
    <description><![CDATA[Missing include guard]]></description>
  </rule>
  <rule key="CppMoveOperationWithoutNoexceptSpecification">
    <priority>MAJOR</priority>
    <name><![CDATA[Move operation without noexcept specification]]></name>
    <description><![CDATA[Move operation without noexcept specification]]></description>
  </rule>
  <rule key="CppMsExtAddressOfClassRValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Taking an address of class r-value is non-standard Microsoft C++ extension]]></name>
    <description><![CDATA[Taking an address of class r-value is non-standard Microsoft C++ extension]]></description>
  </rule>
  <rule key="CppMsExtBindingRValueToLvalueReference">
    <priority>MAJOR</priority>
    <name><![CDATA[Binding r-value to l-value reference is non-standard Microsoft C++ extension]]></name>
    <description><![CDATA[Binding r-value to l-value reference is non-standard Microsoft C++ extension]]></description>
  </rule>
  <rule key="CppMsExtDoubleUserConversionInCopyInit">
    <priority>MAJOR</priority>
    <name><![CDATA[More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension]]></name>
    <description><![CDATA[More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension]]></description>
  </rule>
  <rule key="CppMsExtReinterpretCastFromNullptr">
    <priority>MAJOR</priority>
    <name><![CDATA[Casting from nullptr to pointer type with reinterpret_cast is non-standard Microsoft C++ extension]]></name>
    <description><![CDATA[Casting from nullptr to pointer type with reinterpret_cast is non-standard Microsoft C++ extension]]></description>
  </rule>
  <rule key="CppMutableSpecifierOnReferenceMember">
    <priority>MAJOR</priority>
    <name><![CDATA[Reference class member with 'mutable' specifier]]></name>
    <description><![CDATA[Reference class member with 'mutable' specifier]]></description>
  </rule>
  <rule key="CppNonConsistentAcquisitionReclaimPair">
    <priority>MAJOR</priority>
    <name><![CDATA[Non-consistent resource acquisition-reclaim pair]]></name>
    <description><![CDATA[Non-consistent resource acquisition-reclaim pair]]></description>
  </rule>
  <rule key="CppNonExceptionSafeResourceAcquisition">
    <priority>MINOR</priority>
    <name><![CDATA[Non-safe resource acquisition]]></name>
    <description><![CDATA[Non-safe resource acquisition]]></description>
  </rule>
  <rule key="CppNonExplicitConversionOperator">
    <priority>MINOR</priority>
    <name><![CDATA[Non-explicit conversion operator]]></name>
    <description><![CDATA[Non-explicit conversion operator]]></description>
  </rule>
  <rule key="CppNonExplicitConvertingConstructor">
    <priority>MINOR</priority>
    <name><![CDATA[Non-explicit converting constructor]]></name>
    <description><![CDATA[Non-explicit converting constructor]]></description>
  </rule>
  <rule key="CppNonInlineFunctionDefinitionInHeaderFile">
    <priority>MAJOR</priority>
    <name><![CDATA[Non-inline function definition in a header file]]></name>
    <description><![CDATA[Non-inline function definition in a header file]]></description>
  </rule>
  <rule key="CppNonReclaimedResourceAcquisition">
    <priority>MINOR</priority>
    <name><![CDATA[Non-reclaimed resource acquisition]]></name>
    <description><![CDATA[Non-reclaimed resource acquisition]]></description>
  </rule>
  <rule key="CppNotAllPathsReturnValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Not all control paths return a value]]></name>
    <description><![CDATA[Not all control paths return a value]]></description>
  </rule>
  <rule key="CppOverridingFunctionWithoutOverrideSpecifier">
    <priority>INFO</priority>
    <name><![CDATA[Overriding function without 'override' specifier]]></name>
    <description><![CDATA[Overriding function without 'override' specifier]]></description>
  </rule>
  <rule key="CppParameterNeverUsed">
    <priority>MINOR</priority>
    <name><![CDATA[Parameter is never used]]></name>
    <description><![CDATA[Parameter is never used]]></description>
  </rule>
  <rule key="CppParameterValueIsReassigned">
    <priority>MAJOR</priority>
    <name><![CDATA[Parameter is always rewritten in function body before being read]]></name>
    <description><![CDATA[Parameter is always rewritten in function body before being read]]></description>
  </rule>
  <rule key="CppPointerConversionDropsQualifiers">
    <priority>MAJOR</priority>
    <name><![CDATA[Implicit conversion to less qualified pointer type]]></name>
    <description><![CDATA[Implicit conversion to less qualified pointer type]]></description>
  </rule>
  <rule key="CppPointerToIntegralConversion">
    <priority>MAJOR</priority>
    <name><![CDATA[Implicit pointer to integer conversion]]></name>
    <description><![CDATA[Implicit pointer to integer conversion]]></description>
  </rule>
  <rule key="CppPolymorphicClassWithNonVirtualPublicDestructor">
    <priority>MAJOR</priority>
    <name><![CDATA[Polymorphic class with non-virtual public destructor]]></name>
    <description><![CDATA[Polymorphic class with non-virtual public destructor]]></description>
  </rule>
  <rule key="CppPossiblyErroneousEmptyStatements">
    <priority>MAJOR</priority>
    <name><![CDATA[Possibly erroneous empty-statements]]></name>
    <description><![CDATA[Possibly erroneous empty-statements]]></description>
  </rule>
  <rule key="CppPossiblyUninitializedMember">
    <priority>MAJOR</priority>
    <name><![CDATA[Possibly uninitialized class member]]></name>
    <description><![CDATA[Possibly uninitialized class member]]></description>
  </rule>
  <rule key="CppPossiblyUnintendedObjectSlicing">
    <priority>MAJOR</priority>
    <name><![CDATA[Possibly unintended object slicing]]></name>
    <description><![CDATA[Possibly unintended object slicing]]></description>
  </rule>
  <rule key="CppPrintfBadFormat">
    <priority>MAJOR</priority>
    <name><![CDATA[Invalid printf format specifier]]></name>
    <description><![CDATA[Invalid printf format specifier]]></description>
  </rule>
  <rule key="CppPrintfExtraArg">
    <priority>MAJOR</priority>
    <name><![CDATA[Too many arguments in a call to printf]]></name>
    <description><![CDATA[Too many arguments in a call to printf]]></description>
  </rule>
  <rule key="CppPrintfMissedArg">
    <priority>CRITICAL</priority>
    <name><![CDATA[Not enough arguments in a call to printf]]></name>
    <description><![CDATA[Not enough arguments in a call to printf]]></description>
  </rule>
  <rule key="CppPrintfRiskyFormat">
    <priority>MAJOR</priority>
    <name><![CDATA[Probably invalid printf format specifier]]></name>
    <description><![CDATA[Probably invalid printf format specifier]]></description>
  </rule>
  <rule key="CppPrivateSpecialMemberFunctionIsNotImplemented">
    <priority>MAJOR</priority>
    <name><![CDATA[Private special member function is not implemented]]></name>
    <description><![CDATA[Private special member function is not implemented]]></description>
  </rule>
  <rule key="CppRedundantAccessSpecifier">
    <priority>MINOR</priority>
    <name><![CDATA[Access specifier does not change accessibility level]]></name>
    <description><![CDATA[Access specifier does not change accessibility level]]></description>
  </rule>
  <rule key="CppRedundantBaseClassAccessSpecifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant base class access specifier]]></name>
    <description><![CDATA[Redundant base class access specifier]]></description>
  </rule>
  <rule key="CppRedundantBooleanExpressionArgument">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant argument in conditional expression]]></name>
    <description><![CDATA[Redundant argument in conditional expression]]></description>
  </rule>
  <rule key="CppRedundantControlFlowJump">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant control flow jump statement]]></name>
    <description><![CDATA[Redundant control flow jump statement]]></description>
  </rule>
  <rule key="CppRedundantElseKeyword">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'else' keyword]]></name>
    <description><![CDATA[Redundant 'else' keyword]]></description>
  </rule>
  <rule key="CppRedundantElseKeywordInsideCompoundStatement">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'else' keyword inside compound statement]]></name>
    <description><![CDATA[Redundant 'else' keyword inside compound statement]]></description>
  </rule>
  <rule key="CppRedundantEmptyDeclaration">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant empty declaration]]></name>
    <description><![CDATA[Redundant empty declaration]]></description>
  </rule>
  <rule key="CppRedundantEmptyStatement">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant empty statement]]></name>
    <description><![CDATA[Redundant empty statement]]></description>
  </rule>
  <rule key="CppRedundantInlineSpecifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'inline' specifier]]></name>
    <description><![CDATA[Redundant 'inline' specifier]]></description>
  </rule>
  <rule key="CppRedundantParentheses">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant parentheses]]></name>
    <description><![CDATA[Redundant parentheses]]></description>
  </rule>
  <rule key="CppRedundantQualifier">
    <priority>MINOR</priority>
    <name><![CDATA[Qualifier is redundant]]></name>
    <description><![CDATA[Qualifier is redundant]]></description>
  </rule>
  <rule key="CppRedundantStaticSpecifierOnMemberAllocationFunction">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'static' specifier on a member allocation/deallocation function]]></name>
    <description><![CDATA[Redundant 'static' specifier on a member allocation/deallocation function]]></description>
  </rule>
  <rule key="CppRedundantTemplateKeyword">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'template' keyword]]></name>
    <description><![CDATA[Redundant 'template' keyword]]></description>
  </rule>
  <rule key="CppRedundantTypenameKeyword">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'typename' keyword]]></name>
    <description><![CDATA[Redundant 'typename' keyword]]></description>
  </rule>
  <rule key="CppRedundantVirtualSpecifierOnOverrideFunction">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'virtual' specifier on an override function]]></name>
    <description><![CDATA[Redundant 'virtual' specifier on an override function]]></description>
  </rule>
  <rule key="CppRedundantVoidArgumentList">
    <priority>INFO</priority>
    <name><![CDATA[Redundant void argument list]]></name>
    <description><![CDATA[Redundant void argument list]]></description>
  </rule>
  <rule key="CppSmartPointerVsMakeFunction">
    <priority>INFO</priority>
    <name><![CDATA[Constructor of smart pointer used instead of its make function]]></name>
    <description><![CDATA[Constructor of smart pointer used instead of its make function]]></description>
  </rule>
  <rule key="CppSomeObjectMembersMightNotBeInitialized">
    <priority>MAJOR</priority>
    <name><![CDATA[Some object members might not be initialized]]></name>
    <description><![CDATA[Some object members might not be initialized]]></description>
  </rule>
  <rule key="CppStaticAssertFailure">
    <priority>CRITICAL</priority>
    <name><![CDATA[Static assertion failure]]></name>
    <description><![CDATA[Static assertion failure]]></description>
  </rule>
  <rule key="CppStaticDataMemberInUnnamedStruct">
    <priority>MAJOR</priority>
    <name><![CDATA[Static data member in an anonymous class is not allowed by the C++ standard]]></name>
    <description><![CDATA[Static data member in an anonymous class is not allowed by the C++ standard]]></description>
  </rule>
  <rule key="CppStaticSpecifierOnAnonymousNamespaceMember">
    <priority>INFO</priority>
    <name><![CDATA[Redundant 'static' specifier on an anonymous namespace member]]></name>
    <description><![CDATA[Redundant 'static' specifier on an anonymous namespace member]]></description>
  </rule>
  <rule key="CppSyntaxWarning">
    <priority>MAJOR</priority>
    <name><![CDATA[Unexpected syntax element]]></name>
    <description><![CDATA[Unexpected syntax element]]></description>
  </rule>
  <rule key="CppTemplateParameterShadowing">
    <priority>MAJOR</priority>
    <name><![CDATA[Redeclaration of a template parameter from an outer scope]]></name>
    <description><![CDATA[Redeclaration of a template parameter from an outer scope]]></description>
  </rule>
  <rule key="CppThrowExpressionCanBeReplacedWithRethrow">
    <priority>MAJOR</priority>
    <name><![CDATA[Throw expression can be replaced with a rethrow expression]]></name>
    <description><![CDATA[Throw expression can be replaced with a rethrow expression]]></description>
  </rule>
  <rule key="CppUninitializedDependentBaseClass">
    <priority>MAJOR</priority>
    <name><![CDATA[Uninitialized dependent base class]]></name>
    <description><![CDATA[Uninitialized dependent base class]]></description>
  </rule>
  <rule key="CppUnionMemberOfReferenceType">
    <priority>MAJOR</priority>
    <name><![CDATA[Union member of reference type]]></name>
    <description><![CDATA[Union member of reference type]]></description>
  </rule>
  <rule key="CppUnreachableCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Unreachable code]]></name>
    <description><![CDATA[Unreachable code]]></description>
  </rule>
  <rule key="CppUnusedIncludeDirective">
    <priority>MAJOR</priority>
    <name><![CDATA[Possibly unused #include directive]]></name>
    <description><![CDATA[Possibly unused #include directive]]></description>
  </rule>
  <rule key="CppUseAuto">
    <priority>MINOR</priority>
    <name><![CDATA[Use 'auto']]></name>
    <description><![CDATA[Use 'auto']]></description>
  </rule>
  <rule key="CppUsingResultOfAssignmentAsCondition">
    <priority>MAJOR</priority>
    <name><![CDATA[Using the result of an assignment as a condition]]></name>
    <description><![CDATA[Using the result of an assignment as a condition]]></description>
  </rule>
  <rule key="CppVirtualFunctionCallInsideCtor">
    <priority>MAJOR</priority>
    <name><![CDATA[Call to a virtual function inside a constructor/destructor will be statically resolved]]></name>
    <description><![CDATA[Call to a virtual function inside a constructor/destructor will be statically resolved]]></description>
  </rule>
  <rule key="CppVirtualFunctionInFinalClass">
    <priority>MAJOR</priority>
    <name><![CDATA[Declaration of a non-overriding virtual function in a final or sealed class]]></name>
    <description><![CDATA[Declaration of a non-overriding virtual function in a final or sealed class]]></description>
  </rule>
  <rule key="CppWrongSlashesInIncludeDirective">
    <priority>MINOR</priority>
    <name><![CDATA[Slash symbol used in #include directive doesn't match code style settings]]></name>
    <description><![CDATA[Slash symbol used in #include directive doesn't match code style settings]]></description>
  </rule>
  <rule key="CppZeroConstantCanBeReplacedWithNullptr">
    <priority>INFO</priority>
    <name><![CDATA[Zero constant can be replaced with nullptr]]></name>
    <description><![CDATA[Zero constant can be replaced with nullptr]]></description>
  </rule>
  <rule key="CppZeroValuedExpressionUsedAsNullPointer">
    <priority>MAJOR</priority>
    <name><![CDATA[Expression which evaluates to zero is used as a null pointer constant]]></name>
    <description><![CDATA[Expression which evaluates to zero is used as a null pointer constant]]></description>
  </rule>
  <rule key="CreateSpecializedOverload">
    <priority>MINOR</priority>
    <name><![CDATA[String literal usage allows to create specialized overload]]></name>
    <description><![CDATA[String literal usage allows to create specialized overload]]></description>
  </rule>
  <rule key="CssBrowserCompatibility">
    <priority>MAJOR</priority>
    <name><![CDATA[CSS symbol / syntax is not compatible with a specific browser]]></name>
    <description><![CDATA[CSS symbol / syntax is not compatible with a specific browser]]></description>
  </rule>
  <rule key="CssCaniuseFeatureRequiresPrefix">
    <priority>MINOR</priority>
    <name><![CDATA[CSS feature requires vendor prefix for a specific browser]]></name>
    <description><![CDATA[CSS feature requires vendor prefix for a specific browser]]></description>
  </rule>
  <rule key="CssCaniuseUnsupportedFeature">
    <priority>MINOR</priority>
    <name><![CDATA[CSS feature is not supported by a specific browser]]></name>
    <description><![CDATA[CSS feature is not supported by a specific browser]]></description>
  </rule>
  <rule key="CssNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Unknown CSS symbol]]></name>
    <description><![CDATA[Unknown CSS symbol]]></description>
  </rule>
  <rule key="CssObsolete">
    <priority>MINOR</priority>
    <name><![CDATA[CSS symbol is obsolete]]></name>
    <description><![CDATA[CSS symbol is obsolete]]></description>
  </rule>
  <rule key="CssPropertyDoesNotOverrideVendorProperty">
    <priority>MAJOR</priority>
    <name><![CDATA[Property does not override vendor-prefixed property]]></name>
    <description><![CDATA[Property does not override vendor-prefixed property]]></description>
  </rule>
  <rule key="CyclicReferenceComment">
    <priority>INFO</priority>
    <name><![CDATA[Reference comment creates cyclic dependency]]></name>
    <description><![CDATA[Reference comment creates cyclic dependency]]></description>
  </rule>
  <rule key="DeclarationHides">
    <priority>MINOR</priority>
    <name><![CDATA[Declaration hides another declaration from an outer scope]]></name>
    <description><![CDATA[Declaration hides another declaration from an outer scope]]></description>
  </rule>
  <rule key="DeclarationIsEmpty">
    <priority>MAJOR</priority>
    <name><![CDATA[Declaration is empty]]></name>
    <description><![CDATA[Declaration is empty]]></description>
  </rule>
  <rule key="DeclarationVisibilityError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Exported entity uses a private entity]]></name>
    <description><![CDATA[Exported entity uses a private entity]]></description>
  </rule>
  <rule key="DefaultValueAttributeForOptionalParameter">
    <priority>MAJOR</priority>
    <name><![CDATA[Possibly misleading 'DefaultValueAttribute' usage to define optional parameter value]]></name>
    <description><![CDATA[Possibly misleading 'DefaultValueAttribute' usage to define optional parameter value]]></description>
  </rule>
  <rule key="DelegateSubtraction">
    <priority>MAJOR</priority>
    <name><![CDATA[Delegate subtractions]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=DelegateSubtraction">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="DeletingNonQualifiedReference">
    <priority>CRITICAL</priority>
    <name><![CDATA[Calling 'delete' on non-qualified identifier in 'strict mode']]></name>
    <description><![CDATA[Calling 'delete' on non-qualified identifier in 'strict mode']]></description>
  </rule>
  <rule key="DlTagContainsNonDtOrDdElements">
    <priority>MINOR</priority>
    <name><![CDATA[Elements not allowed in context: &lt;dl&gt; contains elements other than &lt;dt&gt; or &lt;dd&gt; or they are unclosed]]></name>
    <description><![CDATA[Elements not allowed in context: &lt;dl&gt; contains elements other than &lt;dt&gt; or &lt;dd&gt; or they are unclosed]]></description>
  </rule>
  <rule key="DoubleColonsExpected">
    <priority>CRITICAL</priority>
    <name><![CDATA[Two colons expected]]></name>
    <description><![CDATA[Two colons expected]]></description>
  </rule>
  <rule key="DoubleColonsPreferred">
    <priority>INFO</priority>
    <name><![CDATA[Two colons preferred]]></name>
    <description><![CDATA[Two colons preferred]]></description>
  </rule>
  <rule key="DoubleNegationOfBoolean">
    <priority>MAJOR</priority>
    <name><![CDATA[Double negation of boolean is redundant]]></name>
    <description><![CDATA[Double negation of boolean is redundant]]></description>
  </rule>
  <rule key="DoubleNegationOperator">
    <priority>INFO</priority>
    <name><![CDATA[Double negation operator]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=DoubleNegationOperator">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="DuplicateIdentifierError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Duplicate identifier]]></name>
    <description><![CDATA[Duplicate identifier]]></description>
  </rule>
  <rule key="DuplicateReferenceComment">
    <priority>MAJOR</priority>
    <name><![CDATA[Duplicate reference comment is redundant]]></name>
    <description><![CDATA[Duplicate reference comment is redundant]]></description>
  </rule>
  <rule key="DuplicateResource">
    <priority>MAJOR</priority>
    <name><![CDATA[Duplicate resource name]]></name>
    <description><![CDATA[Duplicate resource name]]></description>
  </rule>
  <rule key="DuplicatingLocalDeclaration">
    <priority>MAJOR</priority>
    <name><![CDATA[Duplicate local declaration]]></name>
    <description><![CDATA[Duplicate local declaration]]></description>
  </rule>
  <rule key="DuplicatingParameterDeclarationError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Duplicate parameter declaration in 'strict mode']]></name>
    <description><![CDATA[Duplicate parameter declaration in 'strict mode']]></description>
  </rule>
  <rule key="DuplicatingPropertyDeclaration">
    <priority>MAJOR</priority>
    <name><![CDATA[Duplicate property declaration]]></name>
    <description><![CDATA[Duplicate property declaration]]></description>
  </rule>
  <rule key="DuplicatingPropertyDeclarationError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Duplicate property declaration in 'strict mode']]></name>
    <description><![CDATA[Duplicate property declaration in 'strict mode']]></description>
  </rule>
  <rule key="DuplicatingSwitchLabel">
    <priority>MAJOR</priority>
    <name><![CDATA[Duplicate switch label]]></name>
    <description><![CDATA[Duplicate switch label]]></description>
  </rule>
  <rule key="DynamicShiftRightOpIsNotInt">
    <priority>MAJOR</priority>
    <name><![CDATA[Right operand of dynamic shift operation should be convertible to 'int']]></name>
    <description><![CDATA[Right operand of dynamic shift operation should be convertible to 'int']]></description>
  </rule>
  <rule key="ElidedTrailingElement">
    <priority>MAJOR</priority>
    <name><![CDATA[A trailing element of an array is elided]]></name>
    <description><![CDATA[A trailing element of an array is elided]]></description>
  </rule>
  <rule key="EmptyConstructor">
    <priority>MAJOR</priority>
    <name><![CDATA[Empty constructor]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=EmptyConstructor">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="EmptyDestructor">
    <priority>MAJOR</priority>
    <name><![CDATA[Empty destructor]]></name>
    <description><![CDATA[Empty destructor]]></description>
  </rule>
  <rule key="EmptyEmbeddedStatement">
    <priority>MAJOR</priority>
    <name><![CDATA[Empty control statement body]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=EmptyEmbeddedStatement">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="EmptyForStatement">
    <priority>MAJOR</priority>
    <name><![CDATA[Empty 'for' loop is redundant]]></name>
    <description><![CDATA[Empty 'for' loop is redundant]]></description>
  </rule>
  <rule key="EmptyGeneralCatchClause">
    <priority>MAJOR</priority>
    <name><![CDATA[Empty general catch clause]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=EmptyGeneralCatchClause">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="EmptyNamespace">
    <priority>MAJOR</priority>
    <name><![CDATA[Empty namespace declaration]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=EmptyNamespace">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="EmptyObjectPropertyDeclaration">
    <priority>CRITICAL</priority>
    <name><![CDATA[Object property declaration is expected]]></name>
    <description><![CDATA[Object property declaration is expected]]></description>
  </rule>
  <rule key="EmptyReturnValueForTypeAnnotatedFunction">
    <priority>MAJOR</priority>
    <name><![CDATA[Empty return value for type-annotated function]]></name>
    <description><![CDATA[Empty return value for type-annotated function]]></description>
  </rule>
  <rule key="EmptyStatement">
    <priority>MAJOR</priority>
    <name><![CDATA[Empty statement is redundant]]></name>
    <description><![CDATA[Empty statement is redundant]]></description>
  </rule>
  <rule key="EmptyTitleTag">
    <priority>MINOR</priority>
    <name><![CDATA[Important tags or attributes missing: Empty &lt;title&gt;]]></name>
    <description><![CDATA[Important tags or attributes missing: Empty &lt;title&gt;]]></description>
  </rule>
  <rule key="EnforceDoWhileStatementBraces">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred braces style: Enforce braces in 'do-while' statement]]></name>
    <description><![CDATA[Use preferred braces style: Enforce braces in 'do-while' statement]]></description>
  </rule>
  <rule key="EnforceFixedStatementBraces">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred braces style: Enforce braces in 'fixed' statement]]></name>
    <description><![CDATA[Use preferred braces style: Enforce braces in 'fixed' statement]]></description>
  </rule>
  <rule key="EnforceForStatementBraces">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred braces style: Enforce braces in 'for' statement]]></name>
    <description><![CDATA[Use preferred braces style: Enforce braces in 'for' statement]]></description>
  </rule>
  <rule key="EnforceForeachStatementBraces">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred braces style: Enforce braces in 'foreach' statement]]></name>
    <description><![CDATA[Use preferred braces style: Enforce braces in 'foreach' statement]]></description>
  </rule>
  <rule key="EnforceIfStatementBraces">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred braces style: Enforce braces in 'if' statement]]></name>
    <description><![CDATA[Use preferred braces style: Enforce braces in 'if' statement]]></description>
  </rule>
  <rule key="EnforceLockStatementBraces">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred braces style: Enforce braces in 'lock' statement]]></name>
    <description><![CDATA[Use preferred braces style: Enforce braces in 'lock' statement]]></description>
  </rule>
  <rule key="EnforceUsingStatementBraces">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred braces style: Enforce braces in 'using' statement]]></name>
    <description><![CDATA[Use preferred braces style: Enforce braces in 'using' statement]]></description>
  </rule>
  <rule key="EnforceWhileStatementBraces">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred braces style: Enforce braces in 'while' statement]]></name>
    <description><![CDATA[Use preferred braces style: Enforce braces in 'while' statement]]></description>
  </rule>
  <rule key="EnumUnderlyingTypeIsInt">
    <priority>MAJOR</priority>
    <name><![CDATA[Underlying type of enum is 'int']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=EnumUnderlyingTypeIsInt">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="EnumerableSumInExplicitUncheckedContext">
    <priority>MAJOR</priority>
    <name><![CDATA['Enumerable.Sum' invocation in explicit unchecked context]]></name>
    <description><![CDATA['Enumerable.Sum' invocation in explicit unchecked context]]></description>
  </rule>
  <rule key="EqualExpressionComparison">
    <priority>MAJOR</priority>
    <name><![CDATA[Similar expressions comparison]]></name>
    <description><![CDATA[Similar expressions comparison]]></description>
  </rule>
  <rule key="ErrorInXmlDocReference">
    <priority>CRITICAL</priority>
    <name><![CDATA[Error in Xml doc comment reference]]></name>
    <description><![CDATA[Error in Xml doc comment reference]]></description>
  </rule>
  <rule key="Es6Feature">
    <priority>CRITICAL</priority>
    <name><![CDATA[ECMAScript 2015 feature usage when in ES 5 or lower]]></name>
    <description><![CDATA[ECMAScript 2015 feature usage when in ES 5 or lower]]></description>
  </rule>
  <rule key="Es7Feature">
    <priority>CRITICAL</priority>
    <name><![CDATA[ECMAScript 2016 feature usage when in ES 2015 or lower]]></name>
    <description><![CDATA[ECMAScript 2016 feature usage when in ES 2015 or lower]]></description>
  </rule>
  <rule key="EvalArgumentsNameError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Using of 'eval'/'arguments' name in 'strict mode']]></name>
    <description><![CDATA[Using of 'eval'/'arguments' name in 'strict mode']]></description>
  </rule>
  <rule key="EventNeverInvoked">
    <priority>MAJOR</priority>
    <name><![CDATA[Event never invoked]]></name>
    <description><![CDATA[Event never invoked]]></description>
  </rule>
  <rule key="EventNeverInvoked.Global">
    <priority>INFO</priority>
    <name><![CDATA[Abstract or virtual(overridable) event is never invoked]]></name>
    <description><![CDATA[Abstract or virtual(overridable) event is never invoked]]></description>
  </rule>
  <rule key="EventNeverSubscribedTo.Global">
    <priority>INFO</priority>
    <name><![CDATA[Event is never subscribed to: Non-private accessibility]]></name>
    <description><![CDATA[Event is never subscribed to: Non-private accessibility]]></description>
  </rule>
  <rule key="EventNeverSubscribedTo.Local">
    <priority>INFO</priority>
    <name><![CDATA[Event is never subscribed to: Private accessibility]]></name>
    <description><![CDATA[Event is never subscribed to: Private accessibility]]></description>
  </rule>
  <rule key="EventUnsubscriptionViaAnonymousDelegate">
    <priority>MAJOR</priority>
    <name><![CDATA[Event unsubscription via anonymous delegate]]></name>
    <description><![CDATA[Event unsubscription via anonymous delegate]]></description>
  </rule>
  <rule key="ExperimentalFeature">
    <priority>CRITICAL</priority>
    <name><![CDATA[Experimental feature usage when language level set to stable]]></name>
    <description><![CDATA[Experimental feature usage when language level set to stable]]></description>
  </rule>
  <rule key="ExplicitCallerInfoArgument">
    <priority>MAJOR</priority>
    <name><![CDATA[Explicit argument passed to parameter with caller info attribute]]></name>
    <description><![CDATA[Explicit argument passed to parameter with caller info attribute]]></description>
  </rule>
  <rule key="ExpressionIsAlwaysConst">
    <priority>MAJOR</priority>
    <name><![CDATA[Expression is always constant]]></name>
    <description><![CDATA[Expression is always constant]]></description>
  </rule>
  <rule key="ExpressionIsAlwaysNull">
    <priority>MAJOR</priority>
    <name><![CDATA[Expression is always 'null']]></name>
    <description><![CDATA[Expression is always 'null']]></description>
  </rule>
  <rule key="FieldCanBeMadeReadOnly.Global">
    <priority>INFO</priority>
    <name><![CDATA[Field can be made readonly: Non-private accessibility]]></name>
    <description><![CDATA[Field can be made readonly: Non-private accessibility]]></description>
  </rule>
  <rule key="FieldCanBeMadeReadOnly.Local">
    <priority>INFO</priority>
    <name><![CDATA[Field can be made readonly: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=FieldCanBeMadeReadOnly.Local">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ForCanBeConvertedToForeach">
    <priority>INFO</priority>
    <name><![CDATA[For-loop can be converted into foreach-loop]]></name>
    <description><![CDATA[For-loop can be converted into foreach-loop]]></description>
  </rule>
  <rule key="ForStatementConditionIsTrue">
    <priority>MAJOR</priority>
    <name><![CDATA['true' is redundant as 'for'-statement condition]]></name>
    <description><![CDATA['true' is redundant as 'for'-statement condition]]></description>
  </rule>
  <rule key="FormatStringPlaceholdersMismatch">
    <priority>MAJOR</priority>
    <name><![CDATA[Format string placeholders mismatch]]></name>
    <description><![CDATA[Format string placeholders mismatch]]></description>
  </rule>
  <rule key="FormatStringProblem">
    <priority>MAJOR</priority>
    <name><![CDATA[String formatting method problems]]></name>
    <description><![CDATA[String formatting method problems]]></description>
  </rule>
  <rule key="FunctionComplexityOverflow">
    <priority>INFO</priority>
    <name><![CDATA[Function body is too complex to analyze]]></name>
    <description><![CDATA[Function body is too complex to analyze]]></description>
  </rule>
  <rule key="FunctionNeverReturns">
    <priority>MAJOR</priority>
    <name><![CDATA[Function never returns]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=FunctionNeverReturns">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="FunctionParameterNamedArguments">
    <priority>MAJOR</priority>
    <name><![CDATA[Parameter name 'arguments' clashes with pre-defined JS function-scope variable]]></name>
    <description><![CDATA[Parameter name 'arguments' clashes with pre-defined JS function-scope variable]]></description>
  </rule>
  <rule key="FunctionRecursiveOnAllPaths">
    <priority>MAJOR</priority>
    <name><![CDATA[Function is recursive on all execution paths]]></name>
    <description><![CDATA[Function is recursive on all execution paths]]></description>
  </rule>
  <rule key="FunctionUsedOutOfScope">
    <priority>MAJOR</priority>
    <name><![CDATA[Function is used outside of scope which it is declared]]></name>
    <description><![CDATA[Function is used outside of scope which it is declared]]></description>
  </rule>
  <rule key="FunctionsUsedBeforeDeclared">
    <priority>INFO</priority>
    <name><![CDATA[Function is used before it is declared]]></name>
    <description><![CDATA[Function is used before it is declared]]></description>
  </rule>
  <rule key="GCSuppressFinalizeForTypeWithoutDestructor">
    <priority>MAJOR</priority>
    <name><![CDATA['GC.SuppressFinalize' is invoked for type without destructor]]></name>
    <description><![CDATA['GC.SuppressFinalize' is invoked for type without destructor]]></description>
  </rule>
  <rule key="GenericEnumeratorNotDisposed">
    <priority>MAJOR</priority>
    <name><![CDATA[Instance of IEnumerator is never disposed]]></name>
    <description><![CDATA[Instance of IEnumerator is never disposed]]></description>
  </rule>
  <rule key="HeuristicUnreachableCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Heuristically unreachable code]]></name>
    <description><![CDATA[Heuristically unreachable code]]></description>
  </rule>
  <rule key="HeuristicallyUnreachableCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Heuristically unreachable code]]></name>
    <description><![CDATA[Heuristically unreachable code]]></description>
  </rule>
  <rule key="HexColorValueWithAlpha">
    <priority>CRITICAL</priority>
    <name><![CDATA[Invalid hexadecimal value of color]]></name>
    <description><![CDATA[Invalid hexadecimal value of color]]></description>
  </rule>
  <rule key="Html.AttributeNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown attribute]]></name>
    <description><![CDATA[Unknown attribute]]></description>
  </rule>
  <rule key="Html.AttributesQuotes">
    <priority>MINOR</priority>
    <name><![CDATA[Wrong attribute quotes]]></name>
    <description><![CDATA[Wrong attribute quotes]]></description>
  </rule>
  <rule key="Html.DeadCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Html Dead Code]]></name>
    <description><![CDATA[Html Dead Code]]></description>
  </rule>
  <rule key="Html.EventNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown event]]></name>
    <description><![CDATA[Unknown event]]></description>
  </rule>
  <rule key="Html.IdDuplication">
    <priority>MAJOR</priority>
    <name><![CDATA[Ids duplication]]></name>
    <description><![CDATA[Ids duplication]]></description>
  </rule>
  <rule key="Html.IdNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown ID]]></name>
    <description><![CDATA[Unknown ID]]></description>
  </rule>
  <rule key="Html.Obsolete">
    <priority>MAJOR</priority>
    <name><![CDATA[Obsolete or nonstandard element]]></name>
    <description><![CDATA[Obsolete or nonstandard element]]></description>
  </rule>
  <rule key="Html.PathError">
    <priority>MAJOR</priority>
    <name><![CDATA[Path error]]></name>
    <description><![CDATA[Path error]]></description>
  </rule>
  <rule key="Html.TagNotClosed">
    <priority>CRITICAL</priority>
    <name><![CDATA[Not closed tag]]></name>
    <description><![CDATA[Not closed tag]]></description>
  </rule>
  <rule key="Html.TagNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown tag]]></name>
    <description><![CDATA[Unknown tag]]></description>
  </rule>
  <rule key="Html.TagShouldBeSelfClosed">
    <priority>MAJOR</priority>
    <name><![CDATA[Wrong closed tag]]></name>
    <description><![CDATA[Wrong closed tag]]></description>
  </rule>
  <rule key="Html.TagShouldNotBeSelfClosed">
    <priority>MAJOR</priority>
    <name><![CDATA[Wrong self-closed tag]]></name>
    <description><![CDATA[Wrong self-closed tag]]></description>
  </rule>
  <rule key="Html.Warning">
    <priority>MAJOR</priority>
    <name><![CDATA[Html Warning]]></name>
    <description><![CDATA[Html Warning]]></description>
  </rule>
  <rule key="ImplicitAnyError">
    <priority>CRITICAL</priority>
    <name><![CDATA['Implicit any' inspection when NoImplicitAny is set]]></name>
    <description><![CDATA['Implicit any' inspection when NoImplicitAny is set]]></description>
  </rule>
  <rule key="ImplicitAnyTypeWarning">
    <priority>MAJOR</priority>
    <name><![CDATA[Element has implicit 'any' type]]></name>
    <description><![CDATA[Element has implicit 'any' type]]></description>
  </rule>
  <rule key="ImplicitlyCapturedClosure">
    <priority>MINOR</priority>
    <name><![CDATA[Implicitly captured closure]]></name>
    <description><![CDATA[Implicitly captured closure]]></description>
  </rule>
  <rule key="ImpureMethodCallOnReadonlyValueField">
    <priority>MAJOR</priority>
    <name><![CDATA[Impure method is called for readonly field of value type]]></name>
    <description><![CDATA[Impure method is called for readonly field of value type]]></description>
  </rule>
  <rule key="InactivePreprocessorBranch">
    <priority>MAJOR</priority>
    <name><![CDATA[Inactive preprocessor branch]]></name>
    <description><![CDATA[Inactive preprocessor branch]]></description>
  </rule>
  <rule key="InconsistentFunctionReturns">
    <priority>MAJOR</priority>
    <name><![CDATA[Inconsistent function returns]]></name>
    <description><![CDATA[Inconsistent function returns]]></description>
  </rule>
  <rule key="InconsistentNaming">
    <priority>MAJOR</priority>
    <name><![CDATA[Inconsistent Naming]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=InconsistentNaming">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="InconsistentlySynchronizedField">
    <priority>MAJOR</priority>
    <name><![CDATA[Inconsistent synchronization on field]]></name>
    <description><![CDATA[Inconsistent synchronization on field]]></description>
  </rule>
  <rule key="IncorrectOperandInTypeOfComparison">
    <priority>MAJOR</priority>
    <name><![CDATA[Comparison of 'typeof' expression with incorrect value]]></name>
    <description><![CDATA[Comparison of 'typeof' expression with incorrect value]]></description>
  </rule>
  <rule key="InternalModule">
    <priority>INFO</priority>
    <name><![CDATA[Immediately-invoked function expression may be converted to internal module]]></name>
    <description><![CDATA[Immediately-invoked function expression may be converted to internal module]]></description>
  </rule>
  <rule key="InterpolatedStringExpressionIsNotIFormattable">
    <priority>MAJOR</priority>
    <name><![CDATA[Formatting is specified, but interpolated string expression is not IFormattable]]></name>
    <description><![CDATA[Formatting is specified, but interpolated string expression is not IFormattable]]></description>
  </rule>
  <rule key="IntroduceOptionalParameters.Global">
    <priority>INFO</priority>
    <name><![CDATA[Introduce optional parameters: Non-private accessibility]]></name>
    <description><![CDATA[Introduce optional parameters: Non-private accessibility]]></description>
  </rule>
  <rule key="IntroduceOptionalParameters.Local">
    <priority>INFO</priority>
    <name><![CDATA[Introduce optional parameters: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=IntroduceOptionalParameters.Local">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="IntroduceVariableToApplyGuard">
    <priority>MINOR</priority>
    <name><![CDATA[Introducing variable will allow to apply type guard]]></name>
    <description><![CDATA[Introducing variable will allow to apply type guard]]></description>
  </rule>
  <rule key="InvalidAttributeValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Invalid attribute value]]></name>
    <description><![CDATA[Invalid attribute value]]></description>
  </rule>
  <rule key="InvalidJsonSyntax">
    <priority>CRITICAL</priority>
    <name><![CDATA[Invalid JSON syntax]]></name>
    <description><![CDATA[Invalid JSON syntax]]></description>
  </rule>
  <rule key="InvalidTaskElement">
    <priority>INFO</priority>
    <name><![CDATA[Invalid task element]]></name>
    <description><![CDATA[Invalid task element]]></description>
  </rule>
  <rule key="InvalidValue">
    <priority>CRITICAL</priority>
    <name><![CDATA[Invalid value]]></name>
    <description><![CDATA[Invalid value]]></description>
  </rule>
  <rule key="InvalidValueType">
    <priority>MAJOR</priority>
    <name><![CDATA[Resource value type is invalid]]></name>
    <description><![CDATA[Resource value type is invalid]]></description>
  </rule>
  <rule key="InvertCondition.1">
    <priority>MINOR</priority>
    <name><![CDATA[Invert condition: Invert condition]]></name>
    <description><![CDATA[Invert condition: Invert condition]]></description>
  </rule>
  <rule key="InvertIf">
    <priority>MINOR</priority>
    <name><![CDATA[Invert 'if' statement to reduce nesting]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=InvertIf">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="InvocationIsSkipped">
    <priority>MINOR</priority>
    <name><![CDATA[Method invocation is skipped]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=InvocationIsSkipped">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="InvocationOfNonFunction">
    <priority>MAJOR</priority>
    <name><![CDATA[Invocation of non-function expression]]></name>
    <description><![CDATA[Invocation of non-function expression]]></description>
  </rule>
  <rule key="InvokeAsExtensionMethod">
    <priority>INFO</priority>
    <name><![CDATA[Convert static method invocation to extension method call]]></name>
    <description><![CDATA[Convert static method invocation to extension method call]]></description>
  </rule>
  <rule key="InvokedExpressionMaybeNonFunction">
    <priority>MAJOR</priority>
    <name><![CDATA[Invoked expression is not a function value]]></name>
    <description><![CDATA[Invoked expression is not a function value]]></description>
  </rule>
  <rule key="IsExpressionAlwaysFalse">
    <priority>MAJOR</priority>
    <name><![CDATA[The given expression of 'is' operator is never of the provided type]]></name>
    <description><![CDATA[The given expression of 'is' operator is never of the provided type]]></description>
  </rule>
  <rule key="IsExpressionAlwaysTrue">
    <priority>MAJOR</priority>
    <name><![CDATA[The given expression of 'is' operator is always of the provided type]]></name>
    <description><![CDATA[The given expression of 'is' operator is always of the provided type]]></description>
  </rule>
  <rule key="IteratorMethodResultIsIgnored">
    <priority>MAJOR</priority>
    <name><![CDATA[Return value of iterator is not used]]></name>
    <description><![CDATA[Return value of iterator is not used]]></description>
  </rule>
  <rule key="IteratorNeverReturns">
    <priority>MAJOR</priority>
    <name><![CDATA[Iterator never returns]]></name>
    <description><![CDATA[Iterator never returns]]></description>
  </rule>
  <rule key="JoinDeclarationAndInitializer">
    <priority>INFO</priority>
    <name><![CDATA[Join local variable declaration and assignment]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=JoinDeclarationAndInitializer">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="JoinDeclarationAndInitializerJs">
    <priority>INFO</priority>
    <name><![CDATA[Join local variable declaration and assignment]]></name>
    <description><![CDATA[Join local variable declaration and assignment]]></description>
  </rule>
  <rule key="JoinNullCheckWithUsage">
    <priority>INFO</priority>
    <name><![CDATA[Join null check with assignment]]></name>
    <description><![CDATA[Join null check with assignment]]></description>
  </rule>
  <rule key="JoinNullCheckWithUsageWhenPossible">
    <priority>INFO</priority>
    <name><![CDATA[Join null check with assignment (when possible)]]></name>
    <description><![CDATA[Join null check with assignment (when possible)]]></description>
  </rule>
  <rule key="JsPathNotFound">
    <priority>CRITICAL</priority>
    <name><![CDATA[Path for reference comment not found]]></name>
    <description><![CDATA[Path for reference comment not found]]></description>
  </rule>
  <rule key="JsUnreachableCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Unreachable code]]></name>
    <description><![CDATA[Unreachable code]]></description>
  </rule>
  <rule key="JsonValidationFailed">
    <priority>CRITICAL</priority>
    <name><![CDATA[JSON validation failed]]></name>
    <description><![CDATA[JSON validation failed]]></description>
  </rule>
  <rule key="JumpMustBeInLoop">
    <priority>MAJOR</priority>
    <name><![CDATA[Use 'break' or 'continue' outside of loop body]]></name>
    <description><![CDATA[Use 'break' or 'continue' outside of loop body]]></description>
  </rule>
  <rule key="LValueIsExpected">
    <priority>CRITICAL</priority>
    <name><![CDATA[L-value expected error]]></name>
    <description><![CDATA[L-value expected error]]></description>
  </rule>
  <rule key="LabelOrSemicolonExpected">
    <priority>CRITICAL</priority>
    <name><![CDATA[Use of expression after break or continue]]></name>
    <description><![CDATA[Use of expression after break or continue]]></description>
  </rule>
  <rule key="Lambda">
    <priority>INFO</priority>
    <name><![CDATA[Function expression may be converted to lambda expression]]></name>
    <description><![CDATA[Function expression may be converted to lambda expression]]></description>
  </rule>
  <rule key="LessSpecificOverloadThanMainSignature">
    <priority>MAJOR</priority>
    <name><![CDATA[Overload is less specific than the main signature]]></name>
    <description><![CDATA[Overload is less specific than the main signature]]></description>
  </rule>
  <rule key="LexicalDeclarationNeedsBlock">
    <priority>CRITICAL</priority>
    <name><![CDATA[Lexical declaration can only be declared inside a block.]]></name>
    <description><![CDATA[Lexical declaration can only be declared inside a block.]]></description>
  </rule>
  <rule key="LocalFunctionRedefinedLater">
    <priority>MAJOR</priority>
    <name><![CDATA[Local function is redefined later]]></name>
    <description><![CDATA[Local function is redefined later]]></description>
  </rule>
  <rule key="LocalNameCapturedOnly">
    <priority>MAJOR</priority>
    <name><![CDATA[Local entity is only used to capture it's name]]></name>
    <description><![CDATA[Local entity is only used to capture it's name]]></description>
  </rule>
  <rule key="LocalVariableHidesMember">
    <priority>MAJOR</priority>
    <name><![CDATA[Local variable hides member]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=LocalVariableHidesMember">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="LocalizableElement">
    <priority>INFO</priority>
    <name><![CDATA[Element is localizable]]></name>
    <description><![CDATA[Element is localizable]]></description>
  </rule>
  <rule key="LongLiteralEndingLowerL">
    <priority>MAJOR</priority>
    <name><![CDATA[The 'l' suffix is easily confused with the digit '1']]></name>
    <description><![CDATA[The 'l' suffix is easily confused with the digit '1']]></description>
  </rule>
  <rule key="LoopCanBeConvertedToQuery">
    <priority>MINOR</priority>
    <name><![CDATA[Loop can be converted into LINQ-expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=LoopCanBeConvertedToQuery">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="LoopCanBePartlyConvertedToQuery">
    <priority>INFO</priority>
    <name><![CDATA[Part of loop's body can be converted into LINQ-expression]]></name>
    <description><![CDATA[Part of loop's body can be converted into LINQ-expression]]></description>
  </rule>
  <rule key="LoopVariableIsNeverChangedInsideLoop">
    <priority>MAJOR</priority>
    <name><![CDATA[Loop control variable is never changed inside loop]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=LoopVariableIsNeverChangedInsideLoop">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MeaninglessDefaultParameterValue">
    <priority>MAJOR</priority>
    <name><![CDATA['DefaultParameterValueAttribute' should be used in conjunction with 'OptionalAttribute']]></name>
    <description><![CDATA['DefaultParameterValueAttribute' should be used in conjunction with 'OptionalAttribute']]></description>
  </rule>
  <rule key="MemberCanBeInternal">
    <priority>INFO</priority>
    <name><![CDATA[Member or type can be made internal(friend)]]></name>
    <description><![CDATA[Member or type can be made internal(friend)]]></description>
  </rule>
  <rule key="MemberCanBeMadeStatic.Global">
    <priority>MINOR</priority>
    <name><![CDATA[Member can be made static(shared): Non-private accessibility]]></name>
    <description><![CDATA[Member can be made static(shared): Non-private accessibility]]></description>
  </rule>
  <rule key="MemberCanBeMadeStatic.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Member can be made static(shared): Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MemberCanBeMadeStatic.Local">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MemberCanBePrivate.Global">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made private: Non-private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MemberCanBePrivate.Global">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MemberCanBePrivate.Local">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made private: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MemberCanBePrivate.Local">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MemberCanBeProtected.Global">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made protected: Non-private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MemberCanBeProtected.Global">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MemberCanBeProtected.Local">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made protected: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MemberCanBeProtected.Local">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MemberHidesStaticFromOuterClass">
    <priority>MAJOR</priority>
    <name><![CDATA[Member hides static member from outer class]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MemberHidesStaticFromOuterClass">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MemberInitializerValueIgnored">
    <priority>MAJOR</priority>
    <name><![CDATA[Member initialized value ignored]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MemberInitializerValueIgnored">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MergeConditionalExpression">
    <priority>INFO</priority>
    <name><![CDATA[Merge conditional ?: expression into conditional access]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MergeConditionalExpression">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MergeSequentialChecks">
    <priority>INFO</priority>
    <name><![CDATA[Merge sequential checks in &amp;&amp; or || expressions]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MergeSequentialChecks">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MergeSequentialChecksWhenPossible">
    <priority>INFO</priority>
    <name><![CDATA[Merge sequential checks in &amp;&amp; or || expressions (when possible)]]></name>
    <description><![CDATA[Merge sequential checks in &amp;&amp; or || expressions (when possible)]]></description>
  </rule>
  <rule key="MethodOverloadWithOptionalParameter">
    <priority>MAJOR</priority>
    <name><![CDATA[Method with optional or 'params' parameter is hidden by overload]]></name>
    <description><![CDATA[Method with optional or 'params' parameter is hidden by overload]]></description>
  </rule>
  <rule key="MethodSafeThis">
    <priority>INFO</priority>
    <name><![CDATA[Member assigned by a function may be converted to function member]]></name>
    <description><![CDATA[Member assigned by a function may be converted to function member]]></description>
  </rule>
  <rule key="MethodSupportsCancellation">
    <priority>INFO</priority>
    <name><![CDATA[Method supports cancellation]]></name>
    <description><![CDATA[Method supports cancellation]]></description>
  </rule>
  <rule key="MissingAltAttributeInImgTag">
    <priority>MINOR</priority>
    <name><![CDATA[Important tags or attributes missing: &lt;img&gt; should specify alternative text]]></name>
    <description><![CDATA[Important tags or attributes missing: &lt;img&gt; should specify alternative text]]></description>
  </rule>
  <rule key="MissingAttribute">
    <priority>MAJOR</priority>
    <name><![CDATA[Missing required attribute]]></name>
    <description><![CDATA[Missing required attribute]]></description>
  </rule>
  <rule key="MissingBodyTag">
    <priority>MAJOR</priority>
    <name><![CDATA[Important tags or attributes missing: Missing &lt;body&gt;]]></name>
    <description><![CDATA[Important tags or attributes missing: Missing &lt;body&gt;]]></description>
  </rule>
  <rule key="MissingHasOwnPropertyInForeach">
    <priority>MAJOR</priority>
    <name><![CDATA[There is no .hasOwnProperty() check in a body of 'for in' loop. This will cause an enumeration of prototype properties]]></name>
    <description><![CDATA[There is no .hasOwnProperty() check in a body of 'for in' loop. This will cause an enumeration of prototype properties]]></description>
  </rule>
  <rule key="MissingHeadAndBodyTags">
    <priority>MAJOR</priority>
    <name><![CDATA[Important tags or attributes missing: Missing &lt;head&gt; and &lt;body&gt;]]></name>
    <description><![CDATA[Important tags or attributes missing: Missing &lt;head&gt; and &lt;body&gt;]]></description>
  </rule>
  <rule key="MissingHeadTag">
    <priority>MAJOR</priority>
    <name><![CDATA[Important tags or attributes missing: Missing &lt;head&gt;]]></name>
    <description><![CDATA[Important tags or attributes missing: Missing &lt;head&gt;]]></description>
  </rule>
  <rule key="MissingTitleTag">
    <priority>MINOR</priority>
    <name><![CDATA[Important tags or attributes missing: Missing &lt;title&gt;]]></name>
    <description><![CDATA[Important tags or attributes missing: Missing &lt;title&gt;]]></description>
  </rule>
  <rule key="MisuseOfOwnerFunctionThis">
    <priority>MAJOR</priority>
    <name><![CDATA[Misuse of 'this' qualifier in inner function]]></name>
    <description><![CDATA[Misuse of 'this' qualifier in inner function]]></description>
  </rule>
  <rule key="MoreSpecificForeachVariableTypeAvailable">
    <priority>INFO</priority>
    <name><![CDATA[Iteration variable can be declared with a more specific type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MoreSpecificForeachVariableTypeAvailable">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MoreSpecificSignatureAfterLessSpecific">
    <priority>MAJOR</priority>
    <name><![CDATA[More specific signature follows less specific]]></name>
    <description><![CDATA[More specific signature follows less specific]]></description>
  </rule>
  <rule key="MultipleDeclarationsInForeach">
    <priority>CRITICAL</priority>
    <name><![CDATA[Multiple declarations in 'for in' error]]></name>
    <description><![CDATA[Multiple declarations in 'for in' error]]></description>
  </rule>
  <rule key="MultipleNullableAttributesUsage">
    <priority>MAJOR</priority>
    <name><![CDATA[Multiple nullable attributes usage]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=MultipleNullableAttributesUsage">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MultipleOrderBy">
    <priority>MAJOR</priority>
    <name><![CDATA[Multiple sequential 'OrderBy' invocation]]></name>
    <description><![CDATA[Multiple sequential 'OrderBy' invocation]]></description>
  </rule>
  <rule key="MultipleOutputTags">
    <priority>MAJOR</priority>
    <name><![CDATA[Multiple output tags defined]]></name>
    <description><![CDATA[Multiple output tags defined]]></description>
  </rule>
  <rule key="MultipleResolveCandidatesInText">
    <priority>MAJOR</priority>
    <name><![CDATA[Ambiguous symbols in text argument]]></name>
    <description><![CDATA[Ambiguous symbols in text argument]]></description>
  </rule>
  <rule key="MustUseReturnValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Return value of [MustUseReturnValue] annotated method is not used]]></name>
    <description><![CDATA[Return value of [MustUseReturnValue] annotated method is not used]]></description>
  </rule>
  <rule key="Mvc.ActionNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Unknown action]]></name>
    <description><![CDATA[MVC: Unknown action]]></description>
  </rule>
  <rule key="Mvc.AreaNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Unknown area]]></name>
    <description><![CDATA[MVC: Unknown area]]></description>
  </rule>
  <rule key="Mvc.ControllerNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Unknown controller]]></name>
    <description><![CDATA[MVC: Unknown controller]]></description>
  </rule>
  <rule key="Mvc.InvalidModelType">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Mismatch Model Type]]></name>
    <description><![CDATA[MVC: Mismatch Model Type]]></description>
  </rule>
  <rule key="Mvc.MasterpageNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Unknown masterpage]]></name>
    <description><![CDATA[MVC: Unknown masterpage]]></description>
  </rule>
  <rule key="Mvc.PartialViewNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Unknown partial view]]></name>
    <description><![CDATA[MVC: Unknown partial view]]></description>
  </rule>
  <rule key="Mvc.TemplateNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Unknown template]]></name>
    <description><![CDATA[MVC: Unknown template]]></description>
  </rule>
  <rule key="Mvc.ViewComponentNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Unknown view component]]></name>
    <description><![CDATA[MVC: Unknown view component]]></description>
  </rule>
  <rule key="Mvc.ViewComponentViewNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Unknown view component view]]></name>
    <description><![CDATA[MVC: Unknown view component view]]></description>
  </rule>
  <rule key="Mvc.ViewNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[MVC: Unknown view]]></name>
    <description><![CDATA[MVC: Unknown view]]></description>
  </rule>
  <rule key="NativeTypePrototypeExtending">
    <priority>MAJOR</priority>
    <name><![CDATA[Extending prototype of native object]]></name>
    <description><![CDATA[Extending prototype of native object]]></description>
  </rule>
  <rule key="NativeTypePrototypeOverwriting">
    <priority>MAJOR</priority>
    <name><![CDATA[Overwriting prototype of native object]]></name>
    <description><![CDATA[Overwriting prototype of native object]]></description>
  </rule>
  <rule key="NegativeEqualityExpression">
    <priority>INFO</priority>
    <name><![CDATA[Simplify negative equality expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=NegativeEqualityExpression">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="NestedStringInterpolation">
    <priority>INFO</priority>
    <name><![CDATA[Nested string interpolation can be inlined]]></name>
    <description><![CDATA[Nested string interpolation can be inlined]]></description>
  </rule>
  <rule key="NonAssignedConstant">
    <priority>CRITICAL</priority>
    <name><![CDATA[Non-assigned constant]]></name>
    <description><![CDATA[Non-assigned constant]]></description>
  </rule>
  <rule key="NonReadonlyMemberInGetHashCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Non-readonly type member referenced in 'GetHashCode()']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=NonReadonlyMemberInGetHashCode">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="NonVolatileFieldInDoubleCheckLocking">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible incorrect implementation of Double-Check Locking. Checked field must be volatile or assigned from local variable after 'Thread.MemoryBarrier()' call]]></name>
    <description><![CDATA[Possible incorrect implementation of Double-Check Locking. Checked field must be volatile or assigned from local variable after 'Thread.MemoryBarrier()' call]]></description>
  </rule>
  <rule key="NotAccessedField.Compiler">
    <priority>MAJOR</priority>
    <name><![CDATA[Non-accessed field]]></name>
    <description><![CDATA[Non-accessed field]]></description>
  </rule>
  <rule key="NotAccessedField.Global">
    <priority>INFO</priority>
    <name><![CDATA[Non-accessed field: Non-private accessibility]]></name>
    <description><![CDATA[Non-accessed field: Non-private accessibility]]></description>
  </rule>
  <rule key="NotAccessedField.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Non-accessed field: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=NotAccessedField.Local">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="NotAccessedVariable">
    <priority>MAJOR</priority>
    <name><![CDATA[Non-accessed local variable]]></name>
    <description><![CDATA[Non-accessed local variable]]></description>
  </rule>
  <rule key="NotAccessedVariable.Compiler">
    <priority>MAJOR</priority>
    <name><![CDATA[Non-accessed local variable]]></name>
    <description><![CDATA[Non-accessed local variable]]></description>
  </rule>
  <rule key="NotAllPathsReturnValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Not all code paths return a value]]></name>
    <description><![CDATA[Not all code paths return a value]]></description>
  </rule>
  <rule key="NotAssignedOutParameter">
    <priority>MAJOR</priority>
    <name><![CDATA['out' parameter is not assigned upon exit]]></name>
    <description><![CDATA['out' parameter is not assigned upon exit]]></description>
  </rule>
  <rule key="NotDeclaredInParentCulture">
    <priority>MAJOR</priority>
    <name><![CDATA[Resource is not declared in base culture]]></name>
    <description><![CDATA[Resource is not declared in base culture]]></description>
  </rule>
  <rule key="NotNullMemberIsNotInitialized">
    <priority>MAJOR</priority>
    <name><![CDATA[Member with '[NotNull]' attribute is not initialized at constructor exit]]></name>
    <description><![CDATA[Member with '[NotNull]' attribute is not initialized at constructor exit]]></description>
  </rule>
  <rule key="NotOverriddenInSpecificCulture">
    <priority>MAJOR</priority>
    <name><![CDATA[Resource is not overridden in specific culture]]></name>
    <description><![CDATA[Resource is not overridden in specific culture]]></description>
  </rule>
  <rule key="NotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot resolve symbol]]></name>
    <description><![CDATA[Cannot resolve symbol]]></description>
  </rule>
  <rule key="NotResolvedInText">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot resolve symbol in text argument]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=NotResolvedInText">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ObjectCreationAsStatement">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible unassigned object created by 'new' expression]]></name>
    <description><![CDATA[Possible unassigned object created by 'new' expression]]></description>
  </rule>
  <rule key="ObjectDestructuringWithoutParentheses">
    <priority>CRITICAL</priority>
    <name><![CDATA[Non-parenthesized object destructuring assignment cannot be used in an expression statement]]></name>
    <description><![CDATA[Non-parenthesized object destructuring assignment cannot be used in an expression statement]]></description>
  </rule>
  <rule key="ObsoleteElement">
    <priority>MAJOR</priority>
    <name><![CDATA[Use of obsolete type or type member]]></name>
    <description><![CDATA[Use of obsolete type or type member]]></description>
  </rule>
  <rule key="ObsoleteElementError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Use of obsolete type or type member (error)]]></name>
    <description><![CDATA[Use of obsolete type or type member (error)]]></description>
  </rule>
  <rule key="OctalLiteralsNotAllowedError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Octal literals and escape sequences using in 'strict mode']]></name>
    <description><![CDATA[Octal literals and escape sequences using in 'strict mode']]></description>
  </rule>
  <rule key="OlTagContainsNonLiElements">
    <priority>MINOR</priority>
    <name><![CDATA[Elements not allowed in context: &lt;ol&gt; contains elements other than &lt;li&gt; or &lt;li&gt; is unclosed]]></name>
    <description><![CDATA[Elements not allowed in context: &lt;ol&gt; contains elements other than &lt;li&gt; or &lt;li&gt; is unclosed]]></description>
  </rule>
  <rule key="OneWayOperationContractWithReturnType">
    <priority>MAJOR</priority>
    <name><![CDATA[One way operations couldn't return values]]></name>
    <description><![CDATA[One way operations couldn't return values]]></description>
  </rule>
  <rule key="OperationContractWithoutServiceContract">
    <priority>MAJOR</priority>
    <name><![CDATA[Method is marked as OperationContract but containing type isn't marked as ServiceContract]]></name>
    <description><![CDATA[Method is marked as OperationContract but containing type isn't marked as ServiceContract]]></description>
  </rule>
  <rule key="OperatorIsCanBeUsed">
    <priority>MAJOR</priority>
    <name><![CDATA[Operator 'is'/'Type Of ... Is ...' can be used]]></name>
    <description><![CDATA[Operator 'is'/'Type Of ... Is ...' can be used]]></description>
  </rule>
  <rule key="OptionalParameterHierarchyMismatch">
    <priority>MAJOR</priority>
    <name><![CDATA[Mismatch optional parameter value in overridden method]]></name>
    <description><![CDATA[Mismatch optional parameter value in overridden method]]></description>
  </rule>
  <rule key="OptionalParameterRefOut">
    <priority>MAJOR</priority>
    <name><![CDATA['ref' or 'out' parameter with [Optional] attribute]]></name>
    <description><![CDATA['ref' or 'out' parameter with [Optional] attribute]]></description>
  </rule>
  <rule key="OtherTagsInsideScript1">
    <priority>CRITICAL</priority>
    <name><![CDATA[Script tag errors: Other tags inside &lt;script&gt; - possibly unclosed &lt;script&gt;]]></name>
    <description><![CDATA[Script tag errors: Other tags inside &lt;script&gt; - possibly unclosed &lt;script&gt;]]></description>
  </rule>
  <rule key="OtherTagsInsideScript2">
    <priority>CRITICAL</priority>
    <name><![CDATA[Script tag errors: Other tags inside &lt;script&gt; - possibly unclosed &lt;script&gt;]]></name>
    <description><![CDATA[Script tag errors: Other tags inside &lt;script&gt; - possibly unclosed &lt;script&gt;]]></description>
  </rule>
  <rule key="OtherTagsInsideUnclosedScript">
    <priority>CRITICAL</priority>
    <name><![CDATA[Script tag errors: Unclosed &lt;script&gt; with other tags inside]]></name>
    <description><![CDATA[Script tag errors: Unclosed &lt;script&gt; with other tags inside]]></description>
  </rule>
  <rule key="OutputTagRequired">
    <priority>MAJOR</priority>
    <name><![CDATA[Output tag required]]></name>
    <description><![CDATA[Output tag required]]></description>
  </rule>
  <rule key="OverloadSignatureInferring">
    <priority>MINOR</priority>
    <name><![CDATA[Possible overloads may be inferred by function body]]></name>
    <description><![CDATA[Possible overloads may be inferred by function body]]></description>
  </rule>
  <rule key="OverriddenWithEmptyValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Resource overrides base resource with empty value]]></name>
    <description><![CDATA[Resource overrides base resource with empty value]]></description>
  </rule>
  <rule key="OverriddenWithSameValue">
    <priority>INFO</priority>
    <name><![CDATA[Resource is overridden with identical value]]></name>
    <description><![CDATA[Resource is overridden with identical value]]></description>
  </rule>
  <rule key="ParameterDoesntMakeAnySense">
    <priority>MAJOR</priority>
    <name><![CDATA[Parameter doesn't participate in the main signature]]></name>
    <description><![CDATA[Parameter doesn't participate in the main signature]]></description>
  </rule>
  <rule key="ParameterHidesMember">
    <priority>MAJOR</priority>
    <name><![CDATA[Parameter hides member]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ParameterHidesMember">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ParameterTypeCanBeEnumerable.Global">
    <priority>MINOR</priority>
    <name><![CDATA[Parameter type can be IEnumerable&lt;T&gt;: Non-private accessibility]]></name>
    <description><![CDATA[Parameter type can be IEnumerable&lt;T&gt;: Non-private accessibility]]></description>
  </rule>
  <rule key="ParameterTypeCanBeEnumerable.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Parameter type can be IEnumerable&lt;T&gt;: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ParameterTypeCanBeEnumerable.Local">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ParameterValueIsNotUsed">
    <priority>MAJOR</priority>
    <name><![CDATA[Parameter value is not used]]></name>
    <description><![CDATA[Parameter value is not used]]></description>
  </rule>
  <rule key="PartialMethodParameterNameMismatch">
    <priority>MAJOR</priority>
    <name><![CDATA[Parameter name differs in partial method declaration]]></name>
    <description><![CDATA[Parameter name differs in partial method declaration]]></description>
  </rule>
  <rule key="PartialMethodWithSinglePart">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'partial' modifier on method declaration]]></name>
    <description><![CDATA[Redundant 'partial' modifier on method declaration]]></description>
  </rule>
  <rule key="PartialTypeWithSinglePart">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'partial' modifier on type declaration]]></name>
    <description><![CDATA[Redundant 'partial' modifier on type declaration]]></description>
  </rule>
  <rule key="PathNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Cannot resolve file system path]]></name>
    <description><![CDATA[Cannot resolve file system path]]></description>
  </rule>
  <rule key="PatternAlwaysMatches">
    <priority>MAJOR</priority>
    <name><![CDATA[The source expression always matches the provided pattern]]></name>
    <description><![CDATA[The source expression always matches the provided pattern]]></description>
  </rule>
  <rule key="PatternAlwaysOfType">
    <priority>MAJOR</priority>
    <name><![CDATA[The source expression is always of pattern's type]]></name>
    <description><![CDATA[The source expression is always of pattern's type]]></description>
  </rule>
  <rule key="PatternNeverMatches">
    <priority>MAJOR</priority>
    <name><![CDATA[The source expression never matches the provided pattern]]></name>
    <description><![CDATA[The source expression never matches the provided pattern]]></description>
  </rule>
  <rule key="PolymorphicFieldLikeEventInvocation">
    <priority>MAJOR</priority>
    <name><![CDATA[Invocation of polymorphic field-like event]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PolymorphicFieldLikeEventInvocation">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleInfiniteInheritance">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible infinite inheritance]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PossibleInfiniteInheritance">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleIntendedRethrow">
    <priority>MAJOR</priority>
    <name><![CDATA[Exception rethrow possibly intended]]></name>
    <description><![CDATA[Exception rethrow possibly intended]]></description>
  </rule>
  <rule key="PossibleInterfaceMemberAmbiguity">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible ambiguity while accessing member by interface]]></name>
    <description><![CDATA[Possible ambiguity while accessing member by interface]]></description>
  </rule>
  <rule key="PossibleInvalidCastException">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible 'System.InvalidCastException']]></name>
    <description><![CDATA[Possible 'System.InvalidCastException']]></description>
  </rule>
  <rule key="PossibleInvalidCastExceptionInForeachLoop">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible 'System.InvalidCastException' in foreach loop]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PossibleInvalidCastExceptionInForeachLoop">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleInvalidOperationException">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible 'System.InvalidOperationException']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PossibleInvalidOperationException">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleLossOfFraction">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible loss of fraction]]></name>
    <description><![CDATA[Possible loss of fraction]]></description>
  </rule>
  <rule key="PossibleMistakenArgument">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken argument: Possible mistaken argument]]></name>
    <description><![CDATA[Possible mistaken argument: Possible mistaken argument]]></description>
  </rule>
  <rule key="PossibleMistakenCallToGetType.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></name>
    <description><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></description>
  </rule>
  <rule key="PossibleMistakenCallToGetType.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></name>
    <description><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></description>
  </rule>
  <rule key="PossibleMultipleEnumeration">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible multiple enumeration of IEnumerable]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PossibleMultipleEnumeration">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleMultipleWriteAccessInDoubleCheckLocking">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible incorrect implementation of Double-Check Locking pattern. Possible multiple write access to checked field]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PossibleMultipleWriteAccessInDoubleCheckLocking">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleNullReferenceException">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible 'System.NullReferenceException']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PossibleNullReferenceException">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleStructMemberModificationOfNonVariableStruct">
    <priority>MAJOR</priority>
    <name><![CDATA[Assignment to a property of a readonly field can be useless]]></name>
    <description><![CDATA[Assignment to a property of a readonly field can be useless]]></description>
  </rule>
  <rule key="PossibleUnintendedReferenceComparison">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible unintended reference comparison]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PossibleUnintendedReferenceComparison">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleWriteToMe">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible write to 'Me']]></name>
    <description><![CDATA[Possible write to 'Me']]></description>
  </rule>
  <rule key="PossiblyIncorrectlyBrokenStatement">
    <priority>MAJOR</priority>
    <name><![CDATA[Statement is possibly incorrectly broken by a newline]]></name>
    <description><![CDATA[Statement is possibly incorrectly broken by a newline]]></description>
  </rule>
  <rule key="PossiblyMissingIndexerInitializerComma">
    <priority>MAJOR</priority>
    <name><![CDATA[Possibly missing comma before indexer initializer]]></name>
    <description><![CDATA[Possibly missing comma before indexer initializer]]></description>
  </rule>
  <rule key="PossiblyMistakenUseOfParamsMethod">
    <priority>MAJOR</priority>
    <name><![CDATA[Method with 'params' is invoked while more specific method is available]]></name>
    <description><![CDATA[Method with 'params' is invoked while more specific method is available]]></description>
  </rule>
  <rule key="PossiblyUnassignedProperty">
    <priority>MINOR</priority>
    <name><![CDATA[Use of possibly unassigned property or global variable]]></name>
    <description><![CDATA[Use of possibly unassigned property or global variable]]></description>
  </rule>
  <rule key="PrivateFieldCanBeConvertedToLocalVariable">
    <priority>MAJOR</priority>
    <name><![CDATA[Private field can be converted to local variable]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PrivateFieldCanBeConvertedToLocalVariable">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PrivateVariableCanBeMadeReadonly">
    <priority>MINOR</priority>
    <name><![CDATA[Private class field can be made readonly]]></name>
    <description><![CDATA[Private class field can be made readonly]]></description>
  </rule>
  <rule key="PropertyGetterCannotHaveParameters">
    <priority>CRITICAL</priority>
    <name><![CDATA[Property getter cannot have parameters]]></name>
    <description><![CDATA[Property getter cannot have parameters]]></description>
  </rule>
  <rule key="PropertyNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Cannot resolve property]]></name>
    <description><![CDATA[Cannot resolve property]]></description>
  </rule>
  <rule key="PropertySetterMustHaveSingleParameter">
    <priority>CRITICAL</priority>
    <name><![CDATA[Property setter must have a single parameter]]></name>
    <description><![CDATA[Property setter must have a single parameter]]></description>
  </rule>
  <rule key="PublicConstructorInAbstractClass">
    <priority>INFO</priority>
    <name><![CDATA[Make constructor in abstract class protected]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=PublicConstructorInAbstractClass">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PureAttributeOnVoidMethod">
    <priority>MAJOR</priority>
    <name><![CDATA['void' method is annotated by [Pure] attribute]]></name>
    <description><![CDATA['void' method is annotated by [Pure] attribute]]></description>
  </rule>
  <rule key="QualifiedExpressionIsNull">
    <priority>MAJOR</priority>
    <name><![CDATA[Qualifier is 'null' or 'undefined']]></name>
    <description><![CDATA[Qualifier is 'null' or 'undefined']]></description>
  </rule>
  <rule key="QualifiedExpressionMaybeNull">
    <priority>MAJOR</priority>
    <name><![CDATA[Qualifier can be 'null' or 'undefined']]></name>
    <description><![CDATA[Qualifier can be 'null' or 'undefined']]></description>
  </rule>
  <rule key="QuantifierAfterAchor">
    <priority>MAJOR</priority>
    <name><![CDATA[Meaningless quantifier after an anchor]]></name>
    <description><![CDATA[Meaningless quantifier after an anchor]]></description>
  </rule>
  <rule key="Razor.LayoutNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Unknown Razor layout]]></name>
    <description><![CDATA[Unknown Razor layout]]></description>
  </rule>
  <rule key="Razor.SectionNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Unknown Razor section]]></name>
    <description><![CDATA[Unknown Razor section]]></description>
  </rule>
  <rule key="ReadAccessInDoubleCheckLocking">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible incorrect implementation of Double-Check Locking pattern. Read access to checked field]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ReadAccessInDoubleCheckLocking">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="Redundant">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant code]]></name>
    <description><![CDATA[Redundant code]]></description>
  </rule>
  <rule key="RedundantAnonymousTypePropertyName">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant anonymous type property explicit name]]></name>
    <description><![CDATA[Redundant anonymous type property explicit name]]></description>
  </rule>
  <rule key="RedundantArgumentDefaultValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant argument with default value]]></name>
    <description><![CDATA[Redundant argument with default value]]></description>
  </rule>
  <rule key="RedundantArrayCreationExpression">
    <priority>MINOR</priority>
    <name><![CDATA[Array creation can be replaced with array initializer]]></name>
    <description><![CDATA[Array creation can be replaced with array initializer]]></description>
  </rule>
  <rule key="RedundantArrayLowerBoundSpecification">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant array lower bound specification]]></name>
    <description><![CDATA[Redundant array lower bound specification]]></description>
  </rule>
  <rule key="RedundantAssignment">
    <priority>MAJOR</priority>
    <name><![CDATA[Assignment is not used]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantAssignment">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantAttributeParentheses">
    <priority>MINOR</priority>
    <name><![CDATA[Parentheses are redundant if attribute has no arguments]]></name>
    <description><![CDATA[Parentheses are redundant if attribute has no arguments]]></description>
  </rule>
  <rule key="RedundantAttributeUsageProperty">
    <priority>INFO</priority>
    <name><![CDATA[Redundant [AttributeUsage] attribute property assignment]]></name>
    <description><![CDATA[Redundant [AttributeUsage] attribute property assignment]]></description>
  </rule>
  <rule key="RedundantBaseConstructorCall">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant base constructor call]]></name>
    <description><![CDATA[Redundant base constructor call]]></description>
  </rule>
  <rule key="RedundantBaseQualifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'base.' qualifier]]></name>
    <description><![CDATA[Redundant 'base.' qualifier]]></description>
  </rule>
  <rule key="RedundantBlock">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant block]]></name>
    <description><![CDATA[Redundant block]]></description>
  </rule>
  <rule key="RedundantBoolCompare">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant boolean comparison]]></name>
    <description><![CDATA[Redundant boolean comparison]]></description>
  </rule>
  <rule key="RedundantCaseLabel">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'case' label]]></name>
    <description><![CDATA[Redundant 'case' label]]></description>
  </rule>
  <rule key="RedundantCast">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant cast]]></name>
    <description><![CDATA[Redundant cast]]></description>
  </rule>
  <rule key="RedundantCast.0">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant cast to 'object': Redundant cast to 'object']]></name>
    <description><![CDATA[Redundant cast to 'object': Redundant cast to 'object']]></description>
  </rule>
  <rule key="RedundantCatchClause">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant catch clause]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantCatchClause">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantCheckBeforeAssignment">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant condition check before assignments]]></name>
    <description><![CDATA[Redundant condition check before assignments]]></description>
  </rule>
  <rule key="RedundantCollectionInitializerElementBraces">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant braces in collection initializer]]></name>
    <description><![CDATA[Redundant braces in collection initializer]]></description>
  </rule>
  <rule key="RedundantCommaInAttributeList">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant comma in attribute list]]></name>
    <description><![CDATA[Redundant comma in attribute list]]></description>
  </rule>
  <rule key="RedundantCommaInEnumDeclaration">
    <priority>INFO</priority>
    <name><![CDATA[Redundant comma in enum declaration]]></name>
    <description><![CDATA[Redundant comma in enum declaration]]></description>
  </rule>
  <rule key="RedundantCommaInInitializer">
    <priority>INFO</priority>
    <name><![CDATA[Redundant comma in array/object/collection/anonymous type initializer]]></name>
    <description><![CDATA[Redundant comma in array/object/collection/anonymous type initializer]]></description>
  </rule>
  <rule key="RedundantComparisonWithBoolean">
    <priority>MAJOR</priority>
    <name><![CDATA[Comparison of boolean with boolean value is equivalent to value or negated value]]></name>
    <description><![CDATA[Comparison of boolean with boolean value is equivalent to value or negated value]]></description>
  </rule>
  <rule key="RedundantCssHack">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant CSS hack]]></name>
    <description><![CDATA[Redundant CSS hack]]></description>
  </rule>
  <rule key="RedundantDeclarationSemicolon">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant semicolon after type or namespace declaration]]></name>
    <description><![CDATA[Redundant semicolon after type or namespace declaration]]></description>
  </rule>
  <rule key="RedundantDefaultMemberInitializer">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant member initializer]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantDefaultMemberInitializer">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantDelegateCreation">
    <priority>MAJOR</priority>
    <name><![CDATA[Explicit delegate creation expression is redundant]]></name>
    <description><![CDATA[Explicit delegate creation expression is redundant]]></description>
  </rule>
  <rule key="RedundantDisableWarningComment">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant disable code inspection comment]]></name>
    <description><![CDATA[Redundant disable code inspection comment]]></description>
  </rule>
  <rule key="RedundantElseBlock">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'else' block]]></name>
    <description><![CDATA[Redundant 'else' block]]></description>
  </rule>
  <rule key="RedundantEmptyCaseElse">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant empty 'Case Else' statement]]></name>
    <description><![CDATA[Redundant empty 'Case Else' statement]]></description>
  </rule>
  <rule key="RedundantEmptyConstructor">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant empty constructor without parameters]]></name>
    <description><![CDATA[Redundant empty constructor without parameters]]></description>
  </rule>
  <rule key="RedundantEmptyFinallyBlock">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant empty finally block]]></name>
    <description><![CDATA[Redundant empty finally block]]></description>
  </rule>
  <rule key="RedundantEmptyObjectCreationArgumentList">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant empty argument list on object creation expression]]></name>
    <description><![CDATA[Redundant empty argument list on object creation expression]]></description>
  </rule>
  <rule key="RedundantEmptyObjectOrCollectionInitializer">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant empty object or collection initializer]]></name>
    <description><![CDATA[Redundant empty object or collection initializer]]></description>
  </rule>
  <rule key="RedundantEmptySwitchSection">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant empty switch section]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantEmptySwitchSection">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantEnumerableCastCall">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'IEnumerable.Cast&lt;T&gt;' or 'IEnumerable.OfType&lt;T&gt;' call]]></name>
    <description><![CDATA[Redundant 'IEnumerable.Cast&lt;T&gt;' or 'IEnumerable.OfType&lt;T&gt;' call]]></description>
  </rule>
  <rule key="RedundantExplicitArrayCreation">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant explicit type in array creation]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantExplicitArrayCreation">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantExplicitArraySize">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant explicit size specification in array creation]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantExplicitArraySize">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantExplicitNullableCreation">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant explicit nullable type creation]]></name>
    <description><![CDATA[Redundant explicit nullable type creation]]></description>
  </rule>
  <rule key="RedundantExplicitParamsArrayCreation">
    <priority>INFO</priority>
    <name><![CDATA[Redundant explicit array creation in argument of 'params' parameter]]></name>
    <description><![CDATA[Redundant explicit array creation in argument of 'params' parameter]]></description>
  </rule>
  <rule key="RedundantExtendsListEntry">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant class or interface specification in base types list]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantExtendsListEntry">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantIfElseBlock">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'else' keyword]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantIfElseBlock">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantIfStatementThenKeyword">
    <priority>INFO</priority>
    <name><![CDATA[Keyword 'Then' is redundant in multiline 'If' statement]]></name>
    <description><![CDATA[Keyword 'Then' is redundant in multiline 'If' statement]]></description>
  </rule>
  <rule key="RedundantImmediateDelegateInvocation">
    <priority>INFO</priority>
    <name><![CDATA[Immediate delegate invocation]]></name>
    <description><![CDATA[Immediate delegate invocation]]></description>
  </rule>
  <rule key="RedundantIntermediateVariable">
    <priority>MINOR</priority>
    <name><![CDATA[Intermediate local variable is redundant and may be safely inlined]]></name>
    <description><![CDATA[Intermediate local variable is redundant and may be safely inlined]]></description>
  </rule>
  <rule key="RedundantIteratorKeyword">
    <priority>MAJOR</priority>
    <name><![CDATA[Iterator function without 'Yield' statements]]></name>
    <description><![CDATA[Iterator function without 'Yield' statements]]></description>
  </rule>
  <rule key="RedundantJumpStatement">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant control flow jump statement]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantJumpStatement">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantLambdaParameterType">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant lambda expression parameter type specification]]></name>
    <description><![CDATA[Redundant lambda expression parameter type specification]]></description>
  </rule>
  <rule key="RedundantLambdaSignatureParentheses">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant lambda signature parentheses]]></name>
    <description><![CDATA[Redundant lambda signature parentheses]]></description>
  </rule>
  <rule key="RedundantLocalClassName">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant local class name]]></name>
    <description><![CDATA[Redundant local class name]]></description>
  </rule>
  <rule key="RedundantLocalFunctionName">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant local function name]]></name>
    <description><![CDATA[Redundant local function name]]></description>
  </rule>
  <rule key="RedundantLogicalConditionalExpressionOperand">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant operand in logical conditional expression]]></name>
    <description><![CDATA[Redundant operand in logical conditional expression]]></description>
  </rule>
  <rule key="RedundantMeQualifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'Me.' qualifier]]></name>
    <description><![CDATA[Redundant 'Me.' qualifier]]></description>
  </rule>
  <rule key="RedundantMyBaseQualifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'MyBase.' qualifier]]></name>
    <description><![CDATA[Redundant 'MyBase.' qualifier]]></description>
  </rule>
  <rule key="RedundantMyClassQualifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'MyClass.' qualifier]]></name>
    <description><![CDATA[Redundant 'MyClass.' qualifier]]></description>
  </rule>
  <rule key="RedundantNameQualifier">
    <priority>INFO</priority>
    <name><![CDATA[Redundant name qualifier]]></name>
    <description><![CDATA[Redundant name qualifier]]></description>
  </rule>
  <rule key="RedundantNullableTypeMark">
    <priority>MAJOR</priority>
    <name><![CDATA[Type check for nullable type is equal to underlying type check]]></name>
    <description><![CDATA[Type check for nullable type is equal to underlying type check]]></description>
  </rule>
  <rule key="RedundantOverflowCheckingContext">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant arithmetic overflow checking context]]></name>
    <description><![CDATA[Redundant arithmetic overflow checking context]]></description>
  </rule>
  <rule key="RedundantOverload.Global">
    <priority>INFO</priority>
    <name><![CDATA[Redundant method overload: Non-private accessibility]]></name>
    <description><![CDATA[Redundant method overload: Non-private accessibility]]></description>
  </rule>
  <rule key="RedundantOverload.Local">
    <priority>INFO</priority>
    <name><![CDATA[Redundant method overload: Private accessibility]]></name>
    <description><![CDATA[Redundant method overload: Private accessibility]]></description>
  </rule>
  <rule key="RedundantOverriddenMember">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant member override]]></name>
    <description><![CDATA[Redundant member override]]></description>
  </rule>
  <rule key="RedundantParams">
    <priority>MAJOR</priority>
    <name><![CDATA['params' modifier is always ignored on overrides]]></name>
    <description><![CDATA['params' modifier is always ignored on overrides]]></description>
  </rule>
  <rule key="RedundantParentTypeDeclaration">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant parent type specification in extends/implements]]></name>
    <description><![CDATA[Redundant parent type specification in extends/implements]]></description>
  </rule>
  <rule key="RedundantParentheses">
    <priority>INFO</priority>
    <name><![CDATA[Remove redundant parentheses]]></name>
    <description><![CDATA[Remove redundant parentheses]]></description>
  </rule>
  <rule key="RedundantPropertyParentheses">
    <priority>MINOR</priority>
    <name><![CDATA[Parameterless property parentheses are redundant]]></name>
    <description><![CDATA[Parameterless property parentheses are redundant]]></description>
  </rule>
  <rule key="RedundantQualifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant qualifier]]></name>
    <description><![CDATA[Redundant qualifier]]></description>
  </rule>
  <rule key="RedundantQueryOrderByAscendingKeyword">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'orderby' clause 'ascending' keyword]]></name>
    <description><![CDATA[Redundant 'orderby' clause 'ascending' keyword]]></description>
  </rule>
  <rule key="RedundantSetterValueParameterDeclaration">
    <priority>MINOR</priority>
    <name><![CDATA[Explicit 'value' parameter declaration is redundant]]></name>
    <description><![CDATA[Explicit 'value' parameter declaration is redundant]]></description>
  </rule>
  <rule key="RedundantStringFormatCall">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'string.Format()' call]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantStringFormatCall">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantStringInterpolation">
    <priority>INFO</priority>
    <name><![CDATA[Redundant string interpolation]]></name>
    <description><![CDATA[Redundant string interpolation]]></description>
  </rule>
  <rule key="RedundantStringToCharArrayCall">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'string.ToCharArray()' call]]></name>
    <description><![CDATA[Redundant 'string.ToCharArray()' call]]></description>
  </rule>
  <rule key="RedundantStringType">
    <priority>INFO</priority>
    <name><![CDATA[Redundant string type]]></name>
    <description><![CDATA[Redundant string type]]></description>
  </rule>
  <rule key="RedundantTernaryExpression">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant conditional ternary expression usage]]></name>
    <description><![CDATA[Redundant conditional ternary expression usage]]></description>
  </rule>
  <rule key="RedundantToStringCall">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'object.ToString()' call]]></name>
    <description><![CDATA[Redundant 'object.ToString()' call]]></description>
  </rule>
  <rule key="RedundantToStringCallForValueType">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'object.ToString()' call for value types]]></name>
    <description><![CDATA[Redundant 'object.ToString()' call for value types]]></description>
  </rule>
  <rule key="RedundantTypeArgumentsOfMethod">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant type arguments of method]]></name>
    <description><![CDATA[Redundant type arguments of method]]></description>
  </rule>
  <rule key="RedundantTypeCast">
    <priority>MAJOR</priority>
    <name><![CDATA[Type cast is redundant: expression is always of provided type]]></name>
    <description><![CDATA[Type cast is redundant: expression is always of provided type]]></description>
  </rule>
  <rule key="RedundantTypeCastStructural">
    <priority>MAJOR</priority>
    <name><![CDATA[Type cast is redundant: expression is of a structurally compatible type]]></name>
    <description><![CDATA[Type cast is redundant: expression is of a structurally compatible type]]></description>
  </rule>
  <rule key="RedundantUnits">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant measure unit]]></name>
    <description><![CDATA[Redundant measure unit]]></description>
  </rule>
  <rule key="RedundantUnsafeContext">
    <priority>MAJOR</priority>
    <name><![CDATA[Unsafe context declaration is redundant]]></name>
    <description><![CDATA[Unsafe context declaration is redundant]]></description>
  </rule>
  <rule key="RedundantUsingDirective">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant using directive]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RedundantUsingDirective">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantVariableTypeSpecification">
    <priority>MINOR</priority>
    <name><![CDATA[Type specification is redundant, because variable type is contextually determined from the type of assigned value]]></name>
    <description><![CDATA[Type specification is redundant, because variable type is contextually determined from the type of assigned value]]></description>
  </rule>
  <rule key="RedundantVerbatimPrefix">
    <priority>INFO</priority>
    <name><![CDATA[Redundant verbatim prefix]]></name>
    <description><![CDATA[Redundant verbatim prefix]]></description>
  </rule>
  <rule key="RedundantVerbatimStringPrefix">
    <priority>INFO</priority>
    <name><![CDATA[Redundant verbatim string prefix]]></name>
    <description><![CDATA[Redundant verbatim string prefix]]></description>
  </rule>
  <rule key="ReferenceEqualsWithValueType">
    <priority>MAJOR</priority>
    <name><![CDATA['Object.ReferenceEquals' is always false because it is called with value type]]></name>
    <description><![CDATA['Object.ReferenceEquals' is always false because it is called with value type]]></description>
  </rule>
  <rule key="RemoveConstructorInvocation">
    <priority>INFO</priority>
    <name><![CDATA[Remove constructor invocation: Remove constructor invocation]]></name>
    <description><![CDATA[Remove constructor invocation: Remove constructor invocation]]></description>
  </rule>
  <rule key="RemoveRedundantBraces">
    <priority>INFO</priority>
    <name><![CDATA[Use preferred braces style: Remove redundant braces]]></name>
    <description><![CDATA[Use preferred braces style: Remove redundant braces]]></description>
  </rule>
  <rule key="RemoveRedundantOrStatement.False">
    <priority>INFO</priority>
    <name><![CDATA[Remove redundant statement: Remove redundant statement]]></name>
    <description><![CDATA[Remove redundant statement: Remove redundant statement]]></description>
  </rule>
  <rule key="RemoveRedundantOrStatement.True">
    <priority>INFO</priority>
    <name><![CDATA[Remove redundant statement: Remove redundant statement]]></name>
    <description><![CDATA[Remove redundant statement: Remove redundant statement]]></description>
  </rule>
  <rule key="RemoveToList.1">
    <priority>INFO</priority>
    <name><![CDATA[Remove ToList(): Remove ToList()]]></name>
    <description><![CDATA[Remove ToList(): Remove ToList()]]></description>
  </rule>
  <rule key="RemoveToList.2">
    <priority>INFO</priority>
    <name><![CDATA[Remove ToList(): Remove ToList()]]></name>
    <description><![CDATA[Remove ToList(): Remove ToList()]]></description>
  </rule>
  <rule key="ReplaceIndicingWithArrayDestructuring">
    <priority>MINOR</priority>
    <name><![CDATA[Subsequent indexers may be replaced by a destructuring declaration or assignment]]></name>
    <description><![CDATA[Subsequent indexers may be replaced by a destructuring declaration or assignment]]></description>
  </rule>
  <rule key="ReplaceIndicingWithShortHandPropertiesAfterDestructuring">
    <priority>MINOR</priority>
    <name><![CDATA[Subsequent indexers in object literal fields may be simplified using a destructuring]]></name>
    <description><![CDATA[Subsequent indexers in object literal fields may be simplified using a destructuring]]></description>
  </rule>
  <rule key="ReplaceUndefinedCheckingSeriesWithObjectDestructuring">
    <priority>MINOR</priority>
    <name><![CDATA[A serie of undefined-checks for properties may be replaced by a destructuring]]></name>
    <description><![CDATA[A serie of undefined-checks for properties may be replaced by a destructuring]]></description>
  </rule>
  <rule key="ReplaceWithDestructuringSwap">
    <priority>MINOR</priority>
    <name><![CDATA[Intermediate local variable is redundant because it may be replaced with a destructuring swap expression]]></name>
    <description><![CDATA[Intermediate local variable is redundant because it may be replaced with a destructuring swap expression]]></description>
  </rule>
  <rule key="ReplaceWithFirstOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithFirstOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithFirstOrDefault.3">
    <priority>INFO</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithFirstOrDefault.4">
    <priority>INFO</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithLastOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithLastOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithLastOrDefault.3">
    <priority>INFO</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithLastOrDefault.4">
    <priority>INFO</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType&lt;T&gt;()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType&lt;T&gt;()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType&lt;T&gt;()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType&lt;T&gt;()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.3">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType&lt;T&gt;()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType&lt;T&gt;()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Any.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Any(): Replace with OfType&lt;T&gt;().Any()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Any(): Replace with OfType&lt;T&gt;().Any()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Any.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Any(): Replace with OfType&lt;T&gt;().Any(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Any(): Replace with OfType&lt;T&gt;().Any(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Count.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Count(): Replace with OfType&lt;T&gt;().Count()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Count(): Replace with OfType&lt;T&gt;().Count()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Count.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Count(): Replace with OfType&lt;T&gt;().Count(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Count(): Replace with OfType&lt;T&gt;().Count(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.First.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().First(): Replace with OfType&lt;T&gt;().First()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().First(): Replace with OfType&lt;T&gt;().First()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.First.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().First(): Replace with OfType&lt;T&gt;().First(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().First(): Replace with OfType&lt;T&gt;().First(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.FirstOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().FirstOrDefault(): Replace with OfType&lt;T&gt;().FirstOrDefault()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().FirstOrDefault(): Replace with OfType&lt;T&gt;().FirstOrDefault()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.FirstOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().FirstOrDefault(): Replace with OfType&lt;T&gt;().FirstOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().FirstOrDefault(): Replace with OfType&lt;T&gt;().FirstOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Last.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Last(): Replace with OfType&lt;T&gt;().Last()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Last(): Replace with OfType&lt;T&gt;().Last()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Last.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Last(): Replace with OfType&lt;T&gt;().Last(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Last(): Replace with OfType&lt;T&gt;().Last(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.LastOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().LastOrDefault(): Replace with OfType&lt;T&gt;().LastOrDefault()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().LastOrDefault(): Replace with OfType&lt;T&gt;().LastOrDefault()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.LastOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().LastOrDefault(): Replace with OfType&lt;T&gt;().LastOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().LastOrDefault(): Replace with OfType&lt;T&gt;().LastOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.LongCount">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().LongCount(): Replace with OfType&lt;T&gt;().LongCount()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().LongCount(): Replace with OfType&lt;T&gt;().LongCount()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Single.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Single(): Replace with OfType&lt;T&gt;().Single()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Single(): Replace with OfType&lt;T&gt;().Single()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Single.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Single(): Replace with OfType&lt;T&gt;().Single(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Single(): Replace with OfType&lt;T&gt;().Single(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.SingleOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().SingleOrDefault(): Replace with OfType&lt;T&gt;().SingleOrDefault()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().SingleOrDefault(): Replace with OfType&lt;T&gt;().SingleOrDefault()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.SingleOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().SingleOrDefault(): Replace with OfType&lt;T&gt;().SingleOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().SingleOrDefault(): Replace with OfType&lt;T&gt;().SingleOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Where">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Where(): Replace with OfType&lt;T&gt;().Where(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Where(): Replace with OfType&lt;T&gt;().Where(..)]]></description>
  </rule>
  <rule key="ReplaceWithSimpleAssignment.False">
    <priority>INFO</priority>
    <name><![CDATA[Replace with simple assignment: Replace with simple assignment]]></name>
    <description><![CDATA[Replace with simple assignment: Replace with simple assignment]]></description>
  </rule>
  <rule key="ReplaceWithSimpleAssignment.True">
    <priority>INFO</priority>
    <name><![CDATA[Replace with simple assignment: Replace with simple assignment]]></name>
    <description><![CDATA[Replace with simple assignment: Replace with simple assignment]]></description>
  </rule>
  <rule key="ReplaceWithSingleAssignment.False">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single assignment: Replace with single assignment]]></name>
    <description><![CDATA[Replace with single assignment: Replace with single assignment]]></description>
  </rule>
  <rule key="ReplaceWithSingleAssignment.True">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single assignment: Replace with single assignment]]></name>
    <description><![CDATA[Replace with single assignment: Replace with single assignment]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToAny">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Any(..): Replace with single call to Any(..)]]></name>
    <description><![CDATA[Replace with single call to Any(..): Replace with single call to Any(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToCount">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Count(..): Replace with single call to Count(..)]]></name>
    <description><![CDATA[Replace with single call to Count(..): Replace with single call to Count(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToFirst">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to First(..): Replace with single call to First(..)]]></name>
    <description><![CDATA[Replace with single call to First(..): Replace with single call to First(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToFirstOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to FirstOrDefault(..): Replace with single call to FirstOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to FirstOrDefault(..): Replace with single call to FirstOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToLast">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Last(..): Replace with single call to Last(..)]]></name>
    <description><![CDATA[Replace with single call to Last(..): Replace with single call to Last(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToLastOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to LastOrDefault(..): Replace with single call to LastOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to LastOrDefault(..): Replace with single call to LastOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToSingle">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Single(..): Replace with single call to Single(..)]]></name>
    <description><![CDATA[Replace with single call to Single(..): Replace with single call to Single(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToSingleOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to SingleOrDefault(..): Replace with single call to SingleOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to SingleOrDefault(..): Replace with single call to SingleOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithSingleOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithSingleOrDefault.3">
    <priority>INFO</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithSingleOrDefault.4">
    <priority>INFO</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithStringIsNullOrEmpty">
    <priority>INFO</priority>
    <name><![CDATA[Use 'String.IsNullOrEmpty']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ReplaceWithStringIsNullOrEmpty">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RequiredBaseTypesConflict">
    <priority>MAJOR</priority>
    <name><![CDATA[Required base type conflicting another type]]></name>
    <description><![CDATA[Required base type conflicting another type]]></description>
  </rule>
  <rule key="RequiredBaseTypesDirectConflict">
    <priority>MAJOR</priority>
    <name><![CDATA[Type specified in '[BaseTypeRequired]' attribute conflicts another type]]></name>
    <description><![CDATA[Type specified in '[BaseTypeRequired]' attribute conflicts another type]]></description>
  </rule>
  <rule key="RequiredBaseTypesIsNotInherited">
    <priority>MAJOR</priority>
    <name><![CDATA[Base type is required]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=RequiredBaseTypesIsNotInherited">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RequiresFallbackColor">
    <priority>MAJOR</priority>
    <name><![CDATA[Requires fallback color]]></name>
    <description><![CDATA[Requires fallback color]]></description>
  </rule>
  <rule key="ResourceItemNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Cannot resolve resource item]]></name>
    <description><![CDATA[Cannot resolve resource item]]></description>
  </rule>
  <rule key="ResourceNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Cannot resolve resource]]></name>
    <description><![CDATA[Cannot resolve resource]]></description>
  </rule>
  <rule key="ResxNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot resolve symbol]]></name>
    <description><![CDATA[Cannot resolve symbol]]></description>
  </rule>
  <rule key="ReturnFromGlobalScopetWithValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Return statement with a value in the global scope]]></name>
    <description><![CDATA[Return statement with a value in the global scope]]></description>
  </rule>
  <rule key="ReturnTypeCanBeEnumerable.Global">
    <priority>MINOR</priority>
    <name><![CDATA[Return type can be IEnumerable&lt;T&gt;: Non-private accessibility]]></name>
    <description><![CDATA[Return type can be IEnumerable&lt;T&gt;: Non-private accessibility]]></description>
  </rule>
  <rule key="ReturnTypeCanBeEnumerable.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Return type can be IEnumerable&lt;T&gt;: Private accessibility]]></name>
    <description><![CDATA[Return type can be IEnumerable&lt;T&gt;: Private accessibility]]></description>
  </rule>
  <rule key="ReturnValueOfPureMethodIsNotUsed">
    <priority>MAJOR</priority>
    <name><![CDATA[Return value of pure method is not used]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ReturnValueOfPureMethodIsNotUsed">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SameImportsWithDifferentName">
    <priority>MAJOR</priority>
    <name><![CDATA[Same item is imported twice with different names]]></name>
    <description><![CDATA[Same item is imported twice with different names]]></description>
  </rule>
  <rule key="SameVariableAssignment">
    <priority>MAJOR</priority>
    <name><![CDATA[Assignment of a local variable to itself is redundant]]></name>
    <description><![CDATA[Assignment of a local variable to itself is redundant]]></description>
  </rule>
  <rule key="ScriptTagHasBothSrcAndContentAttributes">
    <priority>CRITICAL</priority>
    <name><![CDATA[Script tag errors: &lt;script&gt; with both src and content]]></name>
    <description><![CDATA[Script tag errors: &lt;script&gt; with both src and content]]></description>
  </rule>
  <rule key="ScriptTagWithContentBeforeIncludes">
    <priority>MINOR</priority>
    <name><![CDATA[Script tag errors: &lt;script&gt; with content before included &lt;script&gt;]]></name>
    <description><![CDATA[Script tag errors: &lt;script&gt; with content before included &lt;script&gt;]]></description>
  </rule>
  <rule key="SealedMemberInSealedClass">
    <priority>MAJOR</priority>
    <name><![CDATA[Sealed member in sealed class]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=SealedMemberInSealedClass">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SeparateControlTransferStatement">
    <priority>INFO</priority>
    <name><![CDATA[Separate control transfer statement with blank line]]></name>
    <description><![CDATA[Separate control transfer statement with blank line]]></description>
  </rule>
  <rule key="SeviceContractWithoutOperations">
    <priority>MAJOR</priority>
    <name><![CDATA[Interfaces marked as ServiceContract should declare at least one OperationContract]]></name>
    <description><![CDATA[Interfaces marked as ServiceContract should declare at least one OperationContract]]></description>
  </rule>
  <rule key="SimilarAnonymousTypeNearby">
    <priority>MINOR</priority>
    <name><![CDATA[Similar anonymous type detected nearby]]></name>
    <description><![CDATA[Similar anonymous type detected nearby]]></description>
  </rule>
  <rule key="SimilarExpressionsComparison">
    <priority>MAJOR</priority>
    <name><![CDATA[Similar expressions comparison]]></name>
    <description><![CDATA[Similar expressions comparison]]></description>
  </rule>
  <rule key="SimplifyConditionalOperator">
    <priority>INFO</priority>
    <name><![CDATA[Simplify conditional operator]]></name>
    <description><![CDATA[Simplify conditional operator]]></description>
  </rule>
  <rule key="SimplifyConditionalTernaryExpression">
    <priority>INFO</priority>
    <name><![CDATA[Simplify conditional ternary expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=SimplifyConditionalTernaryExpression">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SimplifyIIf">
    <priority>INFO</priority>
    <name><![CDATA[Simplify 'IIf']]></name>
    <description><![CDATA[Simplify 'IIf']]></description>
  </rule>
  <rule key="SimplifyLinqExpression">
    <priority>INFO</priority>
    <name><![CDATA[Simplify LINQ expression]]></name>
    <description><![CDATA[Simplify LINQ expression]]></description>
  </rule>
  <rule key="SpecifyACultureInStringConversionExplicitly">
    <priority>MAJOR</priority>
    <name><![CDATA[Specify string culture explicitly]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=SpecifyACultureInStringConversionExplicitly">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SpecifyStringComparison">
    <priority>MINOR</priority>
    <name><![CDATA[Specify string comparison explicitly]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=SpecifyStringComparison">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SpecifyVariableTypeExplicitly">
    <priority>MINOR</priority>
    <name><![CDATA[Type of variable may be specified explicitly]]></name>
    <description><![CDATA[Type of variable may be specified explicitly]]></description>
  </rule>
  <rule key="StatementIsNotTerminated">
    <priority>MAJOR</priority>
    <name><![CDATA[Statement is not terminated with semicolon]]></name>
    <description><![CDATA[Statement is not terminated with semicolon]]></description>
  </rule>
  <rule key="StaticMemberInGenericType">
    <priority>MAJOR</priority>
    <name><![CDATA[Static field or auto-property in generic type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=StaticMemberInGenericType">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="StaticMemberInitializerReferesToMemberBelow">
    <priority>MAJOR</priority>
    <name><![CDATA[Static member initializer refers to static member below or in other part]]></name>
    <description><![CDATA[Static member initializer refers to static member below or in other part]]></description>
  </rule>
  <rule key="StaticProblemInText">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot access static symbol in text argument]]></name>
    <description><![CDATA[Cannot access static symbol in text argument]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.1">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.2">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.3">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.4">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.5">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.6">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareToIsCultureSpecific">
    <priority>MAJOR</priority>
    <name><![CDATA[String.CompareTo is culture-specific: String.CompareTo is culture-specific]]></name>
    <description><![CDATA[String.CompareTo is culture-specific: String.CompareTo is culture-specific]]></description>
  </rule>
  <rule key="StringConcatenationToTemplateString">
    <priority>MINOR</priority>
    <name><![CDATA[String concatenation may be converted to template string]]></name>
    <description><![CDATA[String concatenation may be converted to template string]]></description>
  </rule>
  <rule key="StringEndsWithIsCultureSpecific">
    <priority>INFO</priority>
    <name><![CDATA[String.EndsWith is culture-specific: String.EndsWith(string) is culture-specific]]></name>
    <description><![CDATA[String.EndsWith is culture-specific: String.EndsWith(string) is culture-specific]]></description>
  </rule>
  <rule key="StringIndexOfIsCultureSpecific.1">
    <priority>MAJOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string) is culture-specific]]></description>
  </rule>
  <rule key="StringIndexOfIsCultureSpecific.2">
    <priority>MAJOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringIndexOfIsCultureSpecific.3">
    <priority>MAJOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringLastIndexOfIsCultureSpecific.1">
    <priority>MAJOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string) is culture-specific]]></description>
  </rule>
  <rule key="StringLastIndexOfIsCultureSpecific.2">
    <priority>MAJOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringLastIndexOfIsCultureSpecific.3">
    <priority>MAJOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringLiteralAsInterpolationArgument">
    <priority>INFO</priority>
    <name><![CDATA[String literal can be inlined]]></name>
    <description><![CDATA[String literal can be inlined]]></description>
  </rule>
  <rule key="StringLiteralWrongQuotes">
    <priority>MINOR</priority>
    <name><![CDATA[Non-compliant quotes around string literal]]></name>
    <description><![CDATA[Non-compliant quotes around string literal]]></description>
  </rule>
  <rule key="StringStartsWithIsCultureSpecific">
    <priority>INFO</priority>
    <name><![CDATA[String.StartsWith is culture-specific: String.StartsWith(string) is culture-specific]]></name>
    <description><![CDATA[String.StartsWith is culture-specific: String.StartsWith(string) is culture-specific]]></description>
  </rule>
  <rule key="StructuralSearch">
    <priority>INFO</priority>
    <name><![CDATA[Structural Search Pattern]]></name>
    <description><![CDATA[Structural Search Pattern]]></description>
  </rule>
  <rule key="SuggestBaseTypeForParameter">
    <priority>MINOR</priority>
    <name><![CDATA[Parameter can be declared with base type]]></name>
    <description><![CDATA[Parameter can be declared with base type]]></description>
  </rule>
  <rule key="SuggestVarOrType_BuiltInTypes">
    <priority>MINOR</priority>
    <name><![CDATA[Use preferred 'var' style: For built-in types]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=SuggestVarOrType_BuiltInTypes">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SuggestVarOrType_Elsewhere">
    <priority>MINOR</priority>
    <name><![CDATA[Use preferred 'var' style: Elsewhere]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=SuggestVarOrType_Elsewhere">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SuggestVarOrType_SimpleTypes">
    <priority>MINOR</priority>
    <name><![CDATA[Use preferred 'var' style: When type is simple]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=SuggestVarOrType_SimpleTypes">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SuperCall">
    <priority>INFO</priority>
    <name><![CDATA[Invocation of parent class may be converted to super call]]></name>
    <description><![CDATA[Invocation of parent class may be converted to super call]]></description>
  </rule>
  <rule key="SuperCallProhibitsThis">
    <priority>CRITICAL</priority>
    <name><![CDATA['super' must be called before accessing 'this' in the constructor of a derived class.]]></name>
    <description><![CDATA['super' must be called before accessing 'this' in the constructor of a derived class.]]></description>
  </rule>
  <rule key="SuspiciousInstanceofCheck">
    <priority>MAJOR</priority>
    <name><![CDATA[Suspicious 'instanceof' check]]></name>
    <description><![CDATA[Suspicious 'instanceof' check]]></description>
  </rule>
  <rule key="SuspiciousLambdaBlock">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistake: ambiguous lambda block and object literal]]></name>
    <description><![CDATA[Possible mistake: ambiguous lambda block and object literal]]></description>
  </rule>
  <rule key="SuspiciousThisUsage">
    <priority>MAJOR</priority>
    <name><![CDATA[Suspicious 'this' usage in context of local function inside class member]]></name>
    <description><![CDATA[Suspicious 'this' usage in context of local function inside class member]]></description>
  </rule>
  <rule key="SuspiciousTypeConversion.Global">
    <priority>MAJOR</priority>
    <name><![CDATA[Suspicious type conversion or check]]></name>
    <description><![CDATA[Suspicious type conversion or check]]></description>
  </rule>
  <rule key="SuspiciousTypeofCheck">
    <priority>MAJOR</priority>
    <name><![CDATA[Suspicious 'typeof' check]]></name>
    <description><![CDATA[Suspicious 'typeof' check]]></description>
  </rule>
  <rule key="SwitchStatementMissingSomeCases">
    <priority>MINOR</priority>
    <name><![CDATA[Some values of the enum are not processed inside switch statement]]></name>
    <description><![CDATA[Some values of the enum are not processed inside switch statement]]></description>
  </rule>
  <rule key="SyntaxIsNotAllowed">
    <priority>MAJOR</priority>
    <name><![CDATA[Syntax is not allowed in specified CSS version]]></name>
    <description><![CDATA[Syntax is not allowed in specified CSS version]]></description>
  </rule>
  <rule key="TabsAreDisallowed">
    <priority>INFO</priority>
    <name><![CDATA[Usage of tabulation character for indentation is prohibited]]></name>
    <description><![CDATA[Usage of tabulation character for indentation is prohibited]]></description>
  </rule>
  <rule key="TailRecursiveCall">
    <priority>MINOR</priority>
    <name><![CDATA[Tail recursive call may be replaced with loop]]></name>
    <description><![CDATA[Tail recursive call may be replaced with loop]]></description>
  </rule>
  <rule key="TasksNotLoaded">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown tasks assembly]]></name>
    <description><![CDATA[Unknown tasks assembly]]></description>
  </rule>
  <rule key="TernaryCanBeReplacedByItsCondition">
    <priority>MAJOR</priority>
    <name><![CDATA[Ternary operator may be replaced by it's condition]]></name>
    <description><![CDATA[Ternary operator may be replaced by it's condition]]></description>
  </rule>
  <rule key="ThisInGlobalContext">
    <priority>MAJOR</priority>
    <name><![CDATA[Use of 'this' in global context]]></name>
    <description><![CDATA[Use of 'this' in global context]]></description>
  </rule>
  <rule key="ThreadStaticAtInstanceField">
    <priority>MAJOR</priority>
    <name><![CDATA[[ThreadStatic] doesn't work with instance fields]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ThreadStaticAtInstanceField">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ThreadStaticFieldHasInitializer">
    <priority>MAJOR</priority>
    <name><![CDATA[Thread static field has initializer]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ThreadStaticFieldHasInitializer">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ThrowMustBeFollowedByExpression">
    <priority>CRITICAL</priority>
    <name><![CDATA[Expression is expected after 'throw' statement]]></name>
    <description><![CDATA[Expression is expected after 'throw' statement]]></description>
  </rule>
  <rule key="TooWideLocalVariableScope">
    <priority>INFO</priority>
    <name><![CDATA[Local variable has too wide declaration scope]]></name>
    <description><![CDATA[Local variable has too wide declaration scope]]></description>
  </rule>
  <rule key="TreeNodeEnumerableCanBeUsedTag">
    <priority>INFO</priority>
    <name><![CDATA[TreeNodeEnumerableCanBeUsed]]></name>
    <description><![CDATA[TreeNodeEnumerableCanBeUsed]]></description>
  </rule>
  <rule key="TryCastAlwaysSucceeds">
    <priority>INFO</priority>
    <name><![CDATA[Safe cast expression always succeeds]]></name>
    <description><![CDATA[Safe cast expression always succeeds]]></description>
  </rule>
  <rule key="TryCastAndCheckForNull.0">
    <priority>MAJOR</priority>
    <name><![CDATA[Try cast and check for null may be replaced with type check: Try cast and check for null may be replaced with type check]]></name>
    <description><![CDATA[Try cast and check for null may be replaced with type check: Try cast and check for null may be replaced with type check]]></description>
  </rule>
  <rule key="TryCastAndCheckForNull.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Try cast and check for null may be replaced with type check: Try cast and check for null may be replaced with type check]]></name>
    <description><![CDATA[Try cast and check for null may be replaced with type check: Try cast and check for null may be replaced with type check]]></description>
  </rule>
  <rule key="TryStatementsCanBeMerged">
    <priority>MINOR</priority>
    <name><![CDATA[try-catch and try-finally statements can be merged]]></name>
    <description><![CDATA[try-catch and try-finally statements can be merged]]></description>
  </rule>
  <rule key="TsNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Use of undeclared variable]]></name>
    <description><![CDATA[Use of undeclared variable]]></description>
  </rule>
  <rule key="TsResolvedFromInaccessibleModule">
    <priority>CRITICAL</priority>
    <name><![CDATA[Cannot resolve, probably symbol is located in inaccessible module]]></name>
    <description><![CDATA[Cannot resolve, probably symbol is located in inaccessible module]]></description>
  </rule>
  <rule key="TypeGuardDoesntAffectAnything">
    <priority>MAJOR</priority>
    <name><![CDATA[Type guard doesn't affect variable's type in any way]]></name>
    <description><![CDATA[Type guard doesn't affect variable's type in any way]]></description>
  </rule>
  <rule key="TypeGuardProducesNeverType">
    <priority>MAJOR</priority>
    <name><![CDATA[Type guard definitely produces 'never' type for the variable]]></name>
    <description><![CDATA[Type guard definitely produces 'never' type for the variable]]></description>
  </rule>
  <rule key="TypeParameterCanBeVariant">
    <priority>INFO</priority>
    <name><![CDATA[Type parameter could be declared as covariant or contravariant]]></name>
    <description><![CDATA[Type parameter could be declared as covariant or contravariant]]></description>
  </rule>
  <rule key="TypeParameterHidesTypeParamFromOuterScope">
    <priority>MAJOR</priority>
    <name><![CDATA[Type parameter hides type parameter declared in outer scope]]></name>
    <description><![CDATA[Type parameter hides type parameter declared in outer scope]]></description>
  </rule>
  <rule key="UlTagContainsNonLiElements">
    <priority>MINOR</priority>
    <name><![CDATA[Elements not allowed in context: &lt;ul&gt; contains elements other than &lt;li&gt; or &lt;li&gt; is unclosed]]></name>
    <description><![CDATA[Elements not allowed in context: &lt;ul&gt; contains elements other than &lt;li&gt; or &lt;li&gt; is unclosed]]></description>
  </rule>
  <rule key="UnassignedField.Compiler">
    <priority>MAJOR</priority>
    <name><![CDATA[Unassigned field]]></name>
    <description><![CDATA[Unassigned field]]></description>
  </rule>
  <rule key="UnassignedField.Global">
    <priority>INFO</priority>
    <name><![CDATA[Unassigned field: Non-private accessibility]]></name>
    <description><![CDATA[Unassigned field: Non-private accessibility]]></description>
  </rule>
  <rule key="UnassignedField.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Unassigned field: Private accessibility]]></name>
    <description><![CDATA[Unassigned field: Private accessibility]]></description>
  </rule>
  <rule key="UnassignedGetOnlyAutoProperty">
    <priority>MAJOR</priority>
    <name><![CDATA[Get-only auto-property is never assigned]]></name>
    <description><![CDATA[Get-only auto-property is never assigned]]></description>
  </rule>
  <rule key="UnassignedReadonlyField">
    <priority>MAJOR</priority>
    <name><![CDATA[Unassigned readonly field]]></name>
    <description><![CDATA[Unassigned readonly field]]></description>
  </rule>
  <rule key="UnassignedReadonlyField.Compiler">
    <priority>MAJOR</priority>
    <name><![CDATA[Unassigned readonly field]]></name>
    <description><![CDATA[Unassigned readonly field]]></description>
  </rule>
  <rule key="UnclosedScript">
    <priority>CRITICAL</priority>
    <name><![CDATA[Script tag errors: Unclosed &lt;script&gt;]]></name>
    <description><![CDATA[Script tag errors: Unclosed &lt;script&gt;]]></description>
  </rule>
  <rule key="UndeclaredGlobalVariableUsing">
    <priority>MAJOR</priority>
    <name><![CDATA[Using of undeclared global variable]]></name>
    <description><![CDATA[Using of undeclared global variable]]></description>
  </rule>
  <rule key="UnexpectedValue">
    <priority>CRITICAL</priority>
    <name><![CDATA[Value is unexpected]]></name>
    <description><![CDATA[Value is unexpected]]></description>
  </rule>
  <rule key="UnknownCssClass">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown CSS class]]></name>
    <description><![CDATA[Unknown CSS class]]></description>
  </rule>
  <rule key="UnknownCssVariable">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown custom property]]></name>
    <description><![CDATA[Unknown custom property]]></description>
  </rule>
  <rule key="UnknownCssVendorExtension">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown vendor-specific extension]]></name>
    <description><![CDATA[Unknown vendor-specific extension]]></description>
  </rule>
  <rule key="UnknownItemGroup">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown item group]]></name>
    <description><![CDATA[Unknown item group]]></description>
  </rule>
  <rule key="UnknownMetadata">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown metadata]]></name>
    <description><![CDATA[Unknown metadata]]></description>
  </rule>
  <rule key="UnknownOutputParameter">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown output parameter]]></name>
    <description><![CDATA[Unknown output parameter]]></description>
  </rule>
  <rule key="UnknownProperty">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown property]]></name>
    <description><![CDATA[Unknown property]]></description>
  </rule>
  <rule key="UnknownTarget">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown target]]></name>
    <description><![CDATA[Unknown target]]></description>
  </rule>
  <rule key="UnknownTask">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown task]]></name>
    <description><![CDATA[Unknown task]]></description>
  </rule>
  <rule key="UnknownTaskAttribute">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown task attribute]]></name>
    <description><![CDATA[Unknown task attribute]]></description>
  </rule>
  <rule key="UnnecessaryWhitespace">
    <priority>INFO</priority>
    <name><![CDATA[Unnecessary whitespace at the end of line]]></name>
    <description><![CDATA[Unnecessary whitespace at the end of line]]></description>
  </rule>
  <rule key="UnreachableCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Unreachable code detected]]></name>
    <description><![CDATA[Unreachable code detected]]></description>
  </rule>
  <rule key="UnsafeCommaInObjectPropertiesList">
    <priority>MAJOR</priority>
    <name><![CDATA[Trailing redundant comma in object properties list may be error]]></name>
    <description><![CDATA[Trailing redundant comma in object properties list may be error]]></description>
  </rule>
  <rule key="UnsupportedRequiredBaseType">
    <priority>MAJOR</priority>
    <name><![CDATA[BaseTypeRequired attribute supports only classes and interfaces]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=UnsupportedRequiredBaseType">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="UnusedAnonymousMethodSignature">
    <priority>MAJOR</priority>
    <name><![CDATA[Anonymous method signature is not necessary]]></name>
    <description><![CDATA[Anonymous method signature is not necessary]]></description>
  </rule>
  <rule key="UnusedAutoPropertyAccessor.Global">
    <priority>MAJOR</priority>
    <name><![CDATA[Auto-property accessor is never used: Non-private accessibility]]></name>
    <description><![CDATA[Auto-property accessor is never used: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedAutoPropertyAccessor.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Auto-property accessor is never used: Private accessibility]]></name>
    <description><![CDATA[Auto-property accessor is never used: Private accessibility]]></description>
  </rule>
  <rule key="UnusedField.Compiler">
    <priority>MAJOR</priority>
    <name><![CDATA[Field is never used]]></name>
    <description><![CDATA[Field is never used]]></description>
  </rule>
  <rule key="UnusedImportClause">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused import clause]]></name>
    <description><![CDATA[Unused import clause]]></description>
  </rule>
  <rule key="UnusedInheritedParameter">
    <priority>MINOR</priority>
    <name><![CDATA[Unused parameter of inherited member]]></name>
    <description><![CDATA[Unused parameter of inherited member]]></description>
  </rule>
  <rule key="UnusedLabel">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused label]]></name>
    <description><![CDATA[Unused label]]></description>
  </rule>
  <rule key="UnusedLocalFunction">
    <priority>MAJOR</priority>
    <name><![CDATA[Local function is never used]]></name>
    <description><![CDATA[Local function is never used]]></description>
  </rule>
  <rule key="UnusedLocalFunctionParameter">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused parameter of local function]]></name>
    <description><![CDATA[Unused parameter of local function]]></description>
  </rule>
  <rule key="UnusedLocalFunctionReturnValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Local function return value is never used]]></name>
    <description><![CDATA[Local function return value is never used]]></description>
  </rule>
  <rule key="UnusedLocalImport">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused local import]]></name>
    <description><![CDATA[Unused local import]]></description>
  </rule>
  <rule key="UnusedLocals">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused local variable / function / class]]></name>
    <description><![CDATA[Unused local variable / function / class]]></description>
  </rule>
  <rule key="UnusedMember.Global">
    <priority>INFO</priority>
    <name><![CDATA[Type or member is never used: Non-private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=UnusedMember.Global">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="UnusedMember.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Type or member is never used: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=UnusedMember.Local">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="UnusedMemberHierarchy.Global">
    <priority>INFO</priority>
    <name><![CDATA[Type member is only used in overrides: Non-private accessibility]]></name>
    <description><![CDATA[Type member is only used in overrides: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedMemberHierarchy.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Type member is only used in overrides: Private accessibility]]></name>
    <description><![CDATA[Type member is only used in overrides: Private accessibility]]></description>
  </rule>
  <rule key="UnusedMemberInSuper.Global">
    <priority>INFO</priority>
    <name><![CDATA[Type member is never accessed via base type: Non-private accessibility]]></name>
    <description><![CDATA[Type member is never accessed via base type: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedMemberInSuper.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Type member is never accessed via base type: Private accessibility]]></name>
    <description><![CDATA[Type member is never accessed via base type: Private accessibility]]></description>
  </rule>
  <rule key="UnusedMethodReturnValue.Global">
    <priority>INFO</priority>
    <name><![CDATA[Method return value is never used: Non-private accessibility]]></name>
    <description><![CDATA[Method return value is never used: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedMethodReturnValue.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Method return value is never used: Private accessibility]]></name>
    <description><![CDATA[Method return value is never used: Private accessibility]]></description>
  </rule>
  <rule key="UnusedParameter">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused parameter]]></name>
    <description><![CDATA[Unused parameter]]></description>
  </rule>
  <rule key="UnusedParameter.Global">
    <priority>INFO</priority>
    <name><![CDATA[Unused parameter: Non-private accessibility]]></name>
    <description><![CDATA[Unused parameter: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedParameter.Local">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused parameter: Private accessibility]]></name>
    <description><![CDATA[Unused parameter: Private accessibility]]></description>
  </rule>
  <rule key="UnusedParameterInPartialMethod">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused parameter in partial method]]></name>
    <description><![CDATA[Unused parameter in partial method]]></description>
  </rule>
  <rule key="UnusedProperty">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused property or function]]></name>
    <description><![CDATA[Unused property or function]]></description>
  </rule>
  <rule key="UnusedTypeParameter">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused type parameter]]></name>
    <description><![CDATA[Unused type parameter]]></description>
  </rule>
  <rule key="UnusedVariable">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused local variable]]></name>
    <description><![CDATA[Unused local variable]]></description>
  </rule>
  <rule key="UnusedVariable.Compiler">
    <priority>MAJOR</priority>
    <name><![CDATA[Unused local variable]]></name>
    <description><![CDATA[Unused local variable]]></description>
  </rule>
  <rule key="UsageOfDefinitelyUnassignedValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Usage of unassigned local variable]]></name>
    <description><![CDATA[Usage of unassigned local variable]]></description>
  </rule>
  <rule key="UsageOfPossiblyUnassignedValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Usage of possibly unassigned local variable]]></name>
    <description><![CDATA[Usage of possibly unassigned local variable]]></description>
  </rule>
  <rule key="UseArrayCreationExpression.1">
    <priority>INFO</priority>
    <name><![CDATA[Use array creation expression: Use array creation expression]]></name>
    <description><![CDATA[Use array creation expression: Use array creation expression]]></description>
  </rule>
  <rule key="UseArrayCreationExpression.2">
    <priority>INFO</priority>
    <name><![CDATA[Use array creation expression: Use array creation expression]]></name>
    <description><![CDATA[Use array creation expression: Use array creation expression]]></description>
  </rule>
  <rule key="UseAsInsteadOfTypeCast">
    <priority>MINOR</priority>
    <name><![CDATA[Use 'as' operator instead of type assertion]]></name>
    <description><![CDATA[Use 'as' operator instead of type assertion]]></description>
  </rule>
  <rule key="UseCollectionCountProperty">
    <priority>INFO</priority>
    <name><![CDATA[Use collection's count property]]></name>
    <description><![CDATA[Use collection's count property]]></description>
  </rule>
  <rule key="UseFormatSpecifierInFormatString">
    <priority>INFO</priority>
    <name><![CDATA[Use format specifier in format strings]]></name>
    <description><![CDATA[Use format specifier in format strings]]></description>
  </rule>
  <rule key="UseFormatSpecifierInInterpolation">
    <priority>INFO</priority>
    <name><![CDATA[Use format specifier in interpolated strings]]></name>
    <description><![CDATA[Use format specifier in interpolated strings]]></description>
  </rule>
  <rule key="UseImplicitByValModifier">
    <priority>MINOR</priority>
    <name><![CDATA[Use implicit 'ByVal' modifier]]></name>
    <description><![CDATA[Use implicit 'ByVal' modifier]]></description>
  </rule>
  <rule key="UseImplicitlyTypedVariable">
    <priority>INFO</priority>
    <name><![CDATA[Use implicitly typed variable declaration]]></name>
    <description><![CDATA[Use implicitly typed variable declaration]]></description>
  </rule>
  <rule key="UseImplicitlyTypedVariableEvident">
    <priority>MINOR</priority>
    <name><![CDATA[Use implicitly typed variable declaration (evident)]]></name>
    <description><![CDATA[Use implicitly typed variable declaration (evident)]]></description>
  </rule>
  <rule key="UseIndexedProperty">
    <priority>INFO</priority>
    <name><![CDATA[Use indexed property]]></name>
    <description><![CDATA[Use indexed property]]></description>
  </rule>
  <rule key="UseIsOperator.1">
    <priority>INFO</priority>
    <name><![CDATA[Use 'is' operator: Use 'is' operator]]></name>
    <description><![CDATA[Use 'is' operator: Use 'is' operator]]></description>
  </rule>
  <rule key="UseIsOperator.2">
    <priority>INFO</priority>
    <name><![CDATA[Use 'is' operator: Use 'is' operator]]></name>
    <description><![CDATA[Use 'is' operator: Use 'is' operator]]></description>
  </rule>
  <rule key="UseMethodAny.0">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=UseMethodAny.0">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="UseMethodAny.1">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="UseMethodAny.2">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="UseMethodAny.3">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="UseMethodAny.4">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="UseMethodIsInstanceOfType">
    <priority>INFO</priority>
    <name><![CDATA[Use method IsInstanceOfType(..): Use method IsInstanceOfType(..)]]></name>
    <description><![CDATA[Use method IsInstanceOfType(..): Use method IsInstanceOfType(..)]]></description>
  </rule>
  <rule key="UseNameofExpression">
    <priority>INFO</priority>
    <name><![CDATA[Use 'nameof' expression to reference name]]></name>
    <description><![CDATA[Use 'nameof' expression to reference name]]></description>
  </rule>
  <rule key="UseNullPropagation">
    <priority>INFO</priority>
    <name><![CDATA[Replace if statement with null-propagating code]]></name>
    <description><![CDATA[Replace if statement with null-propagating code]]></description>
  </rule>
  <rule key="UseNullPropagationWhenPossible">
    <priority>INFO</priority>
    <name><![CDATA[Replace if statement with null-propagating code (when possible)]]></name>
    <description><![CDATA[Replace if statement with null-propagating code (when possible)]]></description>
  </rule>
  <rule key="UseObjectOrCollectionInitializer">
    <priority>INFO</priority>
    <name><![CDATA[Use object or collection initializer when possible]]></name>
    <description><![CDATA[Use object or collection initializer when possible]]></description>
  </rule>
  <rule key="UseOfImplicitGlobalInFunctionScope">
    <priority>MAJOR</priority>
    <name><![CDATA[Use of implicitly declared global variable]]></name>
    <description><![CDATA[Use of implicitly declared global variable]]></description>
  </rule>
  <rule key="UseOfPossiblyUnassignedProperty">
    <priority>MAJOR</priority>
    <name><![CDATA[Use of possibly unassigned property in a static initializer]]></name>
    <description><![CDATA[Use of possibly unassigned property in a static initializer]]></description>
  </rule>
  <rule key="UseStringInterpolation">
    <priority>INFO</priority>
    <name><![CDATA[Use string interpolation expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=UseStringInterpolation">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="UseVerbatimString">
    <priority>MINOR</priority>
    <name><![CDATA[Literal's length can be reduced by using verbatim string]]></name>
    <description><![CDATA[Literal's length can be reduced by using verbatim string]]></description>
  </rule>
  <rule key="UsingOfReservedWord">
    <priority>MAJOR</priority>
    <name><![CDATA[Use of future reserved word]]></name>
    <description><![CDATA[Use of future reserved word]]></description>
  </rule>
  <rule key="UsingOfReservedWordError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Using of future reserved keywords in 'strict mode']]></name>
    <description><![CDATA[Using of future reserved keywords in 'strict mode']]></description>
  </rule>
  <rule key="VBCheckForReferenceEqualityInstead.1">
    <priority>INFO</priority>
    <name><![CDATA[Check for reference equality instead: Check for reference equality instead]]></name>
    <description><![CDATA[Check for reference equality instead: Check for reference equality instead]]></description>
  </rule>
  <rule key="VBCheckForReferenceEqualityInstead.2">
    <priority>INFO</priority>
    <name><![CDATA[Check for reference equality instead: Check for reference equality instead]]></name>
    <description><![CDATA[Check for reference equality instead: Check for reference equality instead]]></description>
  </rule>
  <rule key="VBPossibleMistakenArgument">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken argument: Possible mistaken argument]]></name>
    <description><![CDATA[Possible mistaken argument: Possible mistaken argument]]></description>
  </rule>
  <rule key="VBPossibleMistakenCallToGetType.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></name>
    <description><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></description>
  </rule>
  <rule key="VBPossibleMistakenCallToGetType.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></name>
    <description><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></description>
  </rule>
  <rule key="VBRemoveToList.1">
    <priority>INFO</priority>
    <name><![CDATA[Remove ToList(): Remove ToList()]]></name>
    <description><![CDATA[Remove ToList(): Remove ToList()]]></description>
  </rule>
  <rule key="VBRemoveToList.2">
    <priority>INFO</priority>
    <name><![CDATA[Remove ToList(): Remove ToList()]]></name>
    <description><![CDATA[Remove ToList(): Remove ToList()]]></description>
  </rule>
  <rule key="VBReplaceWithFirstOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="VBReplaceWithLastOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType(Of ..)()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType(Of ..)()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType(Of ..)()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;(): Replace with OfType(Of ..)()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Any.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Any(): Replace with OfType(Of ..)().Any()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Any(): Replace with OfType(Of ..)().Any()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Any.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Any(): Replace with OfType(Of ..)().Any(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Any(): Replace with OfType(Of ..)().Any(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Count.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Count(): Replace with OfType(Of ..)().Count()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Count(): Replace with OfType(Of ..)().Count()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Count.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Count(): Replace with OfType(Of ..)().Count(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Count(): Replace with OfType(Of ..)().Count(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.First.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().First(): Replace with OfType(Of ..)().First()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().First(): Replace with OfType(Of ..)().First()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.First.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().First(): Replace with OfType(Of ..)().First(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().First(): Replace with OfType(Of ..)().First(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.FirstOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().FirstOrDefault(): Replace with OfType(Of ..)().FirstOrDefault()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().FirstOrDefault(): Replace with OfType(Of ..)().FirstOrDefault()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.FirstOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().FirstOrDefault(): Replace with OfType(Of ..)().FirstOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().FirstOrDefault(): Replace with OfType(Of ..)().FirstOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Last.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Last(): Replace with OfType(Of ..)().Last()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Last(): Replace with OfType(Of ..)().Last()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Last.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Last(): Replace with OfType(Of ..)().Last(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Last(): Replace with OfType(Of ..)().Last(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.LastOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().LastOrDefault(): Replace with OfType(Of ..)().LastOrDefault()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().LastOrDefault(): Replace with OfType(Of ..)().LastOrDefault()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.LastOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().LastOrDefault(): Replace with OfType(Of ..)().LastOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().LastOrDefault(): Replace with OfType(Of ..)().LastOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Single.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Single(): Replace with OfType(Of ..)().Single()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Single(): Replace with OfType(Of ..)().Single()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Single.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Single(): Replace with OfType(Of ..)().Single(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Single(): Replace with OfType(Of ..)().Single(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.SingleOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().SingleOrDefault(): Replace with OfType(Of ..)().SingleOrDefault()]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().SingleOrDefault(): Replace with OfType(Of ..)().SingleOrDefault()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.SingleOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().SingleOrDefault(): Replace with OfType(Of ..)().SingleOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().SingleOrDefault(): Replace with OfType(Of ..)().SingleOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Where">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType&lt;T&gt;().Where(): Replace with OfType(Of ..)().Where(..)]]></name>
    <description><![CDATA[Replace with OfType&lt;T&gt;().Where(): Replace with OfType(Of ..)().Where(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleAssignment.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single assignment: Replace with single assignment]]></name>
    <description><![CDATA[Replace with single assignment: Replace with single assignment]]></description>
  </rule>
  <rule key="VBReplaceWithSingleAssignment.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single assignment: Replace with single assignment]]></name>
    <description><![CDATA[Replace with single assignment: Replace with single assignment]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToAny">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Any(..): Replace with single call to Any(..)]]></name>
    <description><![CDATA[Replace with single call to Any(..): Replace with single call to Any(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToCount">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Count(..): Replace with single call to Count(..)]]></name>
    <description><![CDATA[Replace with single call to Count(..): Replace with single call to Count(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToFirst">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to First(..): Replace with single call to First(..)]]></name>
    <description><![CDATA[Replace with single call to First(..): Replace with single call to First(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToFirstOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to FirstOrDefault(..): Replace with single call to FirstOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to FirstOrDefault(..): Replace with single call to FirstOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToLast">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Last(..): Replace with single call to Last(..)]]></name>
    <description><![CDATA[Replace with single call to Last(..): Replace with single call to Last(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToLastOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to LastOrDefault(..): Replace with single call to LastOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to LastOrDefault(..): Replace with single call to LastOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToSingle">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Single(..): Replace with single call to Single(..)]]></name>
    <description><![CDATA[Replace with single call to Single(..): Replace with single call to Single(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToSingleOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to SingleOrDefault(..): Replace with single call to SingleOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to SingleOrDefault(..): Replace with single call to SingleOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.1">
    <priority>INFO</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.10">
    <priority>MINOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.2">
    <priority>INFO</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.3">
    <priority>INFO</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.4">
    <priority>INFO</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.5">
    <priority>INFO</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.6">
    <priority>INFO</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.7">
    <priority>MINOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.8">
    <priority>MINOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.9">
    <priority>MINOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.1">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.2">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.3">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.4">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.5">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.6">
    <priority>MAJOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareToIsCultureSpecific">
    <priority>MAJOR</priority>
    <name><![CDATA[String.CompareTo is culture-specific: String.CompareTo is culture-specific]]></name>
    <description><![CDATA[String.CompareTo is culture-specific: String.CompareTo is culture-specific]]></description>
  </rule>
  <rule key="VBStringEndsWithIsCultureSpecific">
    <priority>INFO</priority>
    <name><![CDATA[String.EndsWith is culture-specific: String.EndsWith(string) is culture-specific]]></name>
    <description><![CDATA[String.EndsWith is culture-specific: String.EndsWith(string) is culture-specific]]></description>
  </rule>
  <rule key="VBStringIndexOfIsCultureSpecific.1">
    <priority>MAJOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string) is culture-specific]]></description>
  </rule>
  <rule key="VBStringIndexOfIsCultureSpecific.2">
    <priority>MAJOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringIndexOfIsCultureSpecific.3">
    <priority>MAJOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringLastIndexOfIsCultureSpecific.1">
    <priority>MAJOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string) is culture-specific]]></description>
  </rule>
  <rule key="VBStringLastIndexOfIsCultureSpecific.2">
    <priority>MAJOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringLastIndexOfIsCultureSpecific.3">
    <priority>MAJOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringStartsWithIsCultureSpecific">
    <priority>INFO</priority>
    <name><![CDATA[String.StartsWith is culture-specific: String.StartsWith(string) is culture-specific]]></name>
    <description><![CDATA[String.StartsWith is culture-specific: String.StartsWith(string) is culture-specific]]></description>
  </rule>
  <rule key="VBUseArrayCreationExpression.1">
    <priority>INFO</priority>
    <name><![CDATA[Use array creation expression: Use array creation expression]]></name>
    <description><![CDATA[Use array creation expression: Use array creation expression]]></description>
  </rule>
  <rule key="VBUseArrayCreationExpression.2">
    <priority>INFO</priority>
    <name><![CDATA[Use array creation expression: Use array creation expression]]></name>
    <description><![CDATA[Use array creation expression: Use array creation expression]]></description>
  </rule>
  <rule key="VBUseFirstInstead">
    <priority>MAJOR</priority>
    <name><![CDATA[Use First() instead: Use First() instead]]></name>
    <description><![CDATA[Use First() instead: Use First() instead]]></description>
  </rule>
  <rule key="VBUseMethodAny.1">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodAny.2">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodAny.3">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodAny.4">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodAny.5">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodIsInstanceOfType">
    <priority>INFO</priority>
    <name><![CDATA[Use method IsInstanceOfType(..): Use method IsInstanceOfType(..)]]></name>
    <description><![CDATA[Use method IsInstanceOfType(..): Use method IsInstanceOfType(..)]]></description>
  </rule>
  <rule key="VBUseTypeOfIsOperator.1">
    <priority>INFO</priority>
    <name><![CDATA[Use 'TypeOf .. Is ..' operator: Use 'TypeOf .. Is ..' operator]]></name>
    <description><![CDATA[Use 'TypeOf .. Is ..' operator: Use 'TypeOf .. Is ..' operator]]></description>
  </rule>
  <rule key="VBUseTypeOfIsOperator.2">
    <priority>INFO</priority>
    <name><![CDATA[Use 'TypeOf .. Is ..' operator: Use 'TypeOf .. Is ..' operator]]></name>
    <description><![CDATA[Use 'TypeOf .. Is ..' operator: Use 'TypeOf .. Is ..' operator]]></description>
  </rule>
  <rule key="VBWarnings::BC40000">
    <priority>MAJOR</priority>
    <name><![CDATA[Use obsolete member]]></name>
    <description><![CDATA[Use obsolete member]]></description>
  </rule>
  <rule key="VBWarnings::BC400005">
    <priority>MAJOR</priority>
    <name><![CDATA[Member shadows an overriable member]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/fs06ef5d.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="VBWarnings::BC40008">
    <priority>MAJOR</priority>
    <name><![CDATA[Use obsolete member (without message)]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/s5f0ewa6.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="VBWarnings::BC40056">
    <priority>MAJOR</priority>
    <name><![CDATA[Namespace or type specified in the Imports 'name' doesn't contain any public member or cannot be found]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/ms234657.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="VBWarnings::BC42016">
    <priority>MAJOR</priority>
    <name><![CDATA[Runtime errors might occur when converting X to Y]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/56k670kt.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="VBWarnings::BC42025">
    <priority>MAJOR</priority>
    <name><![CDATA[Access of shared member through an instance]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/y6t76186.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="VBWarnings::BC42104">
    <priority>MAJOR</priority>
    <name><![CDATA[Variable is used before it has been assigned a value]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/3fdk625a.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="VBWarnings::BC42105,BC42106,BC42107">
    <priority>MAJOR</priority>
    <name><![CDATA[Function doesn't return a value on all code paths]]></name>
    <description><![CDATA[Function doesn't return a value on all code paths]]></description>
  </rule>
  <rule key="VBWarnings::BC42304">
    <priority>MAJOR</priority>
    <name><![CDATA[Syntax error in XML comment]]></name>
    <description><![CDATA[Syntax error in XML comment]]></description>
  </rule>
  <rule key="VBWarnings::BC42309">
    <priority>MAJOR</priority>
    <name><![CDATA[XML comment has a tag with a 'cref' attribute that could not be resolved]]></name>
    <description><![CDATA[XML comment has a tag with a 'cref' attribute that could not be resolved]]></description>
  </rule>
  <rule key="VBWarnings::BC42322">
    <priority>MAJOR</priority>
    <name><![CDATA[Runtime errors might occur when converting X to Y]]></name>
    <description><![CDATA[Runtime errors might occur when converting X to Y]]></description>
  </rule>
  <rule key="VBWarnings::BC42349">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant DirectCast to the equals value type]]></name>
    <description><![CDATA[Redundant DirectCast to the equals value type]]></description>
  </rule>
  <rule key="VBWarnings::BC42353,BC42354,BC42355">
    <priority>MAJOR</priority>
    <name><![CDATA[Function doesn't return a value on all code paths]]></name>
    <description><![CDATA[Function doesn't return a value on all code paths]]></description>
  </rule>
  <rule key="VBWarnings::BC42356">
    <priority>MAJOR</priority>
    <name><![CDATA[Async method lacks 'Await' operators]]></name>
    <description><![CDATA[Async method lacks 'Await' operators]]></description>
  </rule>
  <rule key="VBWarnings::BC42358">
    <priority>MAJOR</priority>
    <name><![CDATA[Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'Await' operator to the result of the call.]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://msdn.microsoft.com/en-us/library/hh965065.aspx">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="VBWarnings::WME006">
    <priority>MAJOR</priority>
    <name><![CDATA[Namespace should be default namespace of this project]]></name>
    <description><![CDATA[Namespace should be default namespace of this project]]></description>
  </rule>
  <rule key="ValueParameterNotUsed">
    <priority>MAJOR</priority>
    <name><![CDATA['value' parameter is not used]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="https://www.jetbrains.com/resharperplatform/help?Keyword=ValueParameterNotUsed">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="VariableCanBeMadeConst">
    <priority>MINOR</priority>
    <name><![CDATA[Variable can be made constant]]></name>
    <description><![CDATA[Variable can be made constant]]></description>
  </rule>
  <rule key="VariableCanBeMadeLet">
    <priority>MINOR</priority>
    <name><![CDATA['var' variable can be made 'let' variable]]></name>
    <description><![CDATA['var' variable can be made 'let' variable]]></description>
  </rule>
  <rule key="VariableCanBeMovedToInnerBlock">
    <priority>MINOR</priority>
    <name><![CDATA[Local variable can be safely moved to inner block]]></name>
    <description><![CDATA[Local variable can be safely moved to inner block]]></description>
  </rule>
  <rule key="VariableUsedBeforeDeclared">
    <priority>MAJOR</priority>
    <name><![CDATA[Variable is used before it is declared]]></name>
    <description><![CDATA[Variable is used before it is declared]]></description>
  </rule>
  <rule key="VariableUsedInInnerScopeBeforeDeclared">
    <priority>MAJOR</priority>
    <name><![CDATA[Variable is used in inner scope before it is declared]]></name>
    <description><![CDATA[Variable is used in inner scope before it is declared]]></description>
  </rule>
  <rule key="VariableUsedOutOfScope">
    <priority>MAJOR</priority>
    <name><![CDATA[Variable is used outside of scope which it is declared]]></name>
    <description><![CDATA[Variable is used outside of scope which it is declared]]></description>
  </rule>
  <rule key="VbUnreachableCode">
    <priority>MAJOR</priority>
    <name><![CDATA[Unreachable code]]></name>
    <description><![CDATA[Unreachable code]]></description>
  </rule>
  <rule key="VirtualMemberCallInConstructor">
    <priority>MAJOR</priority>
    <name><![CDATA[Virtual member call in constructor]]></name>
    <description><![CDATA[Virtual member call in constructor]]></description>
  </rule>
  <rule key="VirtualMemberNeverOverridden.Global">
    <priority>INFO</priority>
    <name><![CDATA[Virtual(overridable) member is never overridden: Non-private accessibility]]></name>
    <description><![CDATA[Virtual(overridable) member is never overridden: Non-private accessibility]]></description>
  </rule>
  <rule key="VirtualMemberNeverOverridden.Local">
    <priority>INFO</priority>
    <name><![CDATA[Virtual(overridable) member is never overridden: Private accessibility]]></name>
    <description><![CDATA[Virtual(overridable) member is never overridden: Private accessibility]]></description>
  </rule>
  <rule key="VoidMethodWithMustUseReturnValueAttribute">
    <priority>MAJOR</priority>
    <name><![CDATA['void' method is annotated by [MustUseReturnValue] attribute]]></name>
    <description><![CDATA['void' method is annotated by [MustUseReturnValue] attribute]]></description>
  </rule>
  <rule key="Web.IgnoredPath">
    <priority>INFO</priority>
    <name><![CDATA[Ignored path]]></name>
    <description><![CDATA[Ignored path]]></description>
  </rule>
  <rule key="Web.MappedPath">
    <priority>MINOR</priority>
    <name><![CDATA[Mapped path]]></name>
    <description><![CDATA[Mapped path]]></description>
  </rule>
  <rule key="WebConfig.ModuleQualificationResolve">
    <priority>MAJOR</priority>
    <name><![CDATA[Module qualification required]]></name>
    <description><![CDATA[Module qualification required]]></description>
  </rule>
  <rule key="WebConfig.RedundantAddNamespaceTag">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant add namespace element]]></name>
    <description><![CDATA[Redundant add namespace element]]></description>
  </rule>
  <rule key="WebConfig.RedundantLocationTag">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant location element]]></name>
    <description><![CDATA[Redundant location element]]></description>
  </rule>
  <rule key="WebConfig.TagPrefixRedundand">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant tagPrefix declaration]]></name>
    <description><![CDATA[Redundant tagPrefix declaration]]></description>
  </rule>
  <rule key="WebConfig.UnusedAddTag">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant add element]]></name>
    <description><![CDATA[Redundant add element]]></description>
  </rule>
  <rule key="WebConfig.UnusedElementDueToConfigSourceAttribute">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant element or attribute because of 'configSource' attribute]]></name>
    <description><![CDATA[Redundant element or attribute because of 'configSource' attribute]]></description>
  </rule>
  <rule key="WebConfig.UnusedRemoveOrClearTag">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant remove or clear element]]></name>
    <description><![CDATA[Redundant remove or clear element]]></description>
  </rule>
  <rule key="WebConfig.WebConfigPathWarning">
    <priority>MAJOR</priority>
    <name><![CDATA[Referenced path cannot be found in the website]]></name>
    <description><![CDATA[Referenced path cannot be found in the website]]></description>
  </rule>
  <rule key="WithStatementUsingError">
    <priority>CRITICAL</priority>
    <name><![CDATA[Using of 'with' statements in 'strict mode']]></name>
    <description><![CDATA[Using of 'with' statements in 'strict mode']]></description>
  </rule>
  <rule key="WrongExpressionStatement">
    <priority>MAJOR</priority>
    <name><![CDATA[Suspicious expression statement]]></name>
    <description><![CDATA[Suspicious expression statement]]></description>
  </rule>
  <rule key="WrongMetadataUse">
    <priority>INFO</priority>
    <name><![CDATA[Wrong metadata use]]></name>
    <description><![CDATA[Wrong metadata use]]></description>
  </rule>
  <rule key="WrongPublicModifierSpecification">
    <priority>MINOR</priority>
    <name><![CDATA[Non-compliant 'public' modifier or its absense]]></name>
    <description><![CDATA[Non-compliant 'public' modifier or its absense]]></description>
  </rule>
  <rule key="WrongRequireRelativePath">
    <priority>MINOR</priority>
    <name><![CDATA[Non-compliant path style inside 'require']]></name>
    <description><![CDATA[Non-compliant path style inside 'require']]></description>
  </rule>
  <rule key="Xaml.BindingWithContextNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unresolved binding path when DataContext is known]]></name>
    <description><![CDATA[Unresolved binding path when DataContext is known]]></description>
  </rule>
  <rule key="Xaml.BindingWithoutContextNotResolved">
    <priority>MINOR</priority>
    <name><![CDATA[Unresolved binding path when DataContext is unknown]]></name>
    <description><![CDATA[Unresolved binding path when DataContext is unknown]]></description>
  </rule>
  <rule key="Xaml.ConstructorWarning">
    <priority>MAJOR</priority>
    <name><![CDATA[Constructor not resolved]]></name>
    <description><![CDATA[Constructor not resolved]]></description>
  </rule>
  <rule key="Xaml.DependencyPropertyResolveError">
    <priority>MAJOR</priority>
    <name><![CDATA[Dependency property descriptor field missing]]></name>
    <description><![CDATA[Dependency property descriptor field missing]]></description>
  </rule>
  <rule key="Xaml.DuplicateStyleSetter">
    <priority>MAJOR</priority>
    <name><![CDATA[Duplicate style property/event setter]]></name>
    <description><![CDATA[Duplicate style property/event setter]]></description>
  </rule>
  <rule key="Xaml.DynamicResourceError">
    <priority>CRITICAL</priority>
    <name><![CDATA[{DynamicResource} can only be used with dependency property]]></name>
    <description><![CDATA[{DynamicResource} can only be used with dependency property]]></description>
  </rule>
  <rule key="Xaml.ElementNameReferenceNotResolved">
    <priority>CRITICAL</priority>
    <name><![CDATA[Element name reference not resolved]]></name>
    <description><![CDATA[Element name reference not resolved]]></description>
  </rule>
  <rule key="Xaml.IgnoredPathHighlighting">
    <priority>INFO</priority>
    <name><![CDATA[Ignored path]]></name>
    <description><![CDATA[Ignored path]]></description>
  </rule>
  <rule key="Xaml.IndexOutOfGridDefinition">
    <priority>MAJOR</priority>
    <name><![CDATA[Grid element column/row index is out of grid definition range]]></name>
    <description><![CDATA[Grid element column/row index is out of grid definition range]]></description>
  </rule>
  <rule key="Xaml.InvalidMemberType">
    <priority>CRITICAL</priority>
    <name><![CDATA[Member of invalid type]]></name>
    <description><![CDATA[Member of invalid type]]></description>
  </rule>
  <rule key="Xaml.InvalidResourceTargetType">
    <priority>CRITICAL</priority>
    <name><![CDATA[XAML style of invalid target type]]></name>
    <description><![CDATA[XAML style of invalid target type]]></description>
  </rule>
  <rule key="Xaml.InvalidResourceType">
    <priority>CRITICAL</priority>
    <name><![CDATA[XAML resource of invalid type]]></name>
    <description><![CDATA[XAML resource of invalid type]]></description>
  </rule>
  <rule key="Xaml.InvalidType">
    <priority>CRITICAL</priority>
    <name><![CDATA[Object/markup extension of invalid type]]></name>
    <description><![CDATA[Object/markup extension of invalid type]]></description>
  </rule>
  <rule key="Xaml.LanguageLevel">
    <priority>CRITICAL</priority>
    <name><![CDATA[XAML language level error]]></name>
    <description><![CDATA[XAML language level error]]></description>
  </rule>
  <rule key="Xaml.MappedPathHighlighting">
    <priority>MINOR</priority>
    <name><![CDATA[Mapped path]]></name>
    <description><![CDATA[Mapped path]]></description>
  </rule>
  <rule key="Xaml.MissingGridIndex">
    <priority>MAJOR</priority>
    <name><![CDATA[Missing grid column/row setter for non-first child]]></name>
    <description><![CDATA[Missing grid column/row setter for non-first child]]></description>
  </rule>
  <rule key="Xaml.PathError">
    <priority>MAJOR</priority>
    <name><![CDATA[Path error]]></name>
    <description><![CDATA[Path error]]></description>
  </rule>
  <rule key="Xaml.RedundantAttachedProperty">
    <priority>MAJOR</priority>
    <name><![CDATA[Remove redundant attached property setter]]></name>
    <description><![CDATA[Remove redundant attached property setter]]></description>
  </rule>
  <rule key="Xaml.RedundantCollectionProperty">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant empty collection property setter]]></name>
    <description><![CDATA[Redundant empty collection property setter]]></description>
  </rule>
  <rule key="Xaml.RedundantFreezeAttribute">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant 'Freeze' attribute]]></name>
    <description><![CDATA[Redundant 'Freeze' attribute]]></description>
  </rule>
  <rule key="Xaml.RedundantGridDefinitions">
    <priority>MAJOR</priority>
    <name><![CDATA[Single grid row/column definition is redundant]]></name>
    <description><![CDATA[Single grid row/column definition is redundant]]></description>
  </rule>
  <rule key="Xaml.RedundantGridSpan">
    <priority>MAJOR</priority>
    <name><![CDATA[Single-cell grid column/row span is redundant]]></name>
    <description><![CDATA[Single-cell grid column/row span is redundant]]></description>
  </rule>
  <rule key="Xaml.RedundantModifiersAttribute">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant modifiers attribute]]></name>
    <description><![CDATA[Redundant modifiers attribute]]></description>
  </rule>
  <rule key="Xaml.RedundantNameAttribute">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant name attribute]]></name>
    <description><![CDATA[Redundant name attribute]]></description>
  </rule>
  <rule key="Xaml.RedundantNamespaceAlias">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant namespace alias]]></name>
    <description><![CDATA[Redundant namespace alias]]></description>
  </rule>
  <rule key="Xaml.RedundantPropertyTypeQualifier">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant property type qualifier]]></name>
    <description><![CDATA[Redundant property type qualifier]]></description>
  </rule>
  <rule key="Xaml.RedundantResource">
    <priority>MAJOR</priority>
    <name><![CDATA[Redundant resource]]></name>
    <description><![CDATA[Redundant resource]]></description>
  </rule>
  <rule key="Xaml.RedundantStyledValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Property value is equal to style-provided]]></name>
    <description><![CDATA[Property value is equal to style-provided]]></description>
  </rule>
  <rule key="Xaml.RoutedEventResolveError">
    <priority>MAJOR</priority>
    <name><![CDATA[Routed event descriptor field missing]]></name>
    <description><![CDATA[Routed event descriptor field missing]]></description>
  </rule>
  <rule key="Xaml.StaticResourceNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Static resource not resolved]]></name>
    <description><![CDATA[Static resource not resolved]]></description>
  </rule>
  <rule key="Xaml.StyleInvalidTargetType">
    <priority>CRITICAL</priority>
    <name><![CDATA[Style target type is not convertible to base type]]></name>
    <description><![CDATA[Style target type is not convertible to base type]]></description>
  </rule>
  <rule key="Xaml.XKeyAttributeDisallowed">
    <priority>CRITICAL</priority>
    <name><![CDATA[x:Key is allowed for resources and dictionary elements only]]></name>
    <description><![CDATA[x:Key is allowed for resources and dictionary elements only]]></description>
  </rule>
  <rule key="Xaml.XamlDuplicateDeviceFamilyTypeViewHighlighting">
    <priority>CRITICAL</priority>
    <name><![CDATA[Duplicate device family view]]></name>
    <description><![CDATA[Duplicate device family view]]></description>
  </rule>
  <rule key="Xaml.XamlMismatchedDeviceFamilyViewClrNameHighlighting">
    <priority>MAJOR</priority>
    <name><![CDATA[DeveiceFamily-specific view type name does not match generic type name]]></name>
    <description><![CDATA[DeveiceFamily-specific view type name does not match generic type name]]></description>
  </rule>
  <rule key="Xaml.XamlRelativeSourceDefaultModeWarningHighlighting">
    <priority>MAJOR</priority>
    <name><![CDATA[RelativeSourceMode is not set explicitly]]></name>
    <description><![CDATA[RelativeSourceMode is not set explicitly]]></description>
  </rule>
  <rule key="Xaml.XamlUnknownDeviceFamilyTypeHighlighting">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown DeviceFamily]]></name>
    <description><![CDATA[Unknown DeviceFamily]]></description>
  </rule>
  <rule key="XmlDocCommentSyntaxProblem">
    <priority>MAJOR</priority>
    <name><![CDATA[Illegal syntax in XML code comment]]></name>
    <description><![CDATA[Illegal syntax in XML code comment]]></description>
  </rule>
</rules>